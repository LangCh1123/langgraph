gqd2ZXJzaW9uAaxpbnRlcmFjdGlvbnORgqdyZXF1ZXN0hKZtZXRob2SkUE9TVKN1cmnZJWh0dHBzOi8vYXBpLmFudGhyb3BpYy5jb20vdjEvbWVzc2FnZXOkYm9kedsAAUjUeyJtYXhfdG9rZW5zIjogMTAyNCwgIm1lc3NhZ2VzIjogW3sicm9sZSI6ICJ1c2VyIiwgImNvbnRlbnQiOiAiSG93IGRvIEkgYnVpbGQgYSBSQUcgY2hhaW4gaW4gTENFTD8ifV0sICJtb2RlbCI6ICJjbGF1ZGUtMy1vcHVzLTIwMjQwMjI5IiwgInN5c3RlbSI6ICI8aW5zdHJ1Y3Rpb25zPiBZb3UgYXJlIGEgY29kaW5nIGFzc2lzdGFudCB3aXRoIGV4cGVydGlzZSBpbiBMQ0VMLCBMYW5nQ2hhaW4gZXhwcmVzc2lvbiBsYW5ndWFnZS4gXG4gXG4gICAgICAgIEhlcmUgaXMgdGhlIExDRUwgZG9jdW1lbnRhdGlvbjogIFxuIC0tLS0tLS0gXG4gIFxuXG5cblxuXG5Db25jZXB0dWFsIGd1aWRlIHwgXHVkODNlXHVkZDljXHVmZTBmXHVkODNkXHVkZDE3IExhbmdDaGFpblxuXG5cblxuXG5cblxuXG5Ta2lwIHRvIG1haW4gY29udGVudFNoYXJlIHlvdXIgdGhvdWdodHMgb24gQUkgYWdlbnRzLiBUYWtlIHRoZSAzLW1pbiBzdXJ2ZXkuSW50ZWdyYXRpb25zQVBJIFJlZmVyZW5jZU1vcmVDb250cmlidXRpbmdQZW9wbGVMYW5nU21pdGhMYW5nR3JhcGhMYW5nQ2hhaW4gSHViTGFuZ0NoYWluIEpTL1RTdjAuM3YwLjN2MC4ydjAuMVx1ZDgzZFx1ZGNhY1NlYXJjaEludHJvZHVjdGlvblR1dG9yaWFsc0J1aWxkIGEgUXVlc3Rpb24gQW5zd2VyaW5nIGFwcGxpY2F0aW9uIG92ZXIgYSBHcmFwaCBEYXRhYmFzZVR1dG9yaWFsc0J1aWxkIGEgU2ltcGxlIExMTSBBcHBsaWNhdGlvbiB3aXRoIExDRUxCdWlsZCBhIFF1ZXJ5IEFuYWx5c2lzIFN5c3RlbUJ1aWxkIGEgQ2hhdGJvdENvbnZlcnNhdGlvbmFsIFJBR0J1aWxkIGFuIEV4dHJhY3Rpb24gQ2hhaW5CdWlsZCBhbiBBZ2VudFRhZ2dpbmdkYXRhX2dlbmVyYXRpb25CdWlsZCBhIExvY2FsIFJBRyBBcHBsaWNhdGlvbkJ1aWxkIGEgUERGIGluZ2VzdGlvbiBhbmQgUXVlc3Rpb24vQW5zd2VyaW5nIHN5c3RlbUJ1aWxkIGEgUmV0cmlldmFsIEF1Z21lbnRlZCBHZW5lcmF0aW9uIChSQUcpIEFwcFZlY3RvciBzdG9yZXMgYW5kIHJldHJpZXZlcnNCdWlsZCBhIFF1ZXN0aW9uL0Fuc3dlcmluZyBzeXN0ZW0gb3ZlciBTUUwgZGF0YVN1bW1hcml6ZSBUZXh0SG93LXRvIGd1aWRlc0hvdy10byBndWlkZXNIb3cgdG8gdXNlIHRvb2xzIGluIGEgY2hhaW5Ib3cgdG8gdXNlIGEgdmVjdG9yc3RvcmUgYXMgYSByZXRyaWV2ZXJIb3cgdG8gYWRkIG1lbW9yeSB0byBjaGF0Ym90c0hvdyB0byB1c2UgZXhhbXBsZSBzZWxlY3RvcnNIb3cgdG8gbWFwIHZhbHVlcyB0byBhIGdyYXBoIGRhdGFiYXNlSG93IHRvIGFkZCBhIHNlbWFudGljIGxheWVyIG92ZXIgZ3JhcGggZGF0YWJhc2VIb3cgdG8gaW52b2tlIHJ1bm5hYmxlcyBpbiBwYXJhbGxlbEhvdyB0byBzdHJlYW0gY2hhdCBtb2RlbCByZXNwb25zZXNIb3cgdG8gYWRkIGRlZmF1bHQgaW52b2NhdGlvbiBhcmdzIHRvIGEgUnVubmFibGVIb3cgdG8gYWRkIHJldHJpZXZhbCB0byBjaGF0Ym90c0hvdyB0byB1c2UgZmV3IHNob3QgZXhhbXBsZXMgaW4gY2hhdCBtb2RlbHNIb3cgdG8gZG8gdG9vbC9mdW5jdGlvbiBjYWxsaW5nSG93IHRvIGJlc3QgcHJvbXB0IGZvciBHcmFwaC1SQUdIb3cgdG8gaW5zdGFsbCBMYW5nQ2hhaW4gcGFja2FnZXNIb3cgdG8gYWRkIGV4YW1wbGVzIHRvIHRoZSBwcm9tcHQgZm9yIHF1ZXJ5IGFuYWx5c2lzSG93IHRvIHVzZSBmZXcgc2hvdCBleGFtcGxlc0hvdyB0byBydW4gY3VzdG9tIGZ1bmN0aW9uc0hvdyB0byB1c2Ugb3V0cHV0IHBhcnNlcnMgdG8gcGFyc2UgYW4gTExNIHJlc3BvbnNlIGludG8gc3RydWN0dXJlZCBmb3JtYXRIb3cgdG8gaGFuZGxlIGNhc2VzIHdoZXJlIG5vIHF1ZXJpZXMgYXJlIGdlbmVyYXRlZEhvdyB0byByb3V0ZSBiZXR3ZWVuIHN1Yi1jaGFpbnNIb3cgdG8gcmV0dXJuIHN0cnVjdHVyZWQgZGF0YSBmcm9tIGEgbW9kZWxIb3cgdG8gc3VtbWFyaXplIHRleHQgdGhyb3VnaCBwYXJhbGxlbGl6YXRpb25Ib3cgdG8gc3VtbWFyaXplIHRleHQgdGhyb3VnaCBpdGVyYXRpdmUgcmVmaW5lbWVudEhvdyB0byBzdW1tYXJpemUgdGV4dCBpbiBhIHNpbmdsZSBMTE0gY2FsbEhvdyB0byB1c2UgdG9vbGtpdHNIb3cgdG8gYWRkIGFkLWhvYyB0b29sIGNhbGxpbmcgY2FwYWJpbGl0eSB0byBMTE1zIGFuZCBDaGF0IE1vZGVsc0J1aWxkIGFuIEFnZW50IHdpdGggQWdlbnRFeGVjdXRvciAoTGVnYWN5KUhvdyB0byBjb25zdHJ1Y3Qga25vd2xlZGdlIGdyYXBoc0hvdyB0byBwYXJ0aWFsbHkgZm9ybWF0IHByb21wdCB0ZW1wbGF0ZXNIb3cgdG8gaGFuZGxlIG11bHRpcGxlIHF1ZXJpZXMgd2hlbiBkb2luZyBxdWVyeSBhbmFseXNpc0hvdyB0byB1c2UgYnVpbHQtaW4gdG9vbHMgYW5kIHRvb2xraXRzSG93IHRvIHBhc3MgdGhyb3VnaCBhcmd1bWVudHMgZnJvbSBvbmUgc3RlcCB0byB0aGUgbmV4dEhvdyB0byBjb21wb3NlIHByb21wdHMgdG9nZXRoZXJIb3cgdG8gaGFuZGxlIG11bHRpcGxlIHJldHJpZXZlcnMgd2hlbiBkb2luZyBxdWVyeSBhbmFseXNpc0hvdyB0byBhZGQgdmFsdWVzIHRvIGEgY2hhaW4ncyBzdGF0ZUhvdyB0byBjb25zdHJ1Y3QgZmlsdGVycyBmb3IgcXVlcnkgYW5hbHlzaXNIb3cgdG8gY29uZmlndXJlIHJ1bnRpbWUgY2hhaW4gaW50ZXJuYWxzSG93IGRlYWwgd2l0aCBoaWdoIGNhcmRpbmFsaXR5IGNhdGVnb3JpY2FscyB3aGVuIGRvaW5nIHF1ZXJ5IGFuYWx5c2lzQ3VzdG9tIERvY3VtZW50IExvYWRlckhvdyB0byBzcGxpdCBieSBIVE1MIGhlYWRlckhvdyB0byBzcGxpdCBieSBIVE1MIHNlY3Rpb25zSG93IHRvIHVzZSB0aGUgTXVsdGlRdWVyeVJldHJpZXZlckhvdyB0byBhZGQgc2NvcmVzIHRvIHJldHJpZXZlciByZXN1bHRzQ2FjaGluZ0hvdyB0byB1c2UgY2FsbGJhY2tzIGluIGFzeW5jIGVudmlyb25tZW50c0hvdyB0byBhdHRhY2ggY2FsbGJhY2tzIHRvIGEgcnVubmFibGVIb3cgdG8gcHJvcGFnYXRlIGNhbGxiYWNrcyAgY29uc3RydWN0b3JIb3cgdG8gZGlzcGF0Y2ggY3VzdG9tIGNhbGxiYWNrIGV2ZW50c0hvdyB0byBwYXNzIGNhbGxiYWNrcyBpbiBhdCBydW50aW1lSG93IHRvIHNwbGl0IGJ5IGNoYXJhY3RlckhvdyB0byBjYWNoZSBjaGF0IG1vZGVsIHJlc3BvbnNlc0hvdyB0byBoYW5kbGUgcmF0ZSBsaW1pdHNIb3cgdG8gaW5pdCBhbnkgbW9kZWwgaW4gb25lIGxpbmVIb3cgdG8gdHJhY2sgdG9rZW4gdXNhZ2UgaW4gQ2hhdE1vZGVsc0hvdyB0byBhZGQgdG9vbHMgdG8gY2hhdGJvdHNIb3cgdG8gc3BsaXQgY29kZUhvdyB0byBkbyByZXRyaWV2YWwgd2l0aCBjb250ZXh0dWFsIGNvbXByZXNzaW9uSG93IHRvIGNvbnZlcnQgUnVubmFibGVzIGFzIFRvb2xzSG93IHRvIGNyZWF0ZSBjdXN0b20gY2FsbGJhY2sgaGFuZGxlcnNIb3cgdG8gY3JlYXRlIGEgY3VzdG9tIGNoYXQgbW9kZWwgY2xhc3NIb3cgdG8gY3JlYXRlIGEgY3VzdG9tIExMTSBjbGFzc0N1c3RvbSBSZXRyaWV2ZXJIb3cgdG8gY3JlYXRlIHRvb2xzSG93IHRvIGRlYnVnIHlvdXIgTExNIGFwcHNIb3cgdG8gbG9hZCBDU1ZzSG93IHRvIGxvYWQgZG9jdW1lbnRzIGZyb20gYSBkaXJlY3RvcnlIb3cgdG8gbG9hZCBIVE1MSG93IHRvIGxvYWQgSlNPTkhvdyB0byBsb2FkIE1hcmtkb3duSG93IHRvIGxvYWQgTWljcm9zb2Z0IE9mZmljZSBmaWxlc0hvdyB0byBsb2FkIFBERnNIb3cgdG8gY3JlYXRlIGEgZHluYW1pYyAoc2VsZi1jb25zdHJ1Y3RpbmcpIGNoYWluVGV4dCBlbWJlZGRpbmcgbW9kZWxzSG93IHRvIGNvbWJpbmUgcmVzdWx0cyBmcm9tIG11bHRpcGxlIHJldHJpZXZlcnNIb3cgdG8gc2VsZWN0IGV4YW1wbGVzIGZyb20gYSBMYW5nU21pdGggZGF0YXNldEhvdyB0byBzZWxlY3QgZXhhbXBsZXMgYnkgbGVuZ3RoSG93IHRvIHNlbGVjdCBleGFtcGxlcyBieSBtYXhpbWFsIG1hcmdpbmFsIHJlbGV2YW5jZSAoTU1SKUhvdyB0byBzZWxlY3QgZXhhbXBsZXMgYnkgbi1ncmFtIG92ZXJsYXBIb3cgdG8gc2VsZWN0IGV4YW1wbGVzIGJ5IHNpbWlsYXJpdHlIb3cgdG8gdXNlIHJlZmVyZW5jZSBleGFtcGxlcyB3aGVuIGRvaW5nIGV4dHJhY3Rpb25Ib3cgdG8gaGFuZGxlIGxvbmcgdGV4dCB3aGVuIGRvaW5nIGV4dHJhY3Rpb25Ib3cgdG8gdXNlIHByb21wdGluZyBhbG9uZSAobm8gdG9vbCBjYWxsaW5nKSB0byBkbyBleHRyYWN0aW9uSG93IHRvIGFkZCBmYWxsYmFja3MgdG8gYSBydW5uYWJsZUhvdyB0byBmaWx0ZXIgbWVzc2FnZXNIeWJyaWQgU2VhcmNoSG93IHRvIHVzZSB0aGUgTGFuZ0NoYWluIGluZGV4aW5nIEFQSUhvdyB0byBpbnNwZWN0IHJ1bm5hYmxlc0xhbmdDaGFpbiBFeHByZXNzaW9uIExhbmd1YWdlIENoZWF0c2hlZXRIb3cgdG8gY2FjaGUgTExNIHJlc3BvbnNlc0hvdyB0byB0cmFjayB0b2tlbiB1c2FnZSBmb3IgTExNc1J1biBtb2RlbHMgbG9jYWxseUhvdyB0byBnZXQgbG9nIHByb2JhYmlsaXRpZXNIb3cgdG8gcmVvcmRlciByZXRyaWV2ZWQgcmVzdWx0cyB0byBtaXRpZ2F0ZSB0aGUgXCJsb3N0IGluIHRoZSBtaWRkbGVcIiBlZmZlY3RIb3cgdG8gc3BsaXQgTWFya2Rvd24gYnkgSGVhZGVyc0hvdyB0byBtZXJnZSBjb25zZWN1dGl2ZSBtZXNzYWdlcyBvZiB0aGUgc2FtZSB0eXBlSG93IHRvIGFkZCBtZXNzYWdlIGhpc3RvcnlIb3cgdG8gbWlncmF0ZSBmcm9tIGxlZ2FjeSBMYW5nQ2hhaW4gYWdlbnRzIHRvIExhbmdHcmFwaEhvdyB0byByZXRyaWV2ZSB1c2luZyBtdWx0aXBsZSB2ZWN0b3JzIHBlciBkb2N1bWVudEhvdyB0byBwYXNzIG11bHRpbW9kYWwgZGF0YSBkaXJlY3RseSB0byBtb2RlbHNIb3cgdG8gdXNlIG11bHRpbW9kYWwgcHJvbXB0c0hvdyB0byBjcmVhdGUgYSBjdXN0b20gT3V0cHV0IFBhcnNlckhvdyB0byB1c2UgdGhlIG91dHB1dC1maXhpbmcgcGFyc2VySG93IHRvIHBhcnNlIEpTT04gb3V0cHV0SG93IHRvIHJldHJ5IHdoZW4gYSBwYXJzaW5nIGVycm9yIG9jY3Vyc0hvdyB0byBwYXJzZSBYTUwgb3V0cHV0SG93IHRvIHBhcnNlIFlBTUwgb3V0cHV0SG93IHRvIHVzZSB0aGUgUGFyZW50IERvY3VtZW50IFJldHJpZXZlckhvdyB0byB1c2UgTGFuZ0NoYWluIHdpdGggZGlmZmVyZW50IFB5ZGFudGljIHZlcnNpb25zSG93IHRvIGFkZCBjaGF0IGhpc3RvcnlIb3cgdG8gZ2V0IGEgUkFHIGFwcGxpY2F0aW9uIHRvIGFkZCBjaXRhdGlvbnNIb3cgdG8gZG8gcGVyLXVzZXIgcmV0cmlldmFsSG93IHRvIGdldCB5b3VyIFJBRyBhcHBsaWNhdGlvbiB0byByZXR1cm4gc291cmNlc0hvdyB0byBzdHJlYW0gcmVzdWx0cyBmcm9tIHlvdXIgUkFHIGFwcGxpY2F0aW9uSG93IHRvIHNwbGl0IEpTT04gZGF0YUhvdyB0byByZWN1cnNpdmVseSBzcGxpdCB0ZXh0IGJ5IGNoYXJhY3RlcnNSZXNwb25zZSBtZXRhZGF0YUhvdyB0byBwYXNzIHJ1bnRpbWUgc2VjcmV0cyB0byBydW5uYWJsZXNIb3cgdG8gZG8gXCJzZWxmLXF1ZXJ5aW5nXCIgcmV0cmlldmFsSG93IHRvIHNwbGl0IHRleHQgYmFzZWQgb24gc2VtYW50aWMgc2ltaWxhcml0eUhvdyB0byBjaGFpbiBydW5uYWJsZXNIb3cgdG8gc2F2ZSBhbmQgbG9hZCBMYW5nQ2hhaW4gb2JqZWN0c0hvdyB0byBzcGxpdCB0ZXh0IGJ5IHRva2Vuc0hvdyB0byBkbyBxdWVzdGlvbiBhbnN3ZXJpbmcgb3ZlciBDU1ZzSG93IHRvIGRlYWwgd2l0aCBsYXJnZSBkYXRhYmFzZXMgd2hlbiBkb2luZyBTUUwgcXVlc3Rpb24tYW5zd2VyaW5nSG93IHRvIGJldHRlciBwcm9tcHQgd2hlbiBkb2luZyBTUUwgcXVlc3Rpb24tYW5zd2VyaW5nSG93IHRvIGRvIHF1ZXJ5IHZhbGlkYXRpb24gYXMgcGFydCBvZiBTUUwgcXVlc3Rpb24tYW5zd2VyaW5nSG93IHRvIHN0cmVhbSBydW5uYWJsZXNIb3cgdG8gc3RyZWFtIHJlc3BvbnNlcyBmcm9tIGFuIExMTUhvdyB0byB1c2UgYSB0aW1lLXdlaWdodGVkIHZlY3RvciBzdG9yZSByZXRyaWV2ZXJIb3cgdG8gcmV0dXJuIGFydGlmYWN0cyBmcm9tIGEgdG9vbEhvdyB0byB1c2UgY2hhdCBtb2RlbHMgdG8gY2FsbCB0b29sc0hvdyB0byBkaXNhYmxlIHBhcmFsbGVsIHRvb2wgY2FsbGluZ0hvdyB0byBmb3JjZSBtb2RlbHMgdG8gY2FsbCBhIHRvb2xIb3cgdG8gYWNjZXNzIHRoZSBSdW5uYWJsZUNvbmZpZyBmcm9tIGEgdG9vbEhvdyB0byBwYXNzIHRvb2wgb3V0cHV0cyB0byBjaGF0IG1vZGVsc0hvdyB0byBwYXNzIHJ1biB0aW1lIHZhbHVlcyB0byB0b29sc0hvdyB0byBzdHJlYW0gZXZlbnRzIGZyb20gYSB0b29sSG93IHRvIHN0cmVhbSB0b29sIGNhbGxzSG93IHRvIGNvbnZlcnQgdG9vbHMgdG8gT3BlbkFJIEZ1bmN0aW9uc0hvdyB0byBoYW5kbGUgdG9vbCBlcnJvcnNIb3cgdG8gdXNlIGZldy1zaG90IHByb21wdGluZyB3aXRoIHRvb2wgY2FsbGluZ0hvdyB0byBhZGQgYSBodW1hbi1pbi10aGUtbG9vcCBmb3IgdG9vbHNIb3cgdG8gYmluZCBtb2RlbC1zcGVjaWZpYyB0b29sc0hvdyB0byB0cmltIG1lc3NhZ2VzSG93IHRvIGNyZWF0ZSBhbmQgcXVlcnkgdmVjdG9yIHN0b3Jlc0NvbmNlcHR1YWwgZ3VpZGVFY29zeXN0ZW1cdWQ4M2VcdWRkOWNcdWQ4M2RcdWRlZTBcdWZlMGYgTGFuZ1NtaXRoXHVkODNlXHVkZDljXHVkODNkXHVkZDc4XHVmZTBmIExhbmdHcmFwaFZlcnNpb25zdjAuM3YwLjJQeWRhbnRpYyBjb21wYXRpYmlsaXR5TWlncmF0aW5nIGZyb20gdjAuMCBjaGFpbnNIb3cgdG8gbWlncmF0ZSBmcm9tIHYwLjAgY2hhaW5zTWlncmF0aW5nIGZyb20gQ29uc3RpdHV0aW9uYWxDaGFpbk1pZ3JhdGluZyBmcm9tIENvbnZlcnNhdGlvbmFsQ2hhaW5NaWdyYXRpbmcgZnJvbSBDb252ZXJzYXRpb25hbFJldHJpZXZhbENoYWluTWlncmF0aW5nIGZyb20gTExNQ2hhaW5NaWdyYXRpbmcgZnJvbSBMTE1NYXRoQ2hhaW5NaWdyYXRpbmcgZnJvbSBMTE1Sb3V0ZXJDaGFpbk1pZ3JhdGluZyBmcm9tIE1hcFJlZHVjZURvY3VtZW50c0NoYWluTWlncmF0aW5nIGZyb20gTWFwUmVyYW5rRG9jdW1lbnRzQ2hhaW5NaWdyYXRpbmcgZnJvbSBNdWx0aVByb21wdENoYWluTWlncmF0aW5nIGZyb20gUmVmaW5lRG9jdW1lbnRzQ2hhaW5NaWdyYXRpbmcgZnJvbSBSZXRyaWV2YWxRQU1pZ3JhdGluZyBmcm9tIFN0dWZmRG9jdW1lbnRzQ2hhaW5SZWxlYXNlIHBvbGljeVNlY3VyaXR5Q29uY2VwdHVhbCBndWlkZU9uIHRoaXMgcGFnZUNvbmNlcHR1YWwgZ3VpZGVUaGlzIHNlY3Rpb24gY29udGFpbnMgaW50cm9kdWN0aW9ucyB0byBrZXkgcGFydHMgb2YgTGFuZ0NoYWluLkFyY2hpdGVjdHVyZVx1MjAwYkxhbmdDaGFpbiBhcyBhIGZyYW1ld29yayBjb25zaXN0cyBvZiBhIG51bWJlciBvZiBwYWNrYWdlcy5sYW5nY2hhaW4tY29yZVx1MjAwYlRoaXMgcGFja2FnZSBjb250YWlucyBiYXNlIGFic3RyYWN0aW9ucyBvZiBkaWZmZXJlbnQgY29tcG9uZW50cyBhbmQgd2F5cyB0byBjb21wb3NlIHRoZW0gdG9nZXRoZXIuXG5UaGUgaW50ZXJmYWNlcyBmb3IgY29yZSBjb21wb25lbnRzIGxpa2UgTExNcywgdmVjdG9yIHN0b3JlcywgcmV0cmlldmVycyBhbmQgbW9yZSBhcmUgZGVmaW5lZCBoZXJlLlxuTm8gdGhpcmQgcGFydHkgaW50ZWdyYXRpb25zIGFyZSBkZWZpbmVkIGhlcmUuXG5UaGUgZGVwZW5kZW5jaWVzIGFyZSBrZXB0IHB1cnBvc2VmdWxseSB2ZXJ5IGxpZ2h0d2VpZ2h0LmxhbmdjaGFpblx1MjAwYlRoZSBtYWluIGxhbmdjaGFpbiBwYWNrYWdlIGNvbnRhaW5zIGNoYWlucywgYWdlbnRzLCBhbmQgcmV0cmlldmFsIHN0cmF0ZWdpZXMgdGhhdCBtYWtlIHVwIGFuIGFwcGxpY2F0aW9uJ3MgY29nbml0aXZlIGFyY2hpdGVjdHVyZS5cblRoZXNlIGFyZSBOT1QgdGhpcmQgcGFydHkgaW50ZWdyYXRpb25zLlxuQWxsIGNoYWlucywgYWdlbnRzLCBhbmQgcmV0cmlldmFsIHN0cmF0ZWdpZXMgaGVyZSBhcmUgTk9UIHNwZWNpZmljIHRvIGFueSBvbmUgaW50ZWdyYXRpb24sIGJ1dCByYXRoZXIgZ2VuZXJpYyBhY3Jvc3MgYWxsIGludGVncmF0aW9ucy5sYW5nY2hhaW4tY29tbXVuaXR5XHUyMDBiVGhpcyBwYWNrYWdlIGNvbnRhaW5zIHRoaXJkIHBhcnR5IGludGVncmF0aW9ucyB0aGF0IGFyZSBtYWludGFpbmVkIGJ5IHRoZSBMYW5nQ2hhaW4gY29tbXVuaXR5LlxuS2V5IHBhcnRuZXIgcGFja2FnZXMgYXJlIHNlcGFyYXRlZCBvdXQgKHNlZSBiZWxvdykuXG5UaGlzIGNvbnRhaW5zIGFsbCBpbnRlZ3JhdGlvbnMgZm9yIHZhcmlvdXMgY29tcG9uZW50cyAoTExNcywgdmVjdG9yIHN0b3JlcywgcmV0cmlldmVycykuXG5BbGwgZGVwZW5kZW5jaWVzIGluIHRoaXMgcGFja2FnZSBhcmUgb3B0aW9uYWwgdG8ga2VlcCB0aGUgcGFja2FnZSBhcyBsaWdodHdlaWdodCBhcyBwb3NzaWJsZS5QYXJ0bmVyIHBhY2thZ2VzXHUyMDBiV2hpbGUgdGhlIGxvbmcgdGFpbCBvZiBpbnRlZ3JhdGlvbnMgaXMgaW4gbGFuZ2NoYWluLWNvbW11bml0eSwgd2Ugc3BsaXQgcG9wdWxhciBpbnRlZ3JhdGlvbnMgaW50byB0aGVpciBvd24gcGFja2FnZXMgKGUuZy4gbGFuZ2NoYWluLW9wZW5haSwgbGFuZ2NoYWluLWFudGhyb3BpYywgZXRjKS5cblRoaXMgd2FzIGRvbmUgaW4gb3JkZXIgdG8gaW1wcm92ZSBzdXBwb3J0IGZvciB0aGVzZSBpbXBvcnRhbnQgaW50ZWdyYXRpb25zLmxhbmdncmFwaFx1MjAwYmxhbmdncmFwaCBpcyBhbiBleHRlbnNpb24gb2YgbGFuZ2NoYWluIGFpbWVkIGF0XG5idWlsZGluZyByb2J1c3QgYW5kIHN0YXRlZnVsIG11bHRpLWFjdG9yIGFwcGxpY2F0aW9ucyB3aXRoIExMTXMgYnkgbW9kZWxpbmcgc3RlcHMgYXMgZWRnZXMgYW5kIG5vZGVzIGluIGEgZ3JhcGguTGFuZ0dyYXBoIGV4cG9zZXMgaGlnaCBsZXZlbCBpbnRlcmZhY2VzIGZvciBjcmVhdGluZyBjb21tb24gdHlwZXMgb2YgYWdlbnRzLCBhcyB3ZWxsIGFzIGEgbG93LWxldmVsIEFQSSBmb3IgY29tcG9zaW5nIGN1c3RvbSBmbG93cy5sYW5nc2VydmVcdTIwMGJBIHBhY2thZ2UgdG8gZGVwbG95IExhbmdDaGFpbiBjaGFpbnMgYXMgUkVTVCBBUElzLiBNYWtlcyBpdCBlYXN5IHRvIGdldCBhIHByb2R1Y3Rpb24gcmVhZHkgQVBJIHVwIGFuZCBydW5uaW5nLkxhbmdTbWl0aFx1MjAwYkEgZGV2ZWxvcGVyIHBsYXRmb3JtIHRoYXQgbGV0cyB5b3UgZGVidWcsIHRlc3QsIGV2YWx1YXRlLCBhbmQgbW9uaXRvciBMTE0gYXBwbGljYXRpb25zLkxhbmdDaGFpbiBFeHByZXNzaW9uIExhbmd1YWdlIChMQ0VMKVx1MjAwYkxhbmdDaGFpbiBFeHByZXNzaW9uIExhbmd1YWdlLCBvciBMQ0VMLCBpcyBhIGRlY2xhcmF0aXZlIHdheSB0byBjaGFpbiBMYW5nQ2hhaW4gY29tcG9uZW50cy5cbkxDRUwgd2FzIGRlc2lnbmVkIGZyb20gZGF5IDEgdG8gc3VwcG9ydCBwdXR0aW5nIHByb3RvdHlwZXMgaW4gcHJvZHVjdGlvbiwgd2l0aCBubyBjb2RlIGNoYW5nZXMsIGZyb20gdGhlIHNpbXBsZXN0IFx1MjAxY3Byb21wdCArIExMTVx1MjAxZCBjaGFpbiB0byB0aGUgbW9zdCBjb21wbGV4IGNoYWlucyAod2VcdTIwMTl2ZSBzZWVuIGZvbGtzIHN1Y2Nlc3NmdWxseSBydW4gTENFTCBjaGFpbnMgd2l0aCAxMDBzIG9mIHN0ZXBzIGluIHByb2R1Y3Rpb24pLiBUbyBoaWdobGlnaHQgYSBmZXcgb2YgdGhlIHJlYXNvbnMgeW91IG1pZ2h0IHdhbnQgdG8gdXNlIExDRUw6Rmlyc3QtY2xhc3Mgc3RyZWFtaW5nIHN1cHBvcnQ6XG5XaGVuIHlvdSBidWlsZCB5b3VyIGNoYWlucyB3aXRoIExDRUwgeW91IGdldCB0aGUgYmVzdCBwb3NzaWJsZSB0aW1lLXRvLWZpcnN0LXRva2VuICh0aW1lIGVsYXBzZWQgdW50aWwgdGhlIGZpcnN0IGNodW5rIG9mIG91dHB1dCBjb21lcyBvdXQpLiBGb3Igc29tZSBjaGFpbnMgdGhpcyBtZWFucyBlZy4gd2Ugc3RyZWFtIHRva2VucyBzdHJhaWdodCBmcm9tIGFuIExMTSB0byBhIHN0cmVhbWluZyBvdXRwdXQgcGFyc2VyLCBhbmQgeW91IGdldCBiYWNrIHBhcnNlZCwgaW5jcmVtZW50YWwgY2h1bmtzIG9mIG91dHB1dCBhdCB0aGUgc2FtZSByYXRlIGFzIHRoZSBMTE0gcHJvdmlkZXIgb3V0cHV0cyB0aGUgcmF3IHRva2Vucy5Bc3luYyBzdXBwb3J0OlxuQW55IGNoYWluIGJ1aWx0IHdpdGggTENFTCBjYW4gYmUgY2FsbGVkIGJvdGggd2l0aCB0aGUgc3luY2hyb25vdXMgQVBJIChlZy4gaW4geW91ciBKdXB5dGVyIG5vdGVib29rIHdoaWxlIHByb3RvdHlwaW5nKSBhcyB3ZWxsIGFzIHdpdGggdGhlIGFzeW5jaHJvbm91cyBBUEkgKGVnLiBpbiBhIExhbmdTZXJ2ZSBzZXJ2ZXIpLiBUaGlzIGVuYWJsZXMgdXNpbmcgdGhlIHNhbWUgY29kZSBmb3IgcHJvdG90eXBlcyBhbmQgaW4gcHJvZHVjdGlvbiwgd2l0aCBncmVhdCBwZXJmb3JtYW5jZSwgYW5kIHRoZSBhYmlsaXR5IHRvIGhhbmRsZSBtYW55IGNvbmN1cnJlbnQgcmVxdWVzdHMgaW4gdGhlIHNhbWUgc2VydmVyLk9wdGltaXplZCBwYXJhbGxlbCBleGVjdXRpb246XG5XaGVuZXZlciB5b3VyIExDRUwgY2hhaW5zIGhhdmUgc3RlcHMgdGhhdCBjYW4gYmUgZXhlY3V0ZWQgaW4gcGFyYWxsZWwgKGVnIGlmIHlvdSBmZXRjaCBkb2N1bWVudHMgZnJvbSBtdWx0aXBsZSByZXRyaWV2ZXJzKSB3ZSBhdXRvbWF0aWNhbGx5IGRvIGl0LCBib3RoIGluIHRoZSBzeW5jIGFuZCB0aGUgYXN5bmMgaW50ZXJmYWNlcywgZm9yIHRoZSBzbWFsbGVzdCBwb3NzaWJsZSBsYXRlbmN5LlJldHJpZXMgYW5kIGZhbGxiYWNrczpcbkNvbmZpZ3VyZSByZXRyaWVzIGFuZCBmYWxsYmFja3MgZm9yIGFueSBwYXJ0IG9mIHlvdXIgTENFTCBjaGFpbi4gVGhpcyBpcyBhIGdyZWF0IHdheSB0byBtYWtlIHlvdXIgY2hhaW5zIG1vcmUgcmVsaWFibGUgYXQgc2NhbGUuIFdlXHUyMDE5cmUgY3VycmVudGx5IHdvcmtpbmcgb24gYWRkaW5nIHN0cmVhbWluZyBzdXBwb3J0IGZvciByZXRyaWVzL2ZhbGxiYWNrcywgc28geW91IGNhbiBnZXQgdGhlIGFkZGVkIHJlbGlhYmlsaXR5IHdpdGhvdXQgYW55IGxhdGVuY3kgY29zdC5BY2Nlc3MgaW50ZXJtZWRpYXRlIHJlc3VsdHM6XG5Gb3IgbW9yZSBjb21wbGV4IGNoYWlucyBpdFx1MjAxOXMgb2Z0ZW4gdmVyeSB1c2VmdWwgdG8gYWNjZXNzIHRoZSByZXN1bHRzIG9mIGludGVybWVkaWF0ZSBzdGVwcyBldmVuIGJlZm9yZSB0aGUgZmluYWwgb3V0cHV0IGlzIHByb2R1Y2VkLiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxldCBlbmQtdXNlcnMga25vdyBzb21ldGhpbmcgaXMgaGFwcGVuaW5nLCBvciBldmVuIGp1c3QgdG8gZGVidWcgeW91ciBjaGFpbi4gWW91IGNhbiBzdHJlYW0gaW50ZXJtZWRpYXRlIHJlc3VsdHMsIGFuZCBpdFx1MjAxOXMgYXZhaWxhYmxlIG9uIGV2ZXJ5IExhbmdTZXJ2ZSBzZXJ2ZXIuSW5wdXQgYW5kIG91dHB1dCBzY2hlbWFzXG5JbnB1dCBhbmQgb3V0cHV0IHNjaGVtYXMgZ2l2ZSBldmVyeSBMQ0VMIGNoYWluIFB5ZGFudGljIGFuZCBKU09OU2NoZW1hIHNjaGVtYXMgaW5mZXJyZWQgZnJvbSB0aGUgc3RydWN0dXJlIG9mIHlvdXIgY2hhaW4uIFRoaXMgY2FuIGJlIHVzZWQgZm9yIHZhbGlkYXRpb24gb2YgaW5wdXRzIGFuZCBvdXRwdXRzLCBhbmQgaXMgYW4gaW50ZWdyYWwgcGFydCBvZiBMYW5nU2VydmUuU2VhbWxlc3MgTGFuZ1NtaXRoIHRyYWNpbmdcbkFzIHlvdXIgY2hhaW5zIGdldCBtb3JlIGFuZCBtb3JlIGNvbXBsZXgsIGl0IGJlY29tZXMgaW5jcmVhc2luZ2x5IGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHdoYXQgZXhhY3RseSBpcyBoYXBwZW5pbmcgYXQgZXZlcnkgc3RlcC5cbldpdGggTENFTCwgYWxsIHN0ZXBzIGFyZSBhdXRvbWF0aWNhbGx5IGxvZ2dlZCB0byBMYW5nU21pdGggZm9yIG1heGltdW0gb2JzZXJ2YWJpbGl0eSBhbmQgZGVidWdnYWJpbGl0eS5MQ0VMIGFpbXMgdG8gcHJvdmlkZSBjb25zaXN0ZW5jeSBhcm91bmQgYmVoYXZpb3IgYW5kIGN1c3RvbWl6YXRpb24gb3ZlciBsZWdhY3kgc3ViY2xhc3NlZCBjaGFpbnMgc3VjaCBhcyBMTE1DaGFpbiBhbmRcbkNvbnZlcnNhdGlvbmFsUmV0cmlldmFsQ2hhaW4uIE1hbnkgb2YgdGhlc2UgbGVnYWN5IGNoYWlucyBoaWRlIGltcG9ydGFudCBkZXRhaWxzIGxpa2UgcHJvbXB0cywgYW5kIGFzIGEgd2lkZXIgdmFyaWV0eVxub2YgdmlhYmxlIG1vZGVscyBlbWVyZ2UsIGN1c3RvbWl6YXRpb24gaGFzIGJlY29tZSBtb3JlIGFuZCBtb3JlIGltcG9ydGFudC5JZiB5b3UgYXJlIGN1cnJlbnRseSB1c2luZyBvbmUgb2YgdGhlc2UgbGVnYWN5IGNoYWlucywgcGxlYXNlIHNlZSB0aGlzIGd1aWRlIGZvciBndWlkYW5jZSBvbiBob3cgdG8gbWlncmF0ZS5Gb3IgZ3VpZGVzIG9uIGhvdyB0byBkbyBzcGVjaWZpYyB0YXNrcyB3aXRoIExDRUwsIGNoZWNrIG91dCB0aGUgcmVsZXZhbnQgaG93LXRvIGd1aWRlcy5SdW5uYWJsZSBpbnRlcmZhY2VcdTIwMGJUbyBtYWtlIGl0IGFzIGVhc3kgYXMgcG9zc2libGUgdG8gY3JlYXRlIGN1c3RvbSBjaGFpbnMsIHdlJ3ZlIGltcGxlbWVudGVkIGEgXCJSdW5uYWJsZVwiIHByb3RvY29sLiBNYW55IExhbmdDaGFpbiBjb21wb25lbnRzIGltcGxlbWVudCB0aGUgUnVubmFibGUgcHJvdG9jb2wsIGluY2x1ZGluZyBjaGF0IG1vZGVscywgTExNcywgb3V0cHV0IHBhcnNlcnMsIHJldHJpZXZlcnMsIHByb21wdCB0ZW1wbGF0ZXMsIGFuZCBtb3JlLiBUaGVyZSBhcmUgYWxzbyBzZXZlcmFsIHVzZWZ1bCBwcmltaXRpdmVzIGZvciB3b3JraW5nIHdpdGggcnVubmFibGVzLCB3aGljaCB5b3UgY2FuIHJlYWQgYWJvdXQgYmVsb3cuVGhpcyBpcyBhIHN0YW5kYXJkIGludGVyZmFjZSwgd2hpY2ggbWFrZXMgaXQgZWFzeSB0byBkZWZpbmUgY3VzdG9tIGNoYWlucyBhcyB3ZWxsIGFzIGludm9rZSB0aGVtIGluIGEgc3RhbmRhcmQgd2F5LlxuVGhlIHN0YW5kYXJkIGludGVyZmFjZSBpbmNsdWRlczpzdHJlYW06IHN0cmVhbSBiYWNrIGNodW5rcyBvZiB0aGUgcmVzcG9uc2VpbnZva2U6IGNhbGwgdGhlIGNoYWluIG9uIGFuIGlucHV0YmF0Y2g6IGNhbGwgdGhlIGNoYWluIG9uIGEgbGlzdCBvZiBpbnB1dHNUaGVzZSBhbHNvIGhhdmUgY29ycmVzcG9uZGluZyBhc3luYyBtZXRob2RzIHRoYXQgc2hvdWxkIGJlIHVzZWQgd2l0aCBhc3luY2lvIGF3YWl0IHN5bnRheCBmb3IgY29uY3VycmVuY3k6YXN0cmVhbTogc3RyZWFtIGJhY2sgY2h1bmtzIG9mIHRoZSByZXNwb25zZSBhc3luY2FpbnZva2U6IGNhbGwgdGhlIGNoYWluIG9uIGFuIGlucHV0IGFzeW5jYWJhdGNoOiBjYWxsIHRoZSBjaGFpbiBvbiBhIGxpc3Qgb2YgaW5wdXRzIGFzeW5jYXN0cmVhbV9sb2c6IHN0cmVhbSBiYWNrIGludGVybWVkaWF0ZSBzdGVwcyBhcyB0aGV5IGhhcHBlbiwgaW4gYWRkaXRpb24gdG8gdGhlIGZpbmFsIHJlc3BvbnNlYXN0cmVhbV9ldmVudHM6IGJldGEgc3RyZWFtIGV2ZW50cyBhcyB0aGV5IGhhcHBlbiBpbiB0aGUgY2hhaW4gKGludHJvZHVjZWQgaW4gbGFuZ2NoYWluLWNvcmUgMC4xLjE0KVRoZSBpbnB1dCB0eXBlIGFuZCBvdXRwdXQgdHlwZSB2YXJpZXMgYnkgY29tcG9uZW50OkNvbXBvbmVudElucHV0IFR5cGVPdXRwdXQgVHlwZVByb21wdERpY3Rpb25hcnlQcm9tcHRWYWx1ZUNoYXRNb2RlbFNpbmdsZSBzdHJpbmcsIGxpc3Qgb2YgY2hhdCBtZXNzYWdlcyBvciBhIFByb21wdFZhbHVlQ2hhdE1lc3NhZ2VMTE1TaW5nbGUgc3RyaW5nLCBsaXN0IG9mIGNoYXQgbWVzc2FnZXMgb3IgYSBQcm9tcHRWYWx1ZVN0cmluZ091dHB1dFBhcnNlclRoZSBvdXRwdXQgb2YgYW4gTExNIG9yIENoYXRNb2RlbERlcGVuZHMgb24gdGhlIHBhcnNlclJldHJpZXZlclNpbmdsZSBzdHJpbmdMaXN0IG9mIERvY3VtZW50c1Rvb2xTaW5nbGUgc3RyaW5nIG9yIGRpY3Rpb25hcnksIGRlcGVuZGluZyBvbiB0aGUgdG9vbERlcGVuZHMgb24gdGhlIHRvb2xBbGwgcnVubmFibGVzIGV4cG9zZSBpbnB1dCBhbmQgb3V0cHV0IHNjaGVtYXMgdG8gaW5zcGVjdCB0aGUgaW5wdXRzIGFuZCBvdXRwdXRzOmlucHV0X3NjaGVtYTogYW4gaW5wdXQgUHlkYW50aWMgbW9kZWwgYXV0by1nZW5lcmF0ZWQgZnJvbSB0aGUgc3RydWN0dXJlIG9mIHRoZSBSdW5uYWJsZW91dHB1dF9zY2hlbWE6IGFuIG91dHB1dCBQeWRhbnRpYyBtb2RlbCBhdXRvLWdlbmVyYXRlZCBmcm9tIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIFJ1bm5hYmxlQ29tcG9uZW50c1x1MjAwYkxhbmdDaGFpbiBwcm92aWRlcyBzdGFuZGFyZCwgZXh0ZW5kYWJsZSBpbnRlcmZhY2VzIGFuZCBleHRlcm5hbCBpbnRlZ3JhdGlvbnMgZm9yIHZhcmlvdXMgY29tcG9uZW50cyB1c2VmdWwgZm9yIGJ1aWxkaW5nIHdpdGggTExNcy5cblNvbWUgY29tcG9uZW50cyBMYW5nQ2hhaW4gaW1wbGVtZW50cywgc29tZSBjb21wb25lbnRzIHdlIHJlbHkgb24gdGhpcmQtcGFydHkgaW50ZWdyYXRpb25zIGZvciwgYW5kIG90aGVycyBhcmUgYSBtaXguQ2hhdCBtb2RlbHNcdTIwMGJMYW5ndWFnZSBtb2RlbHMgdGhhdCB1c2UgYSBzZXF1ZW5jZSBvZiBtZXNzYWdlcyBhcyBpbnB1dHMgYW5kIHJldHVybiBjaGF0IG1lc3NhZ2VzIGFzIG91dHB1dHMgKGFzIG9wcG9zZWQgdG8gdXNpbmcgcGxhaW4gdGV4dCkuXG5UaGVzZSBhcmUgdHJhZGl0aW9uYWxseSBuZXdlciBtb2RlbHMgKG9sZGVyIG1vZGVscyBhcmUgZ2VuZXJhbGx5IExMTXMsIHNlZSBiZWxvdykuXG5DaGF0IG1vZGVscyBzdXBwb3J0IHRoZSBhc3NpZ25tZW50IG9mIGRpc3RpbmN0IHJvbGVzIHRvIGNvbnZlcnNhdGlvbiBtZXNzYWdlcywgaGVscGluZyB0byBkaXN0aW5ndWlzaCBtZXNzYWdlcyBmcm9tIHRoZSBBSSwgdXNlcnMsIGFuZCBpbnN0cnVjdGlvbnMgc3VjaCBhcyBzeXN0ZW0gbWVzc2FnZXMuQWx0aG91Z2ggdGhlIHVuZGVybHlpbmcgbW9kZWxzIGFyZSBtZXNzYWdlcyBpbiwgbWVzc2FnZSBvdXQsIHRoZSBMYW5nQ2hhaW4gd3JhcHBlcnMgYWxzbyBhbGxvdyB0aGVzZSBtb2RlbHMgdG8gdGFrZSBhIHN0cmluZyBhcyBpbnB1dC4gVGhpcyBtZWFucyB5b3UgY2FuIGVhc2lseSB1c2UgY2hhdCBtb2RlbHMgaW4gcGxhY2Ugb2YgTExNcy5XaGVuIGEgc3RyaW5nIGlzIHBhc3NlZCBpbiBhcyBpbnB1dCwgaXQgaXMgY29udmVydGVkIHRvIGEgSHVtYW5NZXNzYWdlIGFuZCB0aGVuIHBhc3NlZCB0byB0aGUgdW5kZXJseWluZyBtb2RlbC5MYW5nQ2hhaW4gZG9lcyBub3QgaG9zdCBhbnkgQ2hhdCBNb2RlbHMsIHJhdGhlciB3ZSByZWx5IG9uIHRoaXJkIHBhcnR5IGludGVncmF0aW9ucy5XZSBoYXZlIHNvbWUgc3RhbmRhcmRpemVkIHBhcmFtZXRlcnMgd2hlbiBjb25zdHJ1Y3RpbmcgQ2hhdE1vZGVsczptb2RlbDogdGhlIG5hbWUgb2YgdGhlIG1vZGVsdGVtcGVyYXR1cmU6IHRoZSBzYW1wbGluZyB0ZW1wZXJhdHVyZXRpbWVvdXQ6IHJlcXVlc3QgdGltZW91dG1heF90b2tlbnM6IG1heCB0b2tlbnMgdG8gZ2VuZXJhdGVzdG9wOiBkZWZhdWx0IHN0b3Agc2VxdWVuY2VzbWF4X3JldHJpZXM6IG1heCBudW1iZXIgb2YgdGltZXMgdG8gcmV0cnkgcmVxdWVzdHNhcGlfa2V5OiBBUEkga2V5IGZvciB0aGUgbW9kZWwgcHJvdmlkZXJiYXNlX3VybDogZW5kcG9pbnQgdG8gc2VuZCByZXF1ZXN0cyB0b1NvbWUgaW1wb3J0YW50IHRoaW5ncyB0byBub3RlOnN0YW5kYXJkIHBhcmFtcyBvbmx5IGFwcGx5IHRvIG1vZGVsIHByb3ZpZGVycyB0aGF0IGV4cG9zZSBwYXJhbWV0ZXJzIHdpdGggdGhlIGludGVuZGVkIGZ1bmN0aW9uYWxpdHkuIEZvciBleGFtcGxlLCBzb21lIHByb3ZpZGVycyBkbyBub3QgZXhwb3NlIGEgY29uZmlndXJhdGlvbiBmb3IgbWF4aW11bSBvdXRwdXQgdG9rZW5zLCBzbyBtYXhfdG9rZW5zIGNhbid0IGJlIHN1cHBvcnRlZCBvbiB0aGVzZS5zdGFuZGFyZCBwYXJhbXMgYXJlIGN1cnJlbnRseSBvbmx5IGVuZm9yY2VkIG9uIGludGVncmF0aW9ucyB0aGF0IGhhdmUgdGhlaXIgb3duIGludGVncmF0aW9uIHBhY2thZ2VzIChlLmcuIGxhbmdjaGFpbi1vcGVuYWksIGxhbmdjaGFpbi1hbnRocm9waWMsIGV0Yy4pLCB0aGV5J3JlIG5vdCBlbmZvcmNlZCBvbiBtb2RlbHMgaW4gbGFuZ2NoYWluLWNvbW11bml0eS5DaGF0TW9kZWxzIGFsc28gYWNjZXB0IG90aGVyIHBhcmFtZXRlcnMgdGhhdCBhcmUgc3BlY2lmaWMgdG8gdGhhdCBpbnRlZ3JhdGlvbi4gVG8gZmluZCBhbGwgdGhlIHBhcmFtZXRlcnMgc3VwcG9ydGVkIGJ5IGEgQ2hhdE1vZGVsIGhlYWQgdG8gdGhlIEFQSSByZWZlcmVuY2UgZm9yIHRoYXQgbW9kZWwuaW5mb1NvbWUgY2hhdCBtb2RlbHMgaGF2ZSBiZWVuIGZpbmUtdHVuZWQgZm9yIHRvb2wgY2FsbGluZyBhbmQgcHJvdmlkZSBhIGRlZGljYXRlZCBBUEkgZm9yIGl0LlxuR2VuZXJhbGx5LCBzdWNoIG1vZGVscyBhcmUgYmV0dGVyIGF0IHRvb2wgY2FsbGluZyB0aGFuIG5vbi1maW5lLXR1bmVkIG1vZGVscywgYW5kIGFyZSByZWNvbW1lbmRlZCBmb3IgdXNlIGNhc2VzIHRoYXQgcmVxdWlyZSB0b29sIGNhbGxpbmcuXG5QbGVhc2Ugc2VlIHRoZSB0b29sIGNhbGxpbmcgc2VjdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5Gb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgY2hhdCBtb2RlbHMsIHNlZSB0aGUgcmVsZXZhbnQgaG93LXRvIGd1aWRlcyBoZXJlLk11bHRpbW9kYWxpdHlcdTIwMGJTb21lIGNoYXQgbW9kZWxzIGFyZSBtdWx0aW1vZGFsLCBhY2NlcHRpbmcgaW1hZ2VzLCBhdWRpbyBhbmQgZXZlbiB2aWRlbyBhcyBpbnB1dHMuIFRoZXNlIGFyZSBzdGlsbCBsZXNzIGNvbW1vbiwgbWVhbmluZyBtb2RlbCBwcm92aWRlcnMgaGF2ZW4ndCBzdGFuZGFyZGl6ZWQgb24gdGhlIFwiYmVzdFwiIHdheSB0byBkZWZpbmUgdGhlIEFQSS4gTXVsdGltb2RhbCBvdXRwdXRzIGFyZSBldmVuIGxlc3MgY29tbW9uLiBBcyBzdWNoLCB3ZSd2ZSBrZXB0IG91ciBtdWx0aW1vZGFsIGFic3RyYWN0aW9ucyBmYWlybHkgbGlnaHQgd2VpZ2h0IGFuZCBwbGFuIHRvIGZ1cnRoZXIgc29saWRpZnkgdGhlIG11bHRpbW9kYWwgQVBJcyBhbmQgaW50ZXJhY3Rpb24gcGF0dGVybnMgYXMgdGhlIGZpZWxkIG1hdHVyZXMuSW4gTGFuZ0NoYWluLCBtb3N0IGNoYXQgbW9kZWxzIHRoYXQgc3VwcG9ydCBtdWx0aW1vZGFsIGlucHV0cyBhbHNvIGFjY2VwdCB0aG9zZSB2YWx1ZXMgaW4gT3BlbkFJJ3MgY29udGVudCBibG9ja3MgZm9ybWF0LiBTbyBmYXIgdGhpcyBpcyByZXN0cmljdGVkIHRvIGltYWdlIGlucHV0cy4gRm9yIG1vZGVscyBsaWtlIEdlbWluaSB3aGljaCBzdXBwb3J0IHZpZGVvIGFuZCBvdGhlciBieXRlcyBpbnB1dCwgdGhlIEFQSXMgYWxzbyBzdXBwb3J0IHRoZSBuYXRpdmUsIG1vZGVsLXNwZWNpZmljIHJlcHJlc2VudGF0aW9ucy5Gb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgbXVsdGltb2RhbCBtb2RlbHMsIHNlZSB0aGUgcmVsZXZhbnQgaG93LXRvIGd1aWRlcyBoZXJlLkZvciBhIGZ1bGwgbGlzdCBvZiBMYW5nQ2hhaW4gbW9kZWwgcHJvdmlkZXJzIHdpdGggbXVsdGltb2RhbCBtb2RlbHMsIGNoZWNrIG91dCB0aGlzIHRhYmxlLkxMTXNcdTIwMGJjYXV0aW9uUHVyZSB0ZXh0LWluL3RleHQtb3V0IExMTXMgdGVuZCB0byBiZSBvbGRlciBvciBsb3dlci1sZXZlbC4gTWFueSBuZXcgcG9wdWxhciBtb2RlbHMgYXJlIGJlc3QgdXNlZCBhcyBjaGF0IGNvbXBsZXRpb24gbW9kZWxzLFxuZXZlbiBmb3Igbm9uLWNoYXQgdXNlIGNhc2VzLllvdSBhcmUgcHJvYmFibHkgbG9va2luZyBmb3IgdGhlIHNlY3Rpb24gYWJvdmUgaW5zdGVhZC5MYW5ndWFnZSBtb2RlbHMgdGhhdCB0YWtlcyBhIHN0cmluZyBhcyBpbnB1dCBhbmQgcmV0dXJucyBhIHN0cmluZy5cblRoZXNlIGFyZSB0cmFkaXRpb25hbGx5IG9sZGVyIG1vZGVscyAobmV3ZXIgbW9kZWxzIGdlbmVyYWxseSBhcmUgQ2hhdCBNb2RlbHMsIHNlZSBhYm92ZSkuQWx0aG91Z2ggdGhlIHVuZGVybHlpbmcgbW9kZWxzIGFyZSBzdHJpbmcgaW4sIHN0cmluZyBvdXQsIHRoZSBMYW5nQ2hhaW4gd3JhcHBlcnMgYWxzbyBhbGxvdyB0aGVzZSBtb2RlbHMgdG8gdGFrZSBtZXNzYWdlcyBhcyBpbnB1dC5cblRoaXMgZ2l2ZXMgdGhlbSB0aGUgc2FtZSBpbnRlcmZhY2UgYXMgQ2hhdCBNb2RlbHMuXG5XaGVuIG1lc3NhZ2VzIGFyZSBwYXNzZWQgaW4gYXMgaW5wdXQsIHRoZXkgd2lsbCBiZSBmb3JtYXR0ZWQgaW50byBhIHN0cmluZyB1bmRlciB0aGUgaG9vZCBiZWZvcmUgYmVpbmcgcGFzc2VkIHRvIHRoZSB1bmRlcmx5aW5nIG1vZGVsLkxhbmdDaGFpbiBkb2VzIG5vdCBob3N0IGFueSBMTE1zLCByYXRoZXIgd2UgcmVseSBvbiB0aGlyZCBwYXJ0eSBpbnRlZ3JhdGlvbnMuRm9yIHNwZWNpZmljcyBvbiBob3cgdG8gdXNlIExMTXMsIHNlZSB0aGUgaG93LXRvIGd1aWRlcy5NZXNzYWdlc1x1MjAwYlNvbWUgbGFuZ3VhZ2UgbW9kZWxzIHRha2UgYSBsaXN0IG9mIG1lc3NhZ2VzIGFzIGlucHV0IGFuZCByZXR1cm4gYSBtZXNzYWdlLlxuVGhlcmUgYXJlIGEgZmV3IGRpZmZlcmVudCB0eXBlcyBvZiBtZXNzYWdlcy5cbkFsbCBtZXNzYWdlcyBoYXZlIGEgcm9sZSwgY29udGVudCwgYW5kIHJlc3BvbnNlX21ldGFkYXRhIHByb3BlcnR5LlRoZSByb2xlIGRlc2NyaWJlcyBXSE8gaXMgc2F5aW5nIHRoZSBtZXNzYWdlLiBUaGUgc3RhbmRhcmQgcm9sZXMgYXJlIFwidXNlclwiLCBcImFzc2lzdGFudFwiLCBcInN5c3RlbVwiLCBhbmQgXCJ0b29sXCIuXG5MYW5nQ2hhaW4gaGFzIGRpZmZlcmVudCBtZXNzYWdlIGNsYXNzZXMgZm9yIGRpZmZlcmVudCByb2xlcy5UaGUgY29udGVudCBwcm9wZXJ0eSBkZXNjcmliZXMgdGhlIGNvbnRlbnQgb2YgdGhlIG1lc3NhZ2UuXG5UaGlzIGNhbiBiZSBhIGZldyBkaWZmZXJlbnQgdGhpbmdzOkEgc3RyaW5nIChtb3N0IG1vZGVscyBkZWFsIHdpdGggdGhpcyB0eXBlIG9mIGNvbnRlbnQpQSBMaXN0IG9mIGRpY3Rpb25hcmllcyAodGhpcyBpcyB1c2VkIGZvciBtdWx0aW1vZGFsIGlucHV0LCB3aGVyZSB0aGUgZGljdGlvbmFyeSBjb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCB0aGF0IGlucHV0IHR5cGUgYW5kIHRoYXQgaW5wdXQgbG9jYXRpb24pT3B0aW9uYWxseSwgbWVzc2FnZXMgY2FuIGhhdmUgYSBuYW1lIHByb3BlcnR5IHdoaWNoIGFsbG93cyBmb3IgZGlmZmVyZW50aWF0aW5nIGJldHdlZW4gbXVsdGlwbGUgc3BlYWtlcnMgd2l0aCB0aGUgc2FtZSByb2xlLlxuRm9yIGV4YW1wbGUsIGlmIHRoZXJlIGFyZSB0d28gdXNlcnMgaW4gdGhlIGNoYXQgaGlzdG9yeSBpdCBjYW4gYmUgdXNlZnVsIHRvIGRpZmZlcmVudGlhdGUgYmV0d2VlbiB0aGVtLiBOb3QgYWxsIG1vZGVscyBzdXBwb3J0IHRoaXMuSHVtYW5NZXNzYWdlXHUyMDBiVGhpcyByZXByZXNlbnRzIGEgbWVzc2FnZSB3aXRoIHJvbGUgXCJ1c2VyXCIuQUlNZXNzYWdlXHUyMDBiVGhpcyByZXByZXNlbnRzIGEgbWVzc2FnZSB3aXRoIHJvbGUgXCJhc3Npc3RhbnRcIi4gSW4gYWRkaXRpb24gdG8gdGhlIGNvbnRlbnQgcHJvcGVydHksIHRoZXNlIG1lc3NhZ2VzIGFsc28gaGF2ZTpyZXNwb25zZV9tZXRhZGF0YVRoZSByZXNwb25zZV9tZXRhZGF0YSBwcm9wZXJ0eSBjb250YWlucyBhZGRpdGlvbmFsIG1ldGFkYXRhIGFib3V0IHRoZSByZXNwb25zZS4gVGhlIGRhdGEgaGVyZSBpcyBvZnRlbiBzcGVjaWZpYyB0byBlYWNoIG1vZGVsIHByb3ZpZGVyLlxuVGhpcyBpcyB3aGVyZSBpbmZvcm1hdGlvbiBsaWtlIGxvZy1wcm9icyBhbmQgdG9rZW4gdXNhZ2UgbWF5IGJlIHN0b3JlZC50b29sX2NhbGxzVGhlc2UgcmVwcmVzZW50IGEgZGVjaXNpb24gZnJvbSBhbiBsYW5ndWFnZSBtb2RlbCB0byBjYWxsIGEgdG9vbC4gVGhleSBhcmUgaW5jbHVkZWQgYXMgcGFydCBvZiBhbiBBSU1lc3NhZ2Ugb3V0cHV0LlxuVGhleSBjYW4gYmUgYWNjZXNzZWQgZnJvbSB0aGVyZSB3aXRoIHRoZSAudG9vbF9jYWxscyBwcm9wZXJ0eS5UaGlzIHByb3BlcnR5IHJldHVybnMgYSBsaXN0IG9mIFRvb2xDYWxscy4gQSBUb29sQ2FsbCBpcyBhIGRpY3Rpb25hcnkgd2l0aCB0aGUgZm9sbG93aW5nIGFyZ3VtZW50czpuYW1lOiBUaGUgbmFtZSBvZiB0aGUgdG9vbCB0aGF0IHNob3VsZCBiZSBjYWxsZWQuYXJnczogVGhlIGFyZ3VtZW50cyB0byB0aGF0IHRvb2wuaWQ6IFRoZSBpZCBvZiB0aGF0IHRvb2wgY2FsbC5TeXN0ZW1NZXNzYWdlXHUyMDBiVGhpcyByZXByZXNlbnRzIGEgbWVzc2FnZSB3aXRoIHJvbGUgXCJzeXN0ZW1cIiwgd2hpY2ggdGVsbHMgdGhlIG1vZGVsIGhvdyB0byBiZWhhdmUuIE5vdCBldmVyeSBtb2RlbCBwcm92aWRlciBzdXBwb3J0cyB0aGlzLlRvb2xNZXNzYWdlXHUyMDBiVGhpcyByZXByZXNlbnRzIGEgbWVzc2FnZSB3aXRoIHJvbGUgXCJ0b29sXCIsIHdoaWNoIGNvbnRhaW5zIHRoZSByZXN1bHQgb2YgY2FsbGluZyBhIHRvb2wuIEluIGFkZGl0aW9uIHRvIHJvbGUgYW5kIGNvbnRlbnQsIHRoaXMgbWVzc2FnZSBoYXM6YSB0b29sX2NhbGxfaWQgZmllbGQgd2hpY2ggY29udmV5cyB0aGUgaWQgb2YgdGhlIGNhbGwgdG8gdGhlIHRvb2wgdGhhdCB3YXMgY2FsbGVkIHRvIHByb2R1Y2UgdGhpcyByZXN1bHQuYW4gYXJ0aWZhY3QgZmllbGQgd2hpY2ggY2FuIGJlIHVzZWQgdG8gcGFzcyBhbG9uZyBhcmJpdHJhcnkgYXJ0aWZhY3RzIG9mIHRoZSB0b29sIGV4ZWN1dGlvbiB3aGljaCBhcmUgdXNlZnVsIHRvIHRyYWNrIGJ1dCB3aGljaCBzaG91bGQgbm90IGJlIHNlbnQgdG8gdGhlIG1vZGVsLihMZWdhY3kpIEZ1bmN0aW9uTWVzc2FnZVx1MjAwYlRoaXMgaXMgYSBsZWdhY3kgbWVzc2FnZSB0eXBlLCBjb3JyZXNwb25kaW5nIHRvIE9wZW5BSSdzIGxlZ2FjeSBmdW5jdGlvbi1jYWxsaW5nIEFQSS4gVG9vbE1lc3NhZ2Ugc2hvdWxkIGJlIHVzZWQgaW5zdGVhZCB0byBjb3JyZXNwb25kIHRvIHRoZSB1cGRhdGVkIHRvb2wtY2FsbGluZyBBUEkuVGhpcyByZXByZXNlbnRzIHRoZSByZXN1bHQgb2YgYSBmdW5jdGlvbiBjYWxsLiBJbiBhZGRpdGlvbiB0byByb2xlIGFuZCBjb250ZW50LCB0aGlzIG1lc3NhZ2UgaGFzIGEgbmFtZSBwYXJhbWV0ZXIgd2hpY2ggY29udmV5cyB0aGUgbmFtZSBvZiB0aGUgZnVuY3Rpb24gdGhhdCB3YXMgY2FsbGVkIHRvIHByb2R1Y2UgdGhpcyByZXN1bHQuUHJvbXB0IHRlbXBsYXRlc1x1MjAwYlByb21wdCB0ZW1wbGF0ZXMgaGVscCB0byB0cmFuc2xhdGUgdXNlciBpbnB1dCBhbmQgcGFyYW1ldGVycyBpbnRvIGluc3RydWN0aW9ucyBmb3IgYSBsYW5ndWFnZSBtb2RlbC5cblRoaXMgY2FuIGJlIHVzZWQgdG8gZ3VpZGUgYSBtb2RlbCdzIHJlc3BvbnNlLCBoZWxwaW5nIGl0IHVuZGVyc3RhbmQgdGhlIGNvbnRleHQgYW5kIGdlbmVyYXRlIHJlbGV2YW50IGFuZCBjb2hlcmVudCBsYW5ndWFnZS1iYXNlZCBvdXRwdXQuUHJvbXB0IFRlbXBsYXRlcyB0YWtlIGFzIGlucHV0IGEgZGljdGlvbmFyeSwgd2hlcmUgZWFjaCBrZXkgcmVwcmVzZW50cyBhIHZhcmlhYmxlIGluIHRoZSBwcm9tcHQgdGVtcGxhdGUgdG8gZmlsbCBpbi5Qcm9tcHQgVGVtcGxhdGVzIG91dHB1dCBhIFByb21wdFZhbHVlLiBUaGlzIFByb21wdFZhbHVlIGNhbiBiZSBwYXNzZWQgdG8gYW4gTExNIG9yIGEgQ2hhdE1vZGVsLCBhbmQgY2FuIGFsc28gYmUgY2FzdCB0byBhIHN0cmluZyBvciBhIGxpc3Qgb2YgbWVzc2FnZXMuXG5UaGUgcmVhc29uIHRoaXMgUHJvbXB0VmFsdWUgZXhpc3RzIGlzIHRvIG1ha2UgaXQgZWFzeSB0byBzd2l0Y2ggYmV0d2VlbiBzdHJpbmdzIGFuZCBtZXNzYWdlcy5UaGVyZSBhcmUgYSBmZXcgZGlmZmVyZW50IHR5cGVzIG9mIHByb21wdCB0ZW1wbGF0ZXM6U3RyaW5nIFByb21wdFRlbXBsYXRlc1x1MjAwYlRoZXNlIHByb21wdCB0ZW1wbGF0ZXMgYXJlIHVzZWQgdG8gZm9ybWF0IGEgc2luZ2xlIHN0cmluZywgYW5kIGdlbmVyYWxseSBhcmUgdXNlZCBmb3Igc2ltcGxlciBpbnB1dHMuXG5Gb3IgZXhhbXBsZSwgYSBjb21tb24gd2F5IHRvIGNvbnN0cnVjdCBhbmQgdXNlIGEgUHJvbXB0VGVtcGxhdGUgaXMgYXMgZm9sbG93czpmcm9tIGxhbmdjaGFpbl9jb3JlLnByb21wdHMgaW1wb3J0IFByb21wdFRlbXBsYXRlcHJvbXB0X3RlbXBsYXRlID0gUHJvbXB0VGVtcGxhdGUuZnJvbV90ZW1wbGF0ZShcIlRlbGwgbWUgYSBqb2tlIGFib3V0IHt0b3BpY31cIilwcm9tcHRfdGVtcGxhdGUuaW52b2tlKHtcInRvcGljXCI6IFwiY2F0c1wifSlBUEkgUmVmZXJlbmNlOlByb21wdFRlbXBsYXRlQ2hhdFByb21wdFRlbXBsYXRlc1x1MjAwYlRoZXNlIHByb21wdCB0ZW1wbGF0ZXMgYXJlIHVzZWQgdG8gZm9ybWF0IGEgbGlzdCBvZiBtZXNzYWdlcy4gVGhlc2UgXCJ0ZW1wbGF0ZXNcIiBjb25zaXN0IG9mIGEgbGlzdCBvZiB0ZW1wbGF0ZXMgdGhlbXNlbHZlcy5cbkZvciBleGFtcGxlLCBhIGNvbW1vbiB3YXkgdG8gY29uc3RydWN0IGFuZCB1c2UgYSBDaGF0UHJvbXB0VGVtcGxhdGUgaXMgYXMgZm9sbG93czpmcm9tIGxhbmdjaGFpbl9jb3JlLnByb21wdHMgaW1wb3J0IENoYXRQcm9tcHRUZW1wbGF0ZXByb21wdF90ZW1wbGF0ZSA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tX21lc3NhZ2VzKFsgICAgKFwic3lzdGVtXCIsIFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50XCIpLCAgICAoXCJ1c2VyXCIsIFwiVGVsbCBtZSBhIGpva2UgYWJvdXQge3RvcGljfVwiKV0pcHJvbXB0X3RlbXBsYXRlLmludm9rZSh7XCJ0b3BpY1wiOiBcImNhdHNcIn0pQVBJIFJlZmVyZW5jZTpDaGF0UHJvbXB0VGVtcGxhdGVJbiB0aGUgYWJvdmUgZXhhbXBsZSwgdGhpcyBDaGF0UHJvbXB0VGVtcGxhdGUgd2lsbCBjb25zdHJ1Y3QgdHdvIG1lc3NhZ2VzIHdoZW4gY2FsbGVkLlxuVGhlIGZpcnN0IGlzIGEgc3lzdGVtIG1lc3NhZ2UsIHRoYXQgaGFzIG5vIHZhcmlhYmxlcyB0byBmb3JtYXQuXG5UaGUgc2Vjb25kIGlzIGEgSHVtYW5NZXNzYWdlLCBhbmQgd2lsbCBiZSBmb3JtYXR0ZWQgYnkgdGhlIHRvcGljIHZhcmlhYmxlIHRoZSB1c2VyIHBhc3NlcyBpbi5NZXNzYWdlc1BsYWNlaG9sZGVyXHUyMDBiVGhpcyBwcm9tcHQgdGVtcGxhdGUgaXMgcmVzcG9uc2libGUgZm9yIGFkZGluZyBhIGxpc3Qgb2YgbWVzc2FnZXMgaW4gYSBwYXJ0aWN1bGFyIHBsYWNlLlxuSW4gdGhlIGFib3ZlIENoYXRQcm9tcHRUZW1wbGF0ZSwgd2Ugc2F3IGhvdyB3ZSBjb3VsZCBmb3JtYXQgdHdvIG1lc3NhZ2VzLCBlYWNoIG9uZSBhIHN0cmluZy5cbkJ1dCB3aGF0IGlmIHdlIHdhbnRlZCB0aGUgdXNlciB0byBwYXNzIGluIGEgbGlzdCBvZiBtZXNzYWdlcyB0aGF0IHdlIHdvdWxkIHNsb3QgaW50byBhIHBhcnRpY3VsYXIgc3BvdD9cblRoaXMgaXMgaG93IHlvdSB1c2UgTWVzc2FnZXNQbGFjZWhvbGRlci5mcm9tIGxhbmdjaGFpbl9jb3JlLnByb21wdHMgaW1wb3J0IENoYXRQcm9tcHRUZW1wbGF0ZSwgTWVzc2FnZXNQbGFjZWhvbGRlcmZyb20gbGFuZ2NoYWluX2NvcmUubWVzc2FnZXMgaW1wb3J0IEh1bWFuTWVzc2FnZXByb21wdF90ZW1wbGF0ZSA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tX21lc3NhZ2VzKFsgICAgKFwic3lzdGVtXCIsIFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50XCIpLCAgICBNZXNzYWdlc1BsYWNlaG9sZGVyKFwibXNnc1wiKV0pcHJvbXB0X3RlbXBsYXRlLmludm9rZSh7XCJtc2dzXCI6IFtIdW1hbk1lc3NhZ2UoY29udGVudD1cImhpIVwiKV19KUFQSSBSZWZlcmVuY2U6Q2hhdFByb21wdFRlbXBsYXRlIHwgTWVzc2FnZXNQbGFjZWhvbGRlciB8IEh1bWFuTWVzc2FnZVRoaXMgd2lsbCBwcm9kdWNlIGEgbGlzdCBvZiB0d28gbWVzc2FnZXMsIHRoZSBmaXJzdCBvbmUgYmVpbmcgYSBzeXN0ZW0gbWVzc2FnZSwgYW5kIHRoZSBzZWNvbmQgb25lIGJlaW5nIHRoZSBIdW1hbk1lc3NhZ2Ugd2UgcGFzc2VkIGluLlxuSWYgd2UgaGFkIHBhc3NlZCBpbiA1IG1lc3NhZ2VzLCB0aGVuIGl0IHdvdWxkIGhhdmUgcHJvZHVjZWQgNiBtZXNzYWdlcyBpbiB0b3RhbCAodGhlIHN5c3RlbSBtZXNzYWdlIHBsdXMgdGhlIDUgcGFzc2VkIGluKS5cblRoaXMgaXMgdXNlZnVsIGZvciBsZXR0aW5nIGEgbGlzdCBvZiBtZXNzYWdlcyBiZSBzbG90dGVkIGludG8gYSBwYXJ0aWN1bGFyIHNwb3QuQW4gYWx0ZXJuYXRpdmUgd2F5IHRvIGFjY29tcGxpc2ggdGhlIHNhbWUgdGhpbmcgd2l0aG91dCB1c2luZyB0aGUgTWVzc2FnZXNQbGFjZWhvbGRlciBjbGFzcyBleHBsaWNpdGx5IGlzOnByb21wdF90ZW1wbGF0ZSA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tX21lc3NhZ2VzKFsgICAgKFwic3lzdGVtXCIsIFwiWW91IGFyZSBhIGhlbHBmdWwgYXNzaXN0YW50XCIpLCAgICAoXCJwbGFjZWhvbGRlclwiLCBcInttc2dzfVwiKSAjIDwtLSBUaGlzIGlzIHRoZSBjaGFuZ2VkIHBhcnRdKUZvciBzcGVjaWZpY3Mgb24gaG93IHRvIHVzZSBwcm9tcHQgdGVtcGxhdGVzLCBzZWUgdGhlIHJlbGV2YW50IGhvdy10byBndWlkZXMgaGVyZS5FeGFtcGxlIHNlbGVjdG9yc1x1MjAwYk9uZSBjb21tb24gcHJvbXB0aW5nIHRlY2huaXF1ZSBmb3IgYWNoaWV2aW5nIGJldHRlciBwZXJmb3JtYW5jZSBpcyB0byBpbmNsdWRlIGV4YW1wbGVzIGFzIHBhcnQgb2YgdGhlIHByb21wdC5cblRoaXMgaXMga25vd24gYXMgZmV3LXNob3QgcHJvbXB0aW5nLlxuVGhpcyBnaXZlcyB0aGUgbGFuZ3VhZ2UgbW9kZWwgY29uY3JldGUgZXhhbXBsZXMgb2YgaG93IGl0IHNob3VsZCBiZWhhdmUuXG5Tb21ldGltZXMgdGhlc2UgZXhhbXBsZXMgYXJlIGhhcmRjb2RlZCBpbnRvIHRoZSBwcm9tcHQsIGJ1dCBmb3IgbW9yZSBhZHZhbmNlZCBzaXR1YXRpb25zIGl0IG1heSBiZSBuaWNlIHRvIGR5bmFtaWNhbGx5IHNlbGVjdCB0aGVtLlxuRXhhbXBsZSBTZWxlY3RvcnMgYXJlIGNsYXNzZXMgcmVzcG9uc2libGUgZm9yIHNlbGVjdGluZyBhbmQgdGhlbiBmb3JtYXR0aW5nIGV4YW1wbGVzIGludG8gcHJvbXB0cy5Gb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgZXhhbXBsZSBzZWxlY3RvcnMsIHNlZSB0aGUgcmVsZXZhbnQgaG93LXRvIGd1aWRlcyBoZXJlLk91dHB1dCBwYXJzZXJzXHUyMDBibm90ZVRoZSBpbmZvcm1hdGlvbiBoZXJlIHJlZmVycyB0byBwYXJzZXJzIHRoYXQgdGFrZSBhIHRleHQgb3V0cHV0IGZyb20gYSBtb2RlbCB0cnkgdG8gcGFyc2UgaXQgaW50byBhIG1vcmUgc3RydWN0dXJlZCByZXByZXNlbnRhdGlvbi5cbk1vcmUgYW5kIG1vcmUgbW9kZWxzIGFyZSBzdXBwb3J0aW5nIGZ1bmN0aW9uIChvciB0b29sKSBjYWxsaW5nLCB3aGljaCBoYW5kbGVzIHRoaXMgYXV0b21hdGljYWxseS5cbkl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBmdW5jdGlvbi90b29sIGNhbGxpbmcgcmF0aGVyIHRoYW4gb3V0cHV0IHBhcnNpbmcuXG5TZWUgZG9jdW1lbnRhdGlvbiBmb3IgdGhhdCBoZXJlLk91dHB1dCBwYXJzZXIgaXMgcmVzcG9uc2libGUgZm9yIHRha2luZyB0aGUgb3V0cHV0IG9mIGEgbW9kZWwgYW5kIHRyYW5zZm9ybWluZyBpdCB0byBhIG1vcmUgc3VpdGFibGUgZm9ybWF0IGZvciBkb3duc3RyZWFtIHRhc2tzLlxuVXNlZnVsIHdoZW4geW91IGFyZSB1c2luZyBMTE1zIHRvIGdlbmVyYXRlIHN0cnVjdHVyZWQgZGF0YSwgb3IgdG8gbm9ybWFsaXplIG91dHB1dCBmcm9tIGNoYXQgbW9kZWxzIGFuZCBMTE1zLkxhbmdDaGFpbiBoYXMgbG90cyBvZiBkaWZmZXJlbnQgdHlwZXMgb2Ygb3V0cHV0IHBhcnNlcnMuIFRoaXMgaXMgYSBsaXN0IG9mIG91dHB1dCBwYXJzZXJzIExhbmdDaGFpbiBzdXBwb3J0cy4gVGhlIHRhYmxlIGJlbG93IGhhcyB2YXJpb3VzIHBpZWNlcyBvZiBpbmZvcm1hdGlvbjpOYW1lOiBUaGUgbmFtZSBvZiB0aGUgb3V0cHV0IHBhcnNlclN1cHBvcnRzIFN0cmVhbWluZzogV2hldGhlciB0aGUgb3V0cHV0IHBhcnNlciBzdXBwb3J0cyBzdHJlYW1pbmcuSGFzIEZvcm1hdCBJbnN0cnVjdGlvbnM6IFdoZXRoZXIgdGhlIG91dHB1dCBwYXJzZXIgaGFzIGZvcm1hdCBpbnN0cnVjdGlvbnMuIFRoaXMgaXMgZ2VuZXJhbGx5IGF2YWlsYWJsZSBleGNlcHQgd2hlbiAoYSkgdGhlIGRlc2lyZWQgc2NoZW1hIGlzIG5vdCBzcGVjaWZpZWQgaW4gdGhlIHByb21wdCBidXQgcmF0aGVyIGluIG90aGVyIHBhcmFtZXRlcnMgKGxpa2UgT3BlbkFJIGZ1bmN0aW9uIGNhbGxpbmcpLCBvciAoYikgd2hlbiB0aGUgT3V0cHV0UGFyc2VyIHdyYXBzIGFub3RoZXIgT3V0cHV0UGFyc2VyLkNhbGxzIExMTTogV2hldGhlciB0aGlzIG91dHB1dCBwYXJzZXIgaXRzZWxmIGNhbGxzIGFuIExMTS4gVGhpcyBpcyB1c3VhbGx5IG9ubHkgZG9uZSBieSBvdXRwdXQgcGFyc2VycyB0aGF0IGF0dGVtcHQgdG8gY29ycmVjdCBtaXNmb3JtYXR0ZWQgb3V0cHV0LklucHV0IFR5cGU6IEV4cGVjdGVkIGlucHV0IHR5cGUuIE1vc3Qgb3V0cHV0IHBhcnNlcnMgd29yayBvbiBib3RoIHN0cmluZ3MgYW5kIG1lc3NhZ2VzLCBidXQgc29tZSAobGlrZSBPcGVuQUkgRnVuY3Rpb25zKSBuZWVkIGEgbWVzc2FnZSB3aXRoIHNwZWNpZmljIGt3YXJncy5PdXRwdXQgVHlwZTogVGhlIG91dHB1dCB0eXBlIG9mIHRoZSBvYmplY3QgcmV0dXJuZWQgYnkgdGhlIHBhcnNlci5EZXNjcmlwdGlvbjogT3VyIGNvbW1lbnRhcnkgb24gdGhpcyBvdXRwdXQgcGFyc2VyIGFuZCB3aGVuIHRvIHVzZSBpdC5OYW1lU3VwcG9ydHMgU3RyZWFtaW5nSGFzIEZvcm1hdCBJbnN0cnVjdGlvbnNDYWxscyBMTE1JbnB1dCBUeXBlT3V0cHV0IFR5cGVEZXNjcmlwdGlvbkpTT05cdTI3MDVcdTI3MDVzdHIgfCBNZXNzYWdlSlNPTiBvYmplY3RSZXR1cm5zIGEgSlNPTiBvYmplY3QgYXMgc3BlY2lmaWVkLiBZb3UgY2FuIHNwZWNpZnkgYSBQeWRhbnRpYyBtb2RlbCBhbmQgaXQgd2lsbCByZXR1cm4gSlNPTiBmb3IgdGhhdCBtb2RlbC4gUHJvYmFibHkgdGhlIG1vc3QgcmVsaWFibGUgb3V0cHV0IHBhcnNlciBmb3IgZ2V0dGluZyBzdHJ1Y3R1cmVkIGRhdGEgdGhhdCBkb2VzIE5PVCB1c2UgZnVuY3Rpb24gY2FsbGluZy5YTUxcdTI3MDVcdTI3MDVzdHIgfCBNZXNzYWdlZGljdFJldHVybnMgYSBkaWN0aW9uYXJ5IG9mIHRhZ3MuIFVzZSB3aGVuIFhNTCBvdXRwdXQgaXMgbmVlZGVkLiBVc2Ugd2l0aCBtb2RlbHMgdGhhdCBhcmUgZ29vZCBhdCB3cml0aW5nIFhNTCAobGlrZSBBbnRocm9waWMncykuQ1NWXHUyNzA1XHUyNzA1c3RyIHwgTWVzc2FnZUxpc3Rbc3RyXVJldHVybnMgYSBsaXN0IG9mIGNvbW1hIHNlcGFyYXRlZCB2YWx1ZXMuT3V0cHV0Rml4aW5nXHUyNzA1c3RyIHwgTWVzc2FnZVdyYXBzIGFub3RoZXIgb3V0cHV0IHBhcnNlci4gSWYgdGhhdCBvdXRwdXQgcGFyc2VyIGVycm9ycywgdGhlbiB0aGlzIHdpbGwgcGFzcyB0aGUgZXJyb3IgbWVzc2FnZSBhbmQgdGhlIGJhZCBvdXRwdXQgdG8gYW4gTExNIGFuZCBhc2sgaXQgdG8gZml4IHRoZSBvdXRwdXQuUmV0cnlXaXRoRXJyb3JcdTI3MDVzdHIgfCBNZXNzYWdlV3JhcHMgYW5vdGhlciBvdXRwdXQgcGFyc2VyLiBJZiB0aGF0IG91dHB1dCBwYXJzZXIgZXJyb3JzLCB0aGVuIHRoaXMgd2lsbCBwYXNzIHRoZSBvcmlnaW5hbCBpbnB1dHMsIHRoZSBiYWQgb3V0cHV0LCBhbmQgdGhlIGVycm9yIG1lc3NhZ2UgdG8gYW4gTExNIGFuZCBhc2sgaXQgdG8gZml4IGl0LiBDb21wYXJlZCB0byBPdXRwdXRGaXhpbmdQYXJzZXIsIHRoaXMgb25lIGFsc28gc2VuZHMgdGhlIG9yaWdpbmFsIGluc3RydWN0aW9ucy5QeWRhbnRpY1x1MjcwNXN0ciB8IE1lc3NhZ2VweWRhbnRpYy5CYXNlTW9kZWxUYWtlcyBhIHVzZXIgZGVmaW5lZCBQeWRhbnRpYyBtb2RlbCBhbmQgcmV0dXJucyBkYXRhIGluIHRoYXQgZm9ybWF0LllBTUxcdTI3MDVzdHIgfCBNZXNzYWdlcHlkYW50aWMuQmFzZU1vZGVsVGFrZXMgYSB1c2VyIGRlZmluZWQgUHlkYW50aWMgbW9kZWwgYW5kIHJldHVybnMgZGF0YSBpbiB0aGF0IGZvcm1hdC4gVXNlcyBZQU1MIHRvIGVuY29kZSBpdC5QYW5kYXNEYXRhRnJhbWVcdTI3MDVzdHIgfCBNZXNzYWdlZGljdFVzZWZ1bCBmb3IgZG9pbmcgb3BlcmF0aW9ucyB3aXRoIHBhbmRhcyBEYXRhRnJhbWVzLkVudW1cdTI3MDVzdHIgfCBNZXNzYWdlRW51bVBhcnNlcyByZXNwb25zZSBpbnRvIG9uZSBvZiB0aGUgcHJvdmlkZWQgZW51bSB2YWx1ZXMuRGF0ZXRpbWVcdTI3MDVzdHIgfCBNZXNzYWdlZGF0ZXRpbWUuZGF0ZXRpbWVQYXJzZXMgcmVzcG9uc2UgaW50byBhIGRhdGV0aW1lIHN0cmluZy5TdHJ1Y3R1cmVkXHUyNzA1c3RyIHwgTWVzc2FnZURpY3Rbc3RyLCBzdHJdQW4gb3V0cHV0IHBhcnNlciB0aGF0IHJldHVybnMgc3RydWN0dXJlZCBpbmZvcm1hdGlvbi4gSXQgaXMgbGVzcyBwb3dlcmZ1bCB0aGFuIG90aGVyIG91dHB1dCBwYXJzZXJzIHNpbmNlIGl0IG9ubHkgYWxsb3dzIGZvciBmaWVsZHMgdG8gYmUgc3RyaW5ncy4gVGhpcyBjYW4gYmUgdXNlZnVsIHdoZW4geW91IGFyZSB3b3JraW5nIHdpdGggc21hbGxlciBMTE1zLkZvciBzcGVjaWZpY3Mgb24gaG93IHRvIHVzZSBvdXRwdXQgcGFyc2Vycywgc2VlIHRoZSByZWxldmFudCBob3ctdG8gZ3VpZGVzIGhlcmUuQ2hhdCBoaXN0b3J5XHUyMDBiTW9zdCBMTE0gYXBwbGljYXRpb25zIGhhdmUgYSBjb252ZXJzYXRpb25hbCBpbnRlcmZhY2UuXG5BbiBlc3NlbnRpYWwgY29tcG9uZW50IG9mIGEgY29udmVyc2F0aW9uIGlzIGJlaW5nIGFibGUgdG8gcmVmZXIgdG8gaW5mb3JtYXRpb24gaW50cm9kdWNlZCBlYXJsaWVyIGluIHRoZSBjb252ZXJzYXRpb24uXG5BdCBiYXJlIG1pbmltdW0sIGEgY29udmVyc2F0aW9uYWwgc3lzdGVtIHNob3VsZCBiZSBhYmxlIHRvIGFjY2VzcyBzb21lIHdpbmRvdyBvZiBwYXN0IG1lc3NhZ2VzIGRpcmVjdGx5LlRoZSBjb25jZXB0IG9mIENoYXRIaXN0b3J5IHJlZmVycyB0byBhIGNsYXNzIGluIExhbmdDaGFpbiB3aGljaCBjYW4gYmUgdXNlZCB0byB3cmFwIGFuIGFyYml0cmFyeSBjaGFpbi5cblRoaXMgQ2hhdEhpc3Rvcnkgd2lsbCBrZWVwIHRyYWNrIG9mIGlucHV0cyBhbmQgb3V0cHV0cyBvZiB0aGUgdW5kZXJseWluZyBjaGFpbiwgYW5kIGFwcGVuZCB0aGVtIGFzIG1lc3NhZ2VzIHRvIGEgbWVzc2FnZSBkYXRhYmFzZS5cbkZ1dHVyZSBpbnRlcmFjdGlvbnMgd2lsbCB0aGVuIGxvYWQgdGhvc2UgbWVzc2FnZXMgYW5kIHBhc3MgdGhlbSBpbnRvIHRoZSBjaGFpbiBhcyBwYXJ0IG9mIHRoZSBpbnB1dC5Eb2N1bWVudHNcdTIwMGJBIERvY3VtZW50IG9iamVjdCBpbiBMYW5nQ2hhaW4gY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgc29tZSBkYXRhLiBJdCBoYXMgdHdvIGF0dHJpYnV0ZXM6cGFnZV9jb250ZW50OiBzdHI6IFRoZSBjb250ZW50IG9mIHRoaXMgZG9jdW1lbnQuIEN1cnJlbnRseSBpcyBvbmx5IGEgc3RyaW5nLm1ldGFkYXRhOiBkaWN0OiBBcmJpdHJhcnkgbWV0YWRhdGEgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZG9jdW1lbnQuIENhbiB0cmFjayB0aGUgZG9jdW1lbnQgaWQsIGZpbGUgbmFtZSwgZXRjLkRvY3VtZW50IGxvYWRlcnNcdTIwMGJUaGVzZSBjbGFzc2VzIGxvYWQgRG9jdW1lbnQgb2JqZWN0cy4gTGFuZ0NoYWluIGhhcyBodW5kcmVkcyBvZiBpbnRlZ3JhdGlvbnMgd2l0aCB2YXJpb3VzIGRhdGEgc291cmNlcyB0byBsb2FkIGRhdGEgZnJvbTogU2xhY2ssIE5vdGlvbiwgR29vZ2xlIERyaXZlLCBldGMuRWFjaCBEb2N1bWVudExvYWRlciBoYXMgaXRzIG93biBzcGVjaWZpYyBwYXJhbWV0ZXJzLCBidXQgdGhleSBjYW4gYWxsIGJlIGludm9rZWQgaW4gdGhlIHNhbWUgd2F5IHdpdGggdGhlIC5sb2FkIG1ldGhvZC5cbkFuIGV4YW1wbGUgdXNlIGNhc2UgaXMgYXMgZm9sbG93czpmcm9tIGxhbmdjaGFpbl9jb21tdW5pdHkuZG9jdW1lbnRfbG9hZGVycy5jc3ZfbG9hZGVyIGltcG9ydCBDU1ZMb2FkZXJsb2FkZXIgPSBDU1ZMb2FkZXIoICAgIC4uLiAgIyA8LS0gSW50ZWdyYXRpb24gc3BlY2lmaWMgcGFyYW1ldGVycyBoZXJlKWRhdGEgPSBsb2FkZXIubG9hZCgpQVBJIFJlZmVyZW5jZTpDU1ZMb2FkZXJGb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgZG9jdW1lbnQgbG9hZGVycywgc2VlIHRoZSByZWxldmFudCBob3ctdG8gZ3VpZGVzIGhlcmUuVGV4dCBzcGxpdHRlcnNcdTIwMGJPbmNlIHlvdSd2ZSBsb2FkZWQgZG9jdW1lbnRzLCB5b3UnbGwgb2Z0ZW4gd2FudCB0byB0cmFuc2Zvcm0gdGhlbSB0byBiZXR0ZXIgc3VpdCB5b3VyIGFwcGxpY2F0aW9uLiBUaGUgc2ltcGxlc3QgZXhhbXBsZSBpcyB5b3UgbWF5IHdhbnQgdG8gc3BsaXQgYSBsb25nIGRvY3VtZW50IGludG8gc21hbGxlciBjaHVua3MgdGhhdCBjYW4gZml0IGludG8geW91ciBtb2RlbCdzIGNvbnRleHQgd2luZG93LiBMYW5nQ2hhaW4gaGFzIGEgbnVtYmVyIG9mIGJ1aWx0LWluIGRvY3VtZW50IHRyYW5zZm9ybWVycyB0aGF0IG1ha2UgaXQgZWFzeSB0byBzcGxpdCwgY29tYmluZSwgZmlsdGVyLCBhbmQgb3RoZXJ3aXNlIG1hbmlwdWxhdGUgZG9jdW1lbnRzLldoZW4geW91IHdhbnQgdG8gZGVhbCB3aXRoIGxvbmcgcGllY2VzIG9mIHRleHQsIGl0IGlzIG5lY2Vzc2FyeSB0byBzcGxpdCB1cCB0aGF0IHRleHQgaW50byBjaHVua3MuIEFzIHNpbXBsZSBhcyB0aGlzIHNvdW5kcywgdGhlcmUgaXMgYSBsb3Qgb2YgcG90ZW50aWFsIGNvbXBsZXhpdHkgaGVyZS4gSWRlYWxseSwgeW91IHdhbnQgdG8ga2VlcCB0aGUgc2VtYW50aWNhbGx5IHJlbGF0ZWQgcGllY2VzIG9mIHRleHQgdG9nZXRoZXIuIFdoYXQgXCJzZW1hbnRpY2FsbHkgcmVsYXRlZFwiIG1lYW5zIGNvdWxkIGRlcGVuZCBvbiB0aGUgdHlwZSBvZiB0ZXh0LiBUaGlzIG5vdGVib29rIHNob3djYXNlcyBzZXZlcmFsIHdheXMgdG8gZG8gdGhhdC5BdCBhIGhpZ2ggbGV2ZWwsIHRleHQgc3BsaXR0ZXJzIHdvcmsgYXMgZm9sbG93aW5nOlNwbGl0IHRoZSB0ZXh0IHVwIGludG8gc21hbGwsIHNlbWFudGljYWxseSBtZWFuaW5nZnVsIGNodW5rcyAob2Z0ZW4gc2VudGVuY2VzKS5TdGFydCBjb21iaW5pbmcgdGhlc2Ugc21hbGwgY2h1bmtzIGludG8gYSBsYXJnZXIgY2h1bmsgdW50aWwgeW91IHJlYWNoIGEgY2VydGFpbiBzaXplIChhcyBtZWFzdXJlZCBieSBzb21lIGZ1bmN0aW9uKS5PbmNlIHlvdSByZWFjaCB0aGF0IHNpemUsIG1ha2UgdGhhdCBjaHVuayBpdHMgb3duIHBpZWNlIG9mIHRleHQgYW5kIHRoZW4gc3RhcnQgY3JlYXRpbmcgYSBuZXcgY2h1bmsgb2YgdGV4dCB3aXRoIHNvbWUgb3ZlcmxhcCAodG8ga2VlcCBjb250ZXh0IGJldHdlZW4gY2h1bmtzKS5UaGF0IG1lYW5zIHRoZXJlIGFyZSB0d28gZGlmZmVyZW50IGF4ZXMgYWxvbmcgd2hpY2ggeW91IGNhbiBjdXN0b21pemUgeW91ciB0ZXh0IHNwbGl0dGVyOkhvdyB0aGUgdGV4dCBpcyBzcGxpdEhvdyB0aGUgY2h1bmsgc2l6ZSBpcyBtZWFzdXJlZEZvciBzcGVjaWZpY3Mgb24gaG93IHRvIHVzZSB0ZXh0IHNwbGl0dGVycywgc2VlIHRoZSByZWxldmFudCBob3ctdG8gZ3VpZGVzIGhlcmUuRW1iZWRkaW5nIG1vZGVsc1x1MjAwYkVtYmVkZGluZyBtb2RlbHMgY3JlYXRlIGEgdmVjdG9yIHJlcHJlc2VudGF0aW9uIG9mIGEgcGllY2Ugb2YgdGV4dC4gWW91IGNhbiB0aGluayBvZiBhIHZlY3RvciBhcyBhbiBhcnJheSBvZiBudW1iZXJzIHRoYXQgY2FwdHVyZXMgdGhlIHNlbWFudGljIG1lYW5pbmcgb2YgdGhlIHRleHQuXG5CeSByZXByZXNlbnRpbmcgdGhlIHRleHQgaW4gdGhpcyB3YXksIHlvdSBjYW4gcGVyZm9ybSBtYXRoZW1hdGljYWwgb3BlcmF0aW9ucyB0aGF0IGFsbG93IHlvdSB0byBkbyB0aGluZ3MgbGlrZSBzZWFyY2ggZm9yIG90aGVyIHBpZWNlcyBvZiB0ZXh0IHRoYXQgYXJlIG1vc3Qgc2ltaWxhciBpbiBtZWFuaW5nLlxuVGhlc2UgbmF0dXJhbCBsYW5ndWFnZSBzZWFyY2ggY2FwYWJpbGl0aWVzIHVuZGVycGluIG1hbnkgdHlwZXMgb2YgY29udGV4dCByZXRyaWV2YWwsXG53aGVyZSB3ZSBwcm92aWRlIGFuIExMTSB3aXRoIHRoZSByZWxldmFudCBkYXRhIGl0IG5lZWRzIHRvIGVmZmVjdGl2ZWx5IHJlc3BvbmQgdG8gYSBxdWVyeS5UaGUgRW1iZWRkaW5ncyBjbGFzcyBpcyBhIGNsYXNzIGRlc2lnbmVkIGZvciBpbnRlcmZhY2luZyB3aXRoIHRleHQgZW1iZWRkaW5nIG1vZGVscy4gVGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IGVtYmVkZGluZyBtb2RlbCBwcm92aWRlcnMgKE9wZW5BSSwgQ29oZXJlLCBIdWdnaW5nIEZhY2UsIGV0YykgYW5kIGxvY2FsIG1vZGVscywgYW5kIHRoaXMgY2xhc3MgaXMgZGVzaWduZWQgdG8gcHJvdmlkZSBhIHN0YW5kYXJkIGludGVyZmFjZSBmb3IgYWxsIG9mIHRoZW0uVGhlIGJhc2UgRW1iZWRkaW5ncyBjbGFzcyBpbiBMYW5nQ2hhaW4gcHJvdmlkZXMgdHdvIG1ldGhvZHM6IG9uZSBmb3IgZW1iZWRkaW5nIGRvY3VtZW50cyBhbmQgb25lIGZvciBlbWJlZGRpbmcgYSBxdWVyeS4gVGhlIGZvcm1lciB0YWtlcyBhcyBpbnB1dCBtdWx0aXBsZSB0ZXh0cywgd2hpbGUgdGhlIGxhdHRlciB0YWtlcyBhIHNpbmdsZSB0ZXh0LiBUaGUgcmVhc29uIGZvciBoYXZpbmcgdGhlc2UgYXMgdHdvIHNlcGFyYXRlIG1ldGhvZHMgaXMgdGhhdCBzb21lIGVtYmVkZGluZyBwcm92aWRlcnMgaGF2ZSBkaWZmZXJlbnQgZW1iZWRkaW5nIG1ldGhvZHMgZm9yIGRvY3VtZW50cyAodG8gYmUgc2VhcmNoZWQgb3ZlcikgdnMgcXVlcmllcyAodGhlIHNlYXJjaCBxdWVyeSBpdHNlbGYpLkZvciBzcGVjaWZpY3Mgb24gaG93IHRvIHVzZSBlbWJlZGRpbmcgbW9kZWxzLCBzZWUgdGhlIHJlbGV2YW50IGhvdy10byBndWlkZXMgaGVyZS5WZWN0b3Igc3RvcmVzXHUyMDBiT25lIG9mIHRoZSBtb3N0IGNvbW1vbiB3YXlzIHRvIHN0b3JlIGFuZCBzZWFyY2ggb3ZlciB1bnN0cnVjdHVyZWQgZGF0YSBpcyB0byBlbWJlZCBpdCBhbmQgc3RvcmUgdGhlIHJlc3VsdGluZyBlbWJlZGRpbmcgdmVjdG9ycyxcbmFuZCB0aGVuIGF0IHF1ZXJ5IHRpbWUgdG8gZW1iZWQgdGhlIHVuc3RydWN0dXJlZCBxdWVyeSBhbmQgcmV0cmlldmUgdGhlIGVtYmVkZGluZyB2ZWN0b3JzIHRoYXQgYXJlICdtb3N0IHNpbWlsYXInIHRvIHRoZSBlbWJlZGRlZCBxdWVyeS5cbkEgdmVjdG9yIHN0b3JlIHRha2VzIGNhcmUgb2Ygc3RvcmluZyBlbWJlZGRlZCBkYXRhIGFuZCBwZXJmb3JtaW5nIHZlY3RvciBzZWFyY2ggZm9yIHlvdS5Nb3N0IHZlY3RvciBzdG9yZXMgY2FuIGFsc28gc3RvcmUgbWV0YWRhdGEgYWJvdXQgZW1iZWRkZWQgdmVjdG9ycyBhbmQgc3VwcG9ydCBmaWx0ZXJpbmcgb24gdGhhdCBtZXRhZGF0YSBiZWZvcmVcbnNpbWlsYXJpdHkgc2VhcmNoLCBhbGxvd2luZyB5b3UgbW9yZSBjb250cm9sIG92ZXIgcmV0dXJuZWQgZG9jdW1lbnRzLlZlY3RvciBzdG9yZXMgY2FuIGJlIGNvbnZlcnRlZCB0byB0aGUgcmV0cmlldmVyIGludGVyZmFjZSBieSBkb2luZzp2ZWN0b3JzdG9yZSA9IE15VmVjdG9yU3RvcmUoKXJldHJpZXZlciA9IHZlY3RvcnN0b3JlLmFzX3JldHJpZXZlcigpRm9yIHNwZWNpZmljcyBvbiBob3cgdG8gdXNlIHZlY3RvciBzdG9yZXMsIHNlZSB0aGUgcmVsZXZhbnQgaG93LXRvIGd1aWRlcyBoZXJlLlJldHJpZXZlcnNcdTIwMGJBIHJldHJpZXZlciBpcyBhbiBpbnRlcmZhY2UgdGhhdCByZXR1cm5zIGRvY3VtZW50cyBnaXZlbiBhbiB1bnN0cnVjdHVyZWQgcXVlcnkuXG5JdCBpcyBtb3JlIGdlbmVyYWwgdGhhbiBhIHZlY3RvciBzdG9yZS5cbkEgcmV0cmlldmVyIGRvZXMgbm90IG5lZWQgdG8gYmUgYWJsZSB0byBzdG9yZSBkb2N1bWVudHMsIG9ubHkgdG8gcmV0dXJuIChvciByZXRyaWV2ZSkgdGhlbS5cblJldHJpZXZlcnMgY2FuIGJlIGNyZWF0ZWQgZnJvbSB2ZWN0b3Igc3RvcmVzLCBidXQgYXJlIGFsc28gYnJvYWQgZW5vdWdoIHRvIGluY2x1ZGUgV2lraXBlZGlhIHNlYXJjaCBhbmQgQW1hem9uIEtlbmRyYS5SZXRyaWV2ZXJzIGFjY2VwdCBhIHN0cmluZyBxdWVyeSBhcyBpbnB1dCBhbmQgcmV0dXJuIGEgbGlzdCBvZiBEb2N1bWVudCdzIGFzIG91dHB1dC5Gb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgcmV0cmlldmVycywgc2VlIHRoZSByZWxldmFudCBob3ctdG8gZ3VpZGVzIGhlcmUuS2V5LXZhbHVlIHN0b3Jlc1x1MjAwYkZvciBzb21lIHRlY2huaXF1ZXMsIHN1Y2ggYXMgaW5kZXhpbmcgYW5kIHJldHJpZXZhbCB3aXRoIG11bHRpcGxlIHZlY3RvcnMgcGVyIGRvY3VtZW50IG9yXG5jYWNoaW5nIGVtYmVkZGluZ3MsIGhhdmluZyBhIGZvcm0gb2Yga2V5LXZhbHVlIChLVikgc3RvcmFnZSBpcyBoZWxwZnVsLkxhbmdDaGFpbiBpbmNsdWRlcyBhIEJhc2VTdG9yZSBpbnRlcmZhY2UsXG53aGljaCBhbGxvd3MgZm9yIHN0b3JhZ2Ugb2YgYXJiaXRyYXJ5IGRhdGEuIEhvd2V2ZXIsIExhbmdDaGFpbiBjb21wb25lbnRzIHRoYXQgcmVxdWlyZSBLVi1zdG9yYWdlIGFjY2VwdCBhXG5tb3JlIHNwZWNpZmljIEJhc2VTdG9yZVtzdHIsIGJ5dGVzXSBpbnN0YW5jZSB0aGF0IHN0b3JlcyBiaW5hcnkgZGF0YSAocmVmZXJyZWQgdG8gYXMgYSBCeXRlU3RvcmUpLCBhbmQgaW50ZXJuYWxseSB0YWtlIGNhcmUgb2ZcbmVuY29kaW5nIGFuZCBkZWNvZGluZyBkYXRhIGZvciB0aGVpciBzcGVjaWZpYyBuZWVkcy5UaGlzIG1lYW5zIHRoYXQgYXMgYSB1c2VyLCB5b3Ugb25seSBuZWVkIHRvIHRoaW5rIGFib3V0IG9uZSB0eXBlIG9mIHN0b3JlIHJhdGhlciB0aGFuIGRpZmZlcmVudCBvbmVzIGZvciBkaWZmZXJlbnQgdHlwZXMgb2YgZGF0YS5JbnRlcmZhY2VcdTIwMGJBbGwgQmFzZVN0b3JlcyBzdXBwb3J0IHRoZSBmb2xsb3dpbmcgaW50ZXJmYWNlLiBOb3RlIHRoYXQgdGhlIGludGVyZmFjZSBhbGxvd3NcbmZvciBtb2RpZnlpbmcgbXVsdGlwbGUga2V5LXZhbHVlIHBhaXJzIGF0IG9uY2U6bWdldChrZXk6IFNlcXVlbmNlW3N0cl0pIC0+IExpc3RbT3B0aW9uYWxbYnl0ZXNdXTogZ2V0IHRoZSBjb250ZW50cyBvZiBtdWx0aXBsZSBrZXlzLCByZXR1cm5pbmcgTm9uZSBpZiB0aGUga2V5IGRvZXMgbm90IGV4aXN0bXNldChrZXlfdmFsdWVfcGFpcnM6IFNlcXVlbmNlW1R1cGxlW3N0ciwgYnl0ZXNdXSkgLT4gTm9uZTogc2V0IHRoZSBjb250ZW50cyBvZiBtdWx0aXBsZSBrZXlzbWRlbGV0ZShrZXk6IFNlcXVlbmNlW3N0cl0pIC0+IE5vbmU6IGRlbGV0ZSBtdWx0aXBsZSBrZXlzeWllbGRfa2V5cyhwcmVmaXg6IE9wdGlvbmFsW3N0cl0gPSBOb25lKSAtPiBJdGVyYXRvcltzdHJdOiB5aWVsZCBhbGwga2V5cyBpbiB0aGUgc3RvcmUsIG9wdGlvbmFsbHkgZmlsdGVyaW5nIGJ5IGEgcHJlZml4Rm9yIGtleS12YWx1ZSBzdG9yZSBpbXBsZW1lbnRhdGlvbnMsIHNlZSB0aGlzIHNlY3Rpb24uVG9vbHNcdTIwMGJUb29scyBhcmUgdXRpbGl0aWVzIGRlc2lnbmVkIHRvIGJlIGNhbGxlZCBieSBhIG1vZGVsOiB0aGVpciBpbnB1dHMgYXJlIGRlc2lnbmVkIHRvIGJlIGdlbmVyYXRlZCBieSBtb2RlbHMsIGFuZCB0aGVpciBvdXRwdXRzIGFyZSBkZXNpZ25lZCB0byBiZSBwYXNzZWQgYmFjayB0byBtb2RlbHMuXG5Ub29scyBhcmUgbmVlZGVkIHdoZW5ldmVyIHlvdSB3YW50IGEgbW9kZWwgdG8gY29udHJvbCBwYXJ0cyBvZiB5b3VyIGNvZGUgb3IgY2FsbCBvdXQgdG8gZXh0ZXJuYWwgQVBJcy5BIHRvb2wgY29uc2lzdHMgb2Y6VGhlIG5hbWUgb2YgdGhlIHRvb2wuQSBkZXNjcmlwdGlvbiBvZiB3aGF0IHRoZSB0b29sIGRvZXMuQSBKU09OIHNjaGVtYSBkZWZpbmluZyB0aGUgaW5wdXRzIHRvIHRoZSB0b29sLkEgZnVuY3Rpb24gKGFuZCwgb3B0aW9uYWxseSwgYW4gYXN5bmMgdmFyaWFudCBvZiB0aGUgZnVuY3Rpb24pLldoZW4gYSB0b29sIGlzIGJvdW5kIHRvIGEgbW9kZWwsIHRoZSBuYW1lLCBkZXNjcmlwdGlvbiBhbmQgSlNPTiBzY2hlbWEgYXJlIHByb3ZpZGVkIGFzIGNvbnRleHQgdG8gdGhlIG1vZGVsLlxuR2l2ZW4gYSBsaXN0IG9mIHRvb2xzIGFuZCBhIHNldCBvZiBpbnN0cnVjdGlvbnMsIGEgbW9kZWwgY2FuIHJlcXVlc3QgdG8gY2FsbCBvbmUgb3IgbW9yZSB0b29scyB3aXRoIHNwZWNpZmljIGlucHV0cy5cblR5cGljYWwgdXNhZ2UgbWF5IGxvb2sgbGlrZSB0aGUgZm9sbG93aW5nOnRvb2xzID0gWy4uLl0gIyBEZWZpbmUgYSBsaXN0IG9mIHRvb2xzbGxtX3dpdGhfdG9vbHMgPSBsbG0uYmluZF90b29scyh0b29scylhaV9tc2cgPSBsbG1fd2l0aF90b29scy5pbnZva2UoXCJkbyB4eXouLi5cIikjIC0+IEFJTWVzc2FnZSh0b29sX2NhbGxzPVtUb29sQ2FsbCguLi4pLCAuLi5dLCAuLi4pVGhlIEFJTWVzc2FnZSByZXR1cm5lZCBmcm9tIHRoZSBtb2RlbCBNQVkgaGF2ZSB0b29sX2NhbGxzIGFzc29jaWF0ZWQgd2l0aCBpdC5cblJlYWQgdGhpcyBndWlkZSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB3aGF0IHRoZSByZXNwb25zZSB0eXBlIG1heSBsb29rIGxpa2UuT25jZSB0aGUgY2hvc2VuIHRvb2xzIGFyZSBpbnZva2VkLCB0aGUgcmVzdWx0cyBjYW4gYmUgcGFzc2VkIGJhY2sgdG8gdGhlIG1vZGVsIHNvIHRoYXQgaXQgY2FuIGNvbXBsZXRlIHdoYXRldmVyIHRhc2tcbml0J3MgcGVyZm9ybWluZy5cblRoZXJlIGFyZSBnZW5lcmFsbHkgdHdvIGRpZmZlcmVudCB3YXlzIHRvIGludm9rZSB0aGUgdG9vbCBhbmQgcGFzcyBiYWNrIHRoZSByZXNwb25zZTpJbnZva2Ugd2l0aCBqdXN0IHRoZSBhcmd1bWVudHNcdTIwMGJXaGVuIHlvdSBpbnZva2UgYSB0b29sIHdpdGgganVzdCB0aGUgYXJndW1lbnRzLCB5b3Ugd2lsbCBnZXQgYmFjayB0aGUgcmF3IHRvb2wgb3V0cHV0ICh1c3VhbGx5IGEgc3RyaW5nKS5cblRoaXMgZ2VuZXJhbGx5IGxvb2tzIGxpa2U6IyBZb3Ugd2lsbCB3YW50IHRvIHByZXZpb3VzbHkgY2hlY2sgdGhhdCB0aGUgTExNIHJldHVybmVkIHRvb2wgY2FsbHN0b29sX2NhbGwgPSBhaV9tc2cudG9vbF9jYWxsc1swXSMgVG9vbENhbGwoYXJncz17Li4ufSwgaWQ9Li4uLCAuLi4pdG9vbF9vdXRwdXQgPSB0b29sLmludm9rZSh0b29sX2NhbGxbXCJhcmdzXCJdKXRvb2xfbWVzc2FnZSA9IFRvb2xNZXNzYWdlKCAgICBjb250ZW50PXRvb2xfb3V0cHV0LCAgICB0b29sX2NhbGxfaWQ9dG9vbF9jYWxsW1wiaWRcIl0sICAgIG5hbWU9dG9vbF9jYWxsW1wibmFtZVwiXSlOb3RlIHRoYXQgdGhlIGNvbnRlbnQgZmllbGQgd2lsbCBnZW5lcmFsbHkgYmUgcGFzc2VkIGJhY2sgdG8gdGhlIG1vZGVsLlxuSWYgeW91IGRvIG5vdCB3YW50IHRoZSByYXcgdG9vbCByZXNwb25zZSB0byBiZSBwYXNzZWQgdG8gdGhlIG1vZGVsLCBidXQgeW91IHN0aWxsIHdhbnQgdG8ga2VlcCBpdCBhcm91bmQsXG55b3UgY2FuIHRyYW5zZm9ybSB0aGUgdG9vbCBvdXRwdXQgYnV0IGFsc28gcGFzcyBpdCBhcyBhbiBhcnRpZmFjdCAocmVhZCBtb3JlIGFib3V0IFRvb2xNZXNzYWdlLmFydGlmYWN0IGhlcmUpLi4uICMgU2FtZSBjb2RlIGFzIGFib3ZlcmVzcG9uc2VfZm9yX2xsbSA9IHRyYW5zZm9ybShyZXNwb25zZSl0b29sX21lc3NhZ2UgPSBUb29sTWVzc2FnZSggICAgY29udGVudD1yZXNwb25zZV9mb3JfbGxtLCAgICB0b29sX2NhbGxfaWQ9dG9vbF9jYWxsW1wiaWRcIl0sICAgIG5hbWU9dG9vbF9jYWxsW1wibmFtZVwiXSwgICAgYXJ0aWZhY3Q9dG9vbF9vdXRwdXQpSW52b2tlIHdpdGggVG9vbENhbGxcdTIwMGJUaGUgb3RoZXIgd2F5IHRvIGludm9rZSBhIHRvb2wgaXMgdG8gY2FsbCBpdCB3aXRoIHRoZSBmdWxsIFRvb2xDYWxsIHRoYXQgd2FzIGdlbmVyYXRlZCBieSB0aGUgbW9kZWwuXG5XaGVuIHlvdSBkbyB0aGlzLCB0aGUgdG9vbCB3aWxsIHJldHVybiBhIFRvb2xNZXNzYWdlLlxuVGhlIGJlbmVmaXRzIG9mIHRoaXMgYXJlIHRoYXQgeW91IGRvbid0IGhhdmUgdG8gd3JpdGUgdGhlIGxvZ2ljIHlvdXJzZWxmIHRvIHRyYW5zZm9ybSB0aGUgdG9vbCBvdXRwdXQgaW50byBhIFRvb2xNZXNzYWdlLlxuVGhpcyBnZW5lcmFsbHkgbG9va3MgbGlrZTp0b29sX2NhbGwgPSBhaV9tc2cudG9vbF9jYWxsc1swXSMgLT4gVG9vbENhbGwoYXJncz17Li4ufSwgaWQ9Li4uLCAuLi4pdG9vbF9tZXNzYWdlID0gdG9vbC5pbnZva2UodG9vbF9jYWxsKSMgLT4gVG9vbE1lc3NhZ2UoIyAgICAgIGNvbnRlbnQ9XCJ0b29sIHJlc3VsdCBmb29iYXIuLi5cIiwjICAgICAgdG9vbF9jYWxsX2lkPS4uLiwjICAgICAgbmFtZT1cInRvb2xfbmFtZVwiIyAgICApSWYgeW91IGFyZSBpbnZva2luZyB0aGUgdG9vbCB0aGlzIHdheSBhbmQgd2FudCB0byBpbmNsdWRlIGFuIGFydGlmYWN0IGZvciB0aGUgVG9vbE1lc3NhZ2UsIHlvdSB3aWxsIG5lZWQgdG8gaGF2ZSB0aGUgdG9vbCByZXR1cm4gdHdvIHRoaW5ncy5cblJlYWQgbW9yZSBhYm91dCBkZWZpbmluZyB0b29scyB0aGF0IHJldHVybiBhcnRpZmFjdHMgaGVyZS5CZXN0IHByYWN0aWNlc1x1MjAwYldoZW4gZGVzaWduaW5nIHRvb2xzIHRvIGJlIHVzZWQgYnkgYSBtb2RlbCwgaXQgaXMgaW1wb3J0YW50IHRvIGtlZXAgaW4gbWluZCB0aGF0OkNoYXQgbW9kZWxzIHRoYXQgaGF2ZSBleHBsaWNpdCB0b29sLWNhbGxpbmcgQVBJcyB3aWxsIGJlIGJldHRlciBhdCB0b29sIGNhbGxpbmcgdGhhbiBub24tZmluZS10dW5lZCBtb2RlbHMuTW9kZWxzIHdpbGwgcGVyZm9ybSBiZXR0ZXIgaWYgdGhlIHRvb2xzIGhhdmUgd2VsbC1jaG9zZW4gbmFtZXMsIGRlc2NyaXB0aW9ucywgYW5kIEpTT04gc2NoZW1hcy4gVGhpcyBhbm90aGVyIGZvcm0gb2YgcHJvbXB0IGVuZ2luZWVyaW5nLlNpbXBsZSwgbmFycm93bHkgc2NvcGVkIHRvb2xzIGFyZSBlYXNpZXIgZm9yIG1vZGVscyB0byB1c2UgdGhhbiBjb21wbGV4IHRvb2xzLlJlbGF0ZWRcdTIwMGJGb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgdG9vbHMsIHNlZSB0aGUgdG9vbHMgaG93LXRvIGd1aWRlcy5UbyB1c2UgYSBwcmUtYnVpbHQgdG9vbCwgc2VlIHRoZSB0b29sIGludGVncmF0aW9uIGRvY3MuVG9vbGtpdHNcdTIwMGJUb29sa2l0cyBhcmUgY29sbGVjdGlvbnMgb2YgdG9vbHMgdGhhdCBhcmUgZGVzaWduZWQgdG8gYmUgdXNlZCB0b2dldGhlciBmb3Igc3BlY2lmaWMgdGFza3MuIFRoZXkgaGF2ZSBjb252ZW5pZW50IGxvYWRpbmcgbWV0aG9kcy5BbGwgVG9vbGtpdHMgZXhwb3NlIGEgZ2V0X3Rvb2xzIG1ldGhvZCB3aGljaCByZXR1cm5zIGEgbGlzdCBvZiB0b29scy5cbllvdSBjYW4gdGhlcmVmb3JlIGRvOiMgSW5pdGlhbGl6ZSBhIHRvb2xraXR0b29sa2l0ID0gRXhhbXBsZVRvb2tpdCguLi4pIyBHZXQgbGlzdCBvZiB0b29sc3Rvb2xzID0gdG9vbGtpdC5nZXRfdG9vbHMoKUFnZW50c1x1MjAwYkJ5IHRoZW1zZWx2ZXMsIGxhbmd1YWdlIG1vZGVscyBjYW4ndCB0YWtlIGFjdGlvbnMgLSB0aGV5IGp1c3Qgb3V0cHV0IHRleHQuXG5BIGJpZyB1c2UgY2FzZSBmb3IgTGFuZ0NoYWluIGlzIGNyZWF0aW5nIGFnZW50cy5cbkFnZW50cyBhcmUgc3lzdGVtcyB0aGF0IHVzZSBhbiBMTE0gYXMgYSByZWFzb25pbmcgZW5naW5lIHRvIGRldGVybWluZSB3aGljaCBhY3Rpb25zIHRvIHRha2UgYW5kIHdoYXQgdGhlIGlucHV0cyB0byB0aG9zZSBhY3Rpb25zIHNob3VsZCBiZS5cblRoZSByZXN1bHRzIG9mIHRob3NlIGFjdGlvbnMgY2FuIHRoZW4gYmUgZmVkIGJhY2sgaW50byB0aGUgYWdlbnQgYW5kIGl0IGRldGVybWluZSB3aGV0aGVyIG1vcmUgYWN0aW9ucyBhcmUgbmVlZGVkLCBvciB3aGV0aGVyIGl0IGlzIG9rYXkgdG8gZmluaXNoLkxhbmdHcmFwaCBpcyBhbiBleHRlbnNpb24gb2YgTGFuZ0NoYWluIHNwZWNpZmljYWxseSBhaW1lZCBhdCBjcmVhdGluZyBoaWdobHkgY29udHJvbGxhYmxlIGFuZCBjdXN0b21pemFibGUgYWdlbnRzLlxuUGxlYXNlIGNoZWNrIG91dCB0aGF0IGRvY3VtZW50YXRpb24gZm9yIGEgbW9yZSBpbiBkZXB0aCBvdmVydmlldyBvZiBhZ2VudCBjb25jZXB0cy5UaGVyZSBpcyBhIGxlZ2FjeSBhZ2VudCBjb25jZXB0IGluIExhbmdDaGFpbiB0aGF0IHdlIGFyZSBtb3ZpbmcgdG93YXJkcyBkZXByZWNhdGluZzogQWdlbnRFeGVjdXRvci5cbkFnZW50RXhlY3V0b3Igd2FzIGVzc2VudGlhbGx5IGEgcnVudGltZSBmb3IgYWdlbnRzLlxuSXQgd2FzIGEgZ3JlYXQgcGxhY2UgdG8gZ2V0IHN0YXJ0ZWQsIGhvd2V2ZXIsIGl0IHdhcyBub3QgZmxleGlibGUgZW5vdWdoIGFzIHlvdSBzdGFydGVkIHRvIGhhdmUgbW9yZSBjdXN0b21pemVkIGFnZW50cy5cbkluIG9yZGVyIHRvIHNvbHZlIHRoYXQgd2UgYnVpbHQgTGFuZ0dyYXBoIHRvIGJlIHRoaXMgZmxleGlibGUsIGhpZ2hseS1jb250cm9sbGFibGUgcnVudGltZS5JZiB5b3UgYXJlIHN0aWxsIHVzaW5nIEFnZW50RXhlY3V0b3IsIGRvIG5vdCBmZWFyOiB3ZSBzdGlsbCBoYXZlIGEgZ3VpZGUgb24gaG93IHRvIHVzZSBBZ2VudEV4ZWN1dG9yLlxuSXQgaXMgcmVjb21tZW5kZWQsIGhvd2V2ZXIsIHRoYXQgeW91IHN0YXJ0IHRvIHRyYW5zaXRpb24gdG8gTGFuZ0dyYXBoLlxuSW4gb3JkZXIgdG8gYXNzaXN0IGluIHRoaXMsIHdlIGhhdmUgcHV0IHRvZ2V0aGVyIGEgdHJhbnNpdGlvbiBndWlkZSBvbiBob3cgdG8gZG8gc28uUmVBY3QgYWdlbnRzXHUyMDBiT25lIHBvcHVsYXIgYXJjaGl0ZWN0dXJlIGZvciBidWlsZGluZyBhZ2VudHMgaXMgUmVBY3QuXG5SZUFjdCBjb21iaW5lcyByZWFzb25pbmcgYW5kIGFjdGluZyBpbiBhbiBpdGVyYXRpdmUgcHJvY2VzcyAtIGluIGZhY3QgdGhlIG5hbWUgXCJSZUFjdFwiIHN0YW5kcyBmb3IgXCJSZWFzb25cIiBhbmQgXCJBY3RcIi5UaGUgZ2VuZXJhbCBmbG93IGxvb2tzIGxpa2UgdGhpczpUaGUgbW9kZWwgd2lsbCBcInRoaW5rXCIgYWJvdXQgd2hhdCBzdGVwIHRvIHRha2UgaW4gcmVzcG9uc2UgdG8gYW4gaW5wdXQgYW5kIGFueSBwcmV2aW91cyBvYnNlcnZhdGlvbnMuVGhlIG1vZGVsIHdpbGwgdGhlbiBjaG9vc2UgYW4gYWN0aW9uIGZyb20gYXZhaWxhYmxlIHRvb2xzIChvciBjaG9vc2UgdG8gcmVzcG9uZCB0byB0aGUgdXNlcikuVGhlIG1vZGVsIHdpbGwgZ2VuZXJhdGUgYXJndW1lbnRzIHRvIHRoYXQgdG9vbC5UaGUgYWdlbnQgcnVudGltZSAoZXhlY3V0b3IpIHdpbGwgcGFyc2Ugb3V0IHRoZSBjaG9zZW4gdG9vbCBhbmQgY2FsbCBpdCB3aXRoIHRoZSBnZW5lcmF0ZWQgYXJndW1lbnRzLlRoZSBleGVjdXRvciB3aWxsIHJldHVybiB0aGUgcmVzdWx0cyBvZiB0aGUgdG9vbCBjYWxsIGJhY2sgdG8gdGhlIG1vZGVsIGFzIGFuIG9ic2VydmF0aW9uLlRoaXMgcHJvY2VzcyByZXBlYXRzIHVudGlsIHRoZSBhZ2VudCBjaG9vc2VzIHRvIHJlc3BvbmQuVGhlcmUgYXJlIGdlbmVyYWwgcHJvbXB0aW5nIGJhc2VkIGltcGxlbWVudGF0aW9ucyB0aGF0IGRvIG5vdCByZXF1aXJlIGFueSBtb2RlbC1zcGVjaWZpYyBmZWF0dXJlcywgYnV0IHRoZSBtb3N0XG5yZWxpYWJsZSBpbXBsZW1lbnRhdGlvbnMgdXNlIGZlYXR1cmVzIGxpa2UgdG9vbCBjYWxsaW5nIHRvIHJlbGlhYmx5IGZvcm1hdCBvdXRwdXRzXG5hbmQgcmVkdWNlIHZhcmlhbmNlLlBsZWFzZSBzZWUgdGhlIExhbmdHcmFwaCBkb2N1bWVudGF0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uLFxub3IgdGhpcyBob3ctdG8gZ3VpZGUgZm9yIHNwZWNpZmljIGluZm9ybWF0aW9uIG9uIG1pZ3JhdGluZyB0byBMYW5nR3JhcGguQ2FsbGJhY2tzXHUyMDBiTGFuZ0NoYWluIHByb3ZpZGVzIGEgY2FsbGJhY2tzIHN5c3RlbSB0aGF0IGFsbG93cyB5b3UgdG8gaG9vayBpbnRvIHRoZSB2YXJpb3VzIHN0YWdlcyBvZiB5b3VyIExMTSBhcHBsaWNhdGlvbi4gVGhpcyBpcyB1c2VmdWwgZm9yIGxvZ2dpbmcsIG1vbml0b3JpbmcsIHN0cmVhbWluZywgYW5kIG90aGVyIHRhc2tzLllvdSBjYW4gc3Vic2NyaWJlIHRvIHRoZXNlIGV2ZW50cyBieSB1c2luZyB0aGUgY2FsbGJhY2tzIGFyZ3VtZW50IGF2YWlsYWJsZSB0aHJvdWdob3V0IHRoZSBBUEkuIFRoaXMgYXJndW1lbnQgaXMgbGlzdCBvZiBoYW5kbGVyIG9iamVjdHMsIHdoaWNoIGFyZSBleHBlY3RlZCB0byBpbXBsZW1lbnQgb25lIG9yIG1vcmUgb2YgdGhlIG1ldGhvZHMgZGVzY3JpYmVkIGJlbG93IGluIG1vcmUgZGV0YWlsLkNhbGxiYWNrIEV2ZW50c1x1MjAwYkV2ZW50RXZlbnQgVHJpZ2dlckFzc29jaWF0ZWQgTWV0aG9kQ2hhdCBtb2RlbCBzdGFydFdoZW4gYSBjaGF0IG1vZGVsIHN0YXJ0c29uX2NoYXRfbW9kZWxfc3RhcnRMTE0gc3RhcnRXaGVuIGEgbGxtIHN0YXJ0c29uX2xsbV9zdGFydExMTSBuZXcgdG9rZW5XaGVuIGFuIGxsbSBPUiBjaGF0IG1vZGVsIGVtaXRzIGEgbmV3IHRva2Vub25fbGxtX25ld190b2tlbkxMTSBlbmRzV2hlbiBhbiBsbG0gT1IgY2hhdCBtb2RlbCBlbmRzb25fbGxtX2VuZExMTSBlcnJvcnNXaGVuIGFuIGxsbSBPUiBjaGF0IG1vZGVsIGVycm9yc29uX2xsbV9lcnJvckNoYWluIHN0YXJ0V2hlbiBhIGNoYWluIHN0YXJ0cyBydW5uaW5nb25fY2hhaW5fc3RhcnRDaGFpbiBlbmRXaGVuIGEgY2hhaW4gZW5kc29uX2NoYWluX2VuZENoYWluIGVycm9yV2hlbiBhIGNoYWluIGVycm9yc29uX2NoYWluX2Vycm9yVG9vbCBzdGFydFdoZW4gYSB0b29sIHN0YXJ0cyBydW5uaW5nb25fdG9vbF9zdGFydFRvb2wgZW5kV2hlbiBhIHRvb2wgZW5kc29uX3Rvb2xfZW5kVG9vbCBlcnJvcldoZW4gYSB0b29sIGVycm9yc29uX3Rvb2xfZXJyb3JBZ2VudCBhY3Rpb25XaGVuIGFuIGFnZW50IHRha2VzIGFuIGFjdGlvbm9uX2FnZW50X2FjdGlvbkFnZW50IGZpbmlzaFdoZW4gYW4gYWdlbnQgZW5kc29uX2FnZW50X2ZpbmlzaFJldHJpZXZlciBzdGFydFdoZW4gYSByZXRyaWV2ZXIgc3RhcnRzb25fcmV0cmlldmVyX3N0YXJ0UmV0cmlldmVyIGVuZFdoZW4gYSByZXRyaWV2ZXIgZW5kc29uX3JldHJpZXZlcl9lbmRSZXRyaWV2ZXIgZXJyb3JXaGVuIGEgcmV0cmlldmVyIGVycm9yc29uX3JldHJpZXZlcl9lcnJvclRleHRXaGVuIGFyYml0cmFyeSB0ZXh0IGlzIHJ1bm9uX3RleHRSZXRyeVdoZW4gYSByZXRyeSBldmVudCBpcyBydW5vbl9yZXRyeUNhbGxiYWNrIGhhbmRsZXJzXHUyMDBiQ2FsbGJhY2sgaGFuZGxlcnMgY2FuIGVpdGhlciBiZSBzeW5jIG9yIGFzeW5jOlN5bmMgY2FsbGJhY2sgaGFuZGxlcnMgaW1wbGVtZW50IHRoZSBCYXNlQ2FsbGJhY2tIYW5kbGVyIGludGVyZmFjZS5Bc3luYyBjYWxsYmFjayBoYW5kbGVycyBpbXBsZW1lbnQgdGhlIEFzeW5jQ2FsbGJhY2tIYW5kbGVyIGludGVyZmFjZS5EdXJpbmcgcnVuLXRpbWUgTGFuZ0NoYWluIGNvbmZpZ3VyZXMgYW4gYXBwcm9wcmlhdGUgY2FsbGJhY2sgbWFuYWdlciAoZS5nLiwgQ2FsbGJhY2tNYW5hZ2VyIG9yIEFzeW5jQ2FsbGJhY2tNYW5hZ2VyIHdoaWNoIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIGNhbGxpbmcgdGhlIGFwcHJvcHJpYXRlIG1ldGhvZCBvbiBlYWNoIFwicmVnaXN0ZXJlZFwiIGNhbGxiYWNrIGhhbmRsZXIgd2hlbiB0aGUgZXZlbnQgaXMgdHJpZ2dlcmVkLlBhc3NpbmcgY2FsbGJhY2tzXHUyMDBiVGhlIGNhbGxiYWNrcyBwcm9wZXJ0eSBpcyBhdmFpbGFibGUgb24gbW9zdCBvYmplY3RzIHRocm91Z2hvdXQgdGhlIEFQSSAoTW9kZWxzLCBUb29scywgQWdlbnRzLCBldGMuKSBpbiB0d28gZGlmZmVyZW50IHBsYWNlczpSZXF1ZXN0IHRpbWUgY2FsbGJhY2tzOiBQYXNzZWQgYXQgdGhlIHRpbWUgb2YgdGhlIHJlcXVlc3QgaW4gYWRkaXRpb24gdG8gdGhlIGlucHV0IGRhdGEuXG5BdmFpbGFibGUgb24gYWxsIHN0YW5kYXJkIFJ1bm5hYmxlIG9iamVjdHMuIFRoZXNlIGNhbGxiYWNrcyBhcmUgSU5IRVJJVEVEIGJ5IGFsbCBjaGlsZHJlblxub2YgdGhlIG9iamVjdCB0aGV5IGFyZSBkZWZpbmVkIG9uLiBGb3IgZXhhbXBsZSwgY2hhaW4uaW52b2tlKHtcIm51bWJlclwiOiAyNX0sIHtcImNhbGxiYWNrc1wiOiBbaGFuZGxlcl19KS5Db25zdHJ1Y3RvciBjYWxsYmFja3M6IGNoYWluID0gVGhlTmFtZU9mU29tZUNoYWluKGNhbGxiYWNrcz1baGFuZGxlcl0pLiBUaGVzZSBjYWxsYmFja3NcbmFyZSBwYXNzZWQgYXMgYXJndW1lbnRzIHRvIHRoZSBjb25zdHJ1Y3RvciBvZiB0aGUgb2JqZWN0LiBUaGUgY2FsbGJhY2tzIGFyZSBzY29wZWRcbm9ubHkgdG8gdGhlIG9iamVjdCB0aGV5IGFyZSBkZWZpbmVkIG9uLCBhbmQgYXJlIG5vdCBpbmhlcml0ZWQgYnkgYW55IGNoaWxkcmVuIG9mIHRoZSBvYmplY3QuZGFuZ2VyQ29uc3RydWN0b3IgY2FsbGJhY2tzIGFyZSBzY29wZWQgb25seSB0byB0aGUgb2JqZWN0IHRoZXkgYXJlIGRlZmluZWQgb24uIFRoZXkgYXJlIG5vdCBpbmhlcml0ZWQgYnkgY2hpbGRyZW5cbm9mIHRoZSBvYmplY3QuSWYgeW91J3JlIGNyZWF0aW5nIGEgY3VzdG9tIGNoYWluIG9yIHJ1bm5hYmxlLCB5b3UgbmVlZCB0byByZW1lbWJlciB0byBwcm9wYWdhdGUgcmVxdWVzdCB0aW1lXG5jYWxsYmFja3MgdG8gYW55IGNoaWxkIG9iamVjdHMuQXN5bmMgaW4gUHl0aG9uPD0zLjEwQW55IFJ1bm5hYmxlTGFtYmRhLCBhIFJ1bm5hYmxlR2VuZXJhdG9yLCBvciBUb29sIHRoYXQgaW52b2tlcyBvdGhlciBydW5uYWJsZXNcbmFuZCBpcyBydW5uaW5nIGFzeW5jIGluIHB5dGhvbjw9My4xMCwgd2lsbCBoYXZlIHRvIHByb3BhZ2F0ZSBjYWxsYmFja3MgdG8gY2hpbGRcbm9iamVjdHMgbWFudWFsbHkuIFRoaXMgaXMgYmVjYXVzZSBMYW5nQ2hhaW4gY2Fubm90IGF1dG9tYXRpY2FsbHkgcHJvcGFnYXRlXG5jYWxsYmFja3MgdG8gY2hpbGQgb2JqZWN0cyBpbiB0aGlzIGNhc2UuVGhpcyBpcyBhIGNvbW1vbiByZWFzb24gd2h5IHlvdSBtYXkgZmFpbCB0byBzZWUgZXZlbnRzIGJlaW5nIGVtaXR0ZWQgZnJvbSBjdXN0b21cbnJ1bm5hYmxlcyBvciB0b29scy5Gb3Igc3BlY2lmaWNzIG9uIGhvdyB0byB1c2UgY2FsbGJhY2tzLCBzZWUgdGhlIHJlbGV2YW50IGhvdy10byBndWlkZXMgaGVyZS5UZWNobmlxdWVzXHUyMDBiU3RyZWFtaW5nXHUyMDBiSW5kaXZpZHVhbCBMTE0gY2FsbHMgb2Z0ZW4gcnVuIGZvciBtdWNoIGxvbmdlciB0aGFuIHRyYWRpdGlvbmFsIHJlc291cmNlIHJlcXVlc3RzLlxuVGhpcyBjb21wb3VuZHMgd2hlbiB5b3UgYnVpbGQgbW9yZSBjb21wbGV4IGNoYWlucyBvciBhZ2VudHMgdGhhdCByZXF1aXJlIG11bHRpcGxlIHJlYXNvbmluZyBzdGVwcy5Gb3J0dW5hdGVseSwgTExNcyBnZW5lcmF0ZSBvdXRwdXQgaXRlcmF0aXZlbHksIHdoaWNoIG1lYW5zIGl0J3MgcG9zc2libGUgdG8gc2hvdyBzZW5zaWJsZSBpbnRlcm1lZGlhdGUgcmVzdWx0c1xuYmVmb3JlIHRoZSBmaW5hbCByZXNwb25zZSBpcyByZWFkeS4gQ29uc3VtaW5nIG91dHB1dCBhcyBzb29uIGFzIGl0IGJlY29tZXMgYXZhaWxhYmxlIGhhcyB0aGVyZWZvcmUgYmVjb21lIGEgdml0YWwgcGFydCBvZiB0aGUgVVhcbmFyb3VuZCBidWlsZGluZyBhcHBzIHdpdGggTExNcyB0byBoZWxwIGFsbGV2aWF0ZSBsYXRlbmN5IGlzc3VlcywgYW5kIExhbmdDaGFpbiBhaW1zIHRvIGhhdmUgZmlyc3QtY2xhc3Mgc3VwcG9ydCBmb3Igc3RyZWFtaW5nLkJlbG93LCB3ZSdsbCBkaXNjdXNzIHNvbWUgY29uY2VwdHMgYW5kIGNvbnNpZGVyYXRpb25zIGFyb3VuZCBzdHJlYW1pbmcgaW4gTGFuZ0NoYWluLi5zdHJlYW0oKSBhbmQgLmFzdHJlYW0oKVx1MjAwYk1vc3QgbW9kdWxlcyBpbiBMYW5nQ2hhaW4gaW5jbHVkZSB0aGUgLnN0cmVhbSgpIG1ldGhvZCAoYW5kIHRoZSBlcXVpdmFsZW50IC5hc3RyZWFtKCkgbWV0aG9kIGZvciBhc3luYyBlbnZpcm9ubWVudHMpIGFzIGFuIGVyZ29ub21pYyBzdHJlYW1pbmcgaW50ZXJmYWNlLlxuLnN0cmVhbSgpIHJldHVybnMgYW4gaXRlcmF0b3IsIHdoaWNoIHlvdSBjYW4gY29uc3VtZSB3aXRoIGEgc2ltcGxlIGZvciBsb29wLiBIZXJlJ3MgYW4gZXhhbXBsZSB3aXRoIGEgY2hhdCBtb2RlbDpmcm9tIGxhbmdjaGFpbl9hbnRocm9waWMgaW1wb3J0IENoYXRBbnRocm9waWNtb2RlbCA9IENoYXRBbnRocm9waWMobW9kZWw9XCJjbGF1ZGUtMy1zb25uZXQtMjAyNDAyMjlcIilmb3IgY2h1bmsgaW4gbW9kZWwuc3RyZWFtKFwid2hhdCBjb2xvciBpcyB0aGUgc2t5P1wiKTogICAgcHJpbnQoY2h1bmsuY29udGVudCwgZW5kPVwifFwiLCBmbHVzaD1UcnVlKUFQSSBSZWZlcmVuY2U6Q2hhdEFudGhyb3BpY0ZvciBtb2RlbHMgKG9yIG90aGVyIGNvbXBvbmVudHMpIHRoYXQgZG9uJ3Qgc3VwcG9ydCBzdHJlYW1pbmcgbmF0aXZlbHksIHRoaXMgaXRlcmF0b3Igd291bGQganVzdCB5aWVsZCBhIHNpbmdsZSBjaHVuaywgYnV0XG55b3UgY291bGQgc3RpbGwgdXNlIHRoZSBzYW1lIGdlbmVyYWwgcGF0dGVybiB3aGVuIGNhbGxpbmcgdGhlbS4gVXNpbmcgLnN0cmVhbSgpIHdpbGwgYWxzbyBhdXRvbWF0aWNhbGx5IGNhbGwgdGhlIG1vZGVsIGluIHN0cmVhbWluZyBtb2RlXG53aXRob3V0IHRoZSBuZWVkIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBjb25maWcuVGhlIHR5cGUgb2YgZWFjaCBvdXRwdXR0ZWQgY2h1bmsgZGVwZW5kcyBvbiB0aGUgdHlwZSBvZiBjb21wb25lbnQgLSBmb3IgZXhhbXBsZSwgY2hhdCBtb2RlbHMgeWllbGQgQUlNZXNzYWdlQ2h1bmtzLlxuQmVjYXVzZSB0aGlzIG1ldGhvZCBpcyBwYXJ0IG9mIExhbmdDaGFpbiBFeHByZXNzaW9uIExhbmd1YWdlLFxueW91IGNhbiBoYW5kbGUgZm9ybWF0dGluZyBkaWZmZXJlbmNlcyBmcm9tIGRpZmZlcmVudCBvdXRwdXRzIHVzaW5nIGFuIG91dHB1dCBwYXJzZXIgdG8gdHJhbnNmb3JtXG5lYWNoIHlpZWxkZWQgY2h1bmsuWW91IGNhbiBjaGVjayBvdXQgdGhpcyBndWlkZSBmb3IgbW9yZSBkZXRhaWwgb24gaG93IHRvIHVzZSAuc3RyZWFtKCkuLmFzdHJlYW1fZXZlbnRzKClcdTIwMGJXaGlsZSB0aGUgLnN0cmVhbSgpIG1ldGhvZCBpcyBpbnR1aXRpdmUsIGl0IGNhbiBvbmx5IHJldHVybiB0aGUgZmluYWwgZ2VuZXJhdGVkIHZhbHVlIG9mIHlvdXIgY2hhaW4uIFRoaXMgaXMgZmluZSBmb3Igc2luZ2xlIExMTSBjYWxscyxcbmJ1dCBhcyB5b3UgYnVpbGQgbW9yZSBjb21wbGV4IGNoYWlucyBvZiBzZXZlcmFsIExMTSBjYWxscyB0b2dldGhlciwgeW91IG1heSB3YW50IHRvIHVzZSB0aGUgaW50ZXJtZWRpYXRlIHZhbHVlcyBvZlxudGhlIGNoYWluIGFsb25nc2lkZSB0aGUgZmluYWwgb3V0cHV0IC0gZm9yIGV4YW1wbGUsIHJldHVybmluZyBzb3VyY2VzIGFsb25nc2lkZSB0aGUgZmluYWwgZ2VuZXJhdGlvbiB3aGVuIGJ1aWxkaW5nIGEgY2hhdFxub3ZlciBkb2N1bWVudHMgYXBwLlRoZXJlIGFyZSB3YXlzIHRvIGRvIHRoaXMgdXNpbmcgY2FsbGJhY2tzLCBvciBieSBjb25zdHJ1Y3RpbmcgeW91ciBjaGFpbiBpbiBzdWNoIGEgd2F5IHRoYXQgaXQgcGFzc2VzIGludGVybWVkaWF0ZVxudmFsdWVzIHRvIHRoZSBlbmQgd2l0aCBzb21ldGhpbmcgbGlrZSBjaGFpbmVkIC5hc3NpZ24oKSBjYWxscywgYnV0IExhbmdDaGFpbiBhbHNvIGluY2x1ZGVzIGFuXG4uYXN0cmVhbV9ldmVudHMoKSBtZXRob2QgdGhhdCBjb21iaW5lcyB0aGUgZmxleGliaWxpdHkgb2YgY2FsbGJhY2tzIHdpdGggdGhlIGVyZ29ub21pY3Mgb2YgLnN0cmVhbSgpLiBXaGVuIGNhbGxlZCwgaXQgcmV0dXJucyBhbiBpdGVyYXRvclxud2hpY2ggeWllbGRzIHZhcmlvdXMgdHlwZXMgb2YgZXZlbnRzIHRoYXQgeW91IGNhbiBmaWx0ZXIgYW5kIHByb2Nlc3MgYWNjb3JkaW5nXG50byB0aGUgbmVlZHMgb2YgeW91ciBwcm9qZWN0LkhlcmUncyBvbmUgc21hbGwgZXhhbXBsZSB0aGF0IHByaW50cyBqdXN0IGV2ZW50cyBjb250YWluaW5nIHN0cmVhbWVkIGNoYXQgbW9kZWwgb3V0cHV0OmZyb20gbGFuZ2NoYWluX2NvcmUub3V0cHV0X3BhcnNlcnMgaW1wb3J0IFN0ck91dHB1dFBhcnNlcmZyb20gbGFuZ2NoYWluX2NvcmUucHJvbXB0cyBpbXBvcnQgQ2hhdFByb21wdFRlbXBsYXRlZnJvbSBsYW5nY2hhaW5fYW50aHJvcGljIGltcG9ydCBDaGF0QW50aHJvcGljbW9kZWwgPSBDaGF0QW50aHJvcGljKG1vZGVsPVwiY2xhdWRlLTMtc29ubmV0LTIwMjQwMjI5XCIpcHJvbXB0ID0gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21fdGVtcGxhdGUoXCJ0ZWxsIG1lIGEgam9rZSBhYm91dCB7dG9waWN9XCIpcGFyc2VyID0gU3RyT3V0cHV0UGFyc2VyKCljaGFpbiA9IHByb21wdCB8IG1vZGVsIHwgcGFyc2VyYXN5bmMgZm9yIGV2ZW50IGluIGNoYWluLmFzdHJlYW1fZXZlbnRzKHtcInRvcGljXCI6IFwicGFycm90XCJ9LCB2ZXJzaW9uPVwidjJcIik6ICAgIGtpbmQgPSBldmVudFtcImV2ZW50XCJdICAgIGlmIGtpbmQgPT0gXCJvbl9jaGF0X21vZGVsX3N0cmVhbVwiOiAgICAgICAgcHJpbnQoZXZlbnQsIGVuZD1cInxcIiwgZmx1c2g9VHJ1ZSlBUEkgUmVmZXJlbmNlOlN0ck91dHB1dFBhcnNlciB8IENoYXRQcm9tcHRUZW1wbGF0ZSB8IENoYXRBbnRocm9waWNZb3UgY2FuIHJvdWdobHkgdGhpbmsgb2YgaXQgYXMgYW4gaXRlcmF0b3Igb3ZlciBjYWxsYmFjayBldmVudHMgKHRob3VnaCB0aGUgZm9ybWF0IGRpZmZlcnMpIC0gYW5kIHlvdSBjYW4gdXNlIGl0IG9uIGFsbW9zdCBhbGwgTGFuZ0NoYWluIGNvbXBvbmVudHMhU2VlIHRoaXMgZ3VpZGUgZm9yIG1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gaG93IHRvIHVzZSAuYXN0cmVhbV9ldmVudHMoKSxcbmluY2x1ZGluZyBhIHRhYmxlIGxpc3RpbmcgYXZhaWxhYmxlIGV2ZW50cy5DYWxsYmFja3NcdTIwMGJUaGUgbG93ZXN0IGxldmVsIHdheSB0byBzdHJlYW0gb3V0cHV0cyBmcm9tIExMTXMgaW4gTGFuZ0NoYWluIGlzIHZpYSB0aGUgY2FsbGJhY2tzIHN5c3RlbS4gWW91IGNhbiBwYXNzIGFcbmNhbGxiYWNrIGhhbmRsZXIgdGhhdCBoYW5kbGVzIHRoZSBvbl9sbG1fbmV3X3Rva2VuIGV2ZW50IGludG8gTGFuZ0NoYWluIGNvbXBvbmVudHMuIFdoZW4gdGhhdCBjb21wb25lbnQgaXMgaW52b2tlZCwgYW55XG5MTE0gb3IgY2hhdCBtb2RlbCBjb250YWluZWQgaW4gdGhlIGNvbXBvbmVudCBjYWxsc1xudGhlIGNhbGxiYWNrIHdpdGggdGhlIGdlbmVyYXRlZCB0b2tlbi4gV2l0aGluIHRoZSBjYWxsYmFjaywgeW91IGNvdWxkIHBpcGUgdGhlIHRva2VucyBpbnRvIHNvbWUgb3RoZXIgZGVzdGluYXRpb24sIGUuZy4gYSBIVFRQIHJlc3BvbnNlLlxuWW91IGNhbiBhbHNvIGhhbmRsZSB0aGUgb25fbGxtX2VuZCBldmVudCB0byBwZXJmb3JtIGFueSBuZWNlc3NhcnkgY2xlYW51cC5Zb3UgY2FuIHNlZSB0aGlzIGhvdy10byBzZWN0aW9uIGZvciBtb3JlIHNwZWNpZmljcyBvbiB1c2luZyBjYWxsYmFja3MuQ2FsbGJhY2tzIHdlcmUgdGhlIGZpcnN0IHRlY2huaXF1ZSBmb3Igc3RyZWFtaW5nIGludHJvZHVjZWQgaW4gTGFuZ0NoYWluLiBXaGlsZSBwb3dlcmZ1bCBhbmQgZ2VuZXJhbGl6YWJsZSxcbnRoZXkgY2FuIGJlIHVud2llbGR5IGZvciBkZXZlbG9wZXJzLiBGb3IgZXhhbXBsZTpZb3UgbmVlZCB0byBleHBsaWNpdGx5IGluaXRpYWxpemUgYW5kIG1hbmFnZSBzb21lIGFnZ3JlZ2F0b3Igb3Igb3RoZXIgc3RyZWFtIHRvIGNvbGxlY3QgcmVzdWx0cy5UaGUgZXhlY3V0aW9uIG9yZGVyIGlzbid0IGV4cGxpY2l0bHkgZ3VhcmFudGVlZCwgYW5kIHlvdSBjb3VsZCB0aGVvcmV0aWNhbGx5IGhhdmUgYSBjYWxsYmFjayBydW4gYWZ0ZXIgdGhlIC5pbnZva2UoKSBtZXRob2QgZmluaXNoZXMuUHJvdmlkZXJzIHdvdWxkIG9mdGVuIG1ha2UgeW91IHBhc3MgYW4gYWRkaXRpb25hbCBwYXJhbWV0ZXIgdG8gc3RyZWFtIG91dHB1dHMgaW5zdGVhZCBvZiByZXR1cm5pbmcgdGhlbSBhbGwgYXQgb25jZS5Zb3Ugd291bGQgb2Z0ZW4gaWdub3JlIHRoZSByZXN1bHQgb2YgdGhlIGFjdHVhbCBtb2RlbCBjYWxsIGluIGZhdm9yIG9mIGNhbGxiYWNrIHJlc3VsdHMuVG9rZW5zXHUyMDBiVGhlIHVuaXQgdGhhdCBtb3N0IG1vZGVsIHByb3ZpZGVycyB1c2UgdG8gbWVhc3VyZSBpbnB1dCBhbmQgb3V0cHV0IGlzIHZpYSBhIHVuaXQgY2FsbGVkIGEgdG9rZW4uXG5Ub2tlbnMgYXJlIHRoZSBiYXNpYyB1bml0cyB0aGF0IGxhbmd1YWdlIG1vZGVscyByZWFkIGFuZCBnZW5lcmF0ZSB3aGVuIHByb2Nlc3Npbmcgb3IgcHJvZHVjaW5nIHRleHQuXG5UaGUgZXhhY3QgZGVmaW5pdGlvbiBvZiBhIHRva2VuIGNhbiB2YXJ5IGRlcGVuZGluZyBvbiB0aGUgc3BlY2lmaWMgd2F5IHRoZSBtb2RlbCB3YXMgdHJhaW5lZCAtXG5mb3IgaW5zdGFuY2UsIGluIEVuZ2xpc2gsIGEgdG9rZW4gY291bGQgYmUgYSBzaW5nbGUgd29yZCBsaWtlIFwiYXBwbGVcIiwgb3IgYSBwYXJ0IG9mIGEgd29yZCBsaWtlIFwiYXBwXCIuV2hlbiB5b3Ugc2VuZCBhIG1vZGVsIGEgcHJvbXB0LCB0aGUgd29yZHMgYW5kIGNoYXJhY3RlcnMgaW4gdGhlIHByb21wdCBhcmUgZW5jb2RlZCBpbnRvIHRva2VucyB1c2luZyBhIHRva2VuaXplci5cblRoZSBtb2RlbCB0aGVuIHN0cmVhbXMgYmFjayBnZW5lcmF0ZWQgb3V0cHV0IHRva2Vucywgd2hpY2ggdGhlIHRva2VuaXplciBkZWNvZGVzIGludG8gaHVtYW4tcmVhZGFibGUgdGV4dC5cblRoZSBiZWxvdyBleGFtcGxlIHNob3dzIGhvdyBPcGVuQUkgbW9kZWxzIHRva2VuaXplIExhbmdDaGFpbiBpcyBjb29sITpZb3UgY2FuIHNlZSB0aGF0IGl0IGdldHMgc3BsaXQgaW50byA1IGRpZmZlcmVudCB0b2tlbnMsIGFuZCB0aGF0IHRoZSBib3VuZGFyaWVzIGJldHdlZW4gdG9rZW5zIGFyZSBub3QgZXhhY3RseSB0aGUgc2FtZSBhcyB3b3JkIGJvdW5kYXJpZXMuVGhlIHJlYXNvbiBsYW5ndWFnZSBtb2RlbHMgdXNlIHRva2VucyByYXRoZXIgdGhhbiBzb21ldGhpbmcgbW9yZSBpbW1lZGlhdGVseSBpbnR1aXRpdmUgbGlrZSBcImNoYXJhY3RlcnNcIlxuaGFzIHRvIGRvIHdpdGggaG93IHRoZXkgcHJvY2VzcyBhbmQgdW5kZXJzdGFuZCB0ZXh0LiBBdCBhIGhpZ2gtbGV2ZWwsIGxhbmd1YWdlIG1vZGVscyBpdGVyYXRpdmVseSBwcmVkaWN0IHRoZWlyIG5leHQgZ2VuZXJhdGVkIG91dHB1dCBiYXNlZCBvblxudGhlIGluaXRpYWwgaW5wdXQgYW5kIHRoZWlyIHByZXZpb3VzIGdlbmVyYXRpb25zLiBUcmFpbmluZyB0aGUgbW9kZWwgdXNpbmcgdG9rZW5zIGxhbmd1YWdlIG1vZGVscyB0byBoYW5kbGUgbGluZ3Vpc3RpY1xudW5pdHMgKGxpa2Ugd29yZHMgb3Igc3Vid29yZHMpIHRoYXQgY2FycnkgbWVhbmluZywgcmF0aGVyIHRoYW4gaW5kaXZpZHVhbCBjaGFyYWN0ZXJzLCB3aGljaCBtYWtlcyBpdCBlYXNpZXIgZm9yIHRoZSBtb2RlbFxudG8gbGVhcm4gYW5kIHVuZGVyc3RhbmQgdGhlIHN0cnVjdHVyZSBvZiB0aGUgbGFuZ3VhZ2UsIGluY2x1ZGluZyBncmFtbWFyIGFuZCBjb250ZXh0LlxuRnVydGhlcm1vcmUsIHVzaW5nIHRva2VucyBjYW4gYWxzbyBpbXByb3ZlIGVmZmljaWVuY3ksIHNpbmNlIHRoZSBtb2RlbCBwcm9jZXNzZXMgZmV3ZXIgdW5pdHMgb2YgdGV4dCBjb21wYXJlZCB0byBjaGFyYWN0ZXItbGV2ZWwgcHJvY2Vzc2luZy5GdW5jdGlvbi90b29sIGNhbGxpbmdcdTIwMGJpbmZvV2UgdXNlIHRoZSB0ZXJtIHRvb2wgY2FsbGluZyBpbnRlcmNoYW5nZWFibHkgd2l0aCBmdW5jdGlvbiBjYWxsaW5nLiBBbHRob3VnaFxuZnVuY3Rpb24gY2FsbGluZyBpcyBzb21ldGltZXMgbWVhbnQgdG8gcmVmZXIgdG8gaW52b2NhdGlvbnMgb2YgYSBzaW5nbGUgZnVuY3Rpb24sXG53ZSB0cmVhdCBhbGwgbW9kZWxzIGFzIHRob3VnaCB0aGV5IGNhbiByZXR1cm4gbXVsdGlwbGUgdG9vbCBvciBmdW5jdGlvbiBjYWxscyBpblxuZWFjaCBtZXNzYWdlLlRvb2wgY2FsbGluZyBhbGxvd3MgYSBjaGF0IG1vZGVsIHRvIHJlc3BvbmQgdG8gYSBnaXZlbiBwcm9tcHQgYnkgZ2VuZXJhdGluZyBvdXRwdXQgdGhhdFxubWF0Y2hlcyBhIHVzZXItZGVmaW5lZCBzY2hlbWEuV2hpbGUgdGhlIG5hbWUgaW1wbGllcyB0aGF0IHRoZSBtb2RlbCBpcyBwZXJmb3JtaW5nXG5zb21lIGFjdGlvbiwgdGhpcyBpcyBhY3R1YWxseSBub3QgdGhlIGNhc2UhIFRoZSBtb2RlbCBvbmx5IGdlbmVyYXRlcyB0aGUgYXJndW1lbnRzIHRvIGEgdG9vbCwgYW5kIGFjdHVhbGx5IHJ1bm5pbmcgdGhlIHRvb2wgKG9yIG5vdCkgaXMgdXAgdG8gdGhlIHVzZXIuXG5PbmUgY29tbW9uIGV4YW1wbGUgd2hlcmUgeW91IHdvdWxkbid0IHdhbnQgdG8gY2FsbCBhIGZ1bmN0aW9uIHdpdGggdGhlIGdlbmVyYXRlZCBhcmd1bWVudHNcbmlzIGlmIHlvdSB3YW50IHRvIGV4dHJhY3Qgc3RydWN0dXJlZCBvdXRwdXQgbWF0Y2hpbmcgc29tZSBzY2hlbWFcbmZyb20gdW5zdHJ1Y3R1cmVkIHRleHQuIFlvdSB3b3VsZCBnaXZlIHRoZSBtb2RlbCBhbiBcImV4dHJhY3Rpb25cIiB0b29sIHRoYXQgdGFrZXNcbnBhcmFtZXRlcnMgbWF0Y2hpbmcgdGhlIGRlc2lyZWQgc2NoZW1hLCB0aGVuIHRyZWF0IHRoZSBnZW5lcmF0ZWQgb3V0cHV0IGFzIHlvdXIgZmluYWxcbnJlc3VsdC5Ub29sIGNhbGxpbmcgaXMgbm90IHVuaXZlcnNhbCwgYnV0IGlzIHN1cHBvcnRlZCBieSBtYW55IHBvcHVsYXIgTExNIHByb3ZpZGVycywgaW5jbHVkaW5nIEFudGhyb3BpYyxcbkNvaGVyZSwgR29vZ2xlLFxuTWlzdHJhbCwgT3BlbkFJLCBhbmQgZXZlbiBmb3IgbG9jYWxseS1ydW5uaW5nIG1vZGVscyB2aWEgT2xsYW1hLkxhbmdDaGFpbiBwcm92aWRlcyBhIHN0YW5kYXJkaXplZCBpbnRlcmZhY2UgZm9yIHRvb2wgY2FsbGluZyB0aGF0IGlzIGNvbnNpc3RlbnQgYWNyb3NzIGRpZmZlcmVudCBtb2RlbHMuVGhlIHN0YW5kYXJkIGludGVyZmFjZSBjb25zaXN0cyBvZjpDaGF0TW9kZWwuYmluZF90b29scygpOiBhIG1ldGhvZCBmb3Igc3BlY2lmeWluZyB3aGljaCB0b29scyBhcmUgYXZhaWxhYmxlIGZvciBhIG1vZGVsIHRvIGNhbGwuIFRoaXMgbWV0aG9kIGFjY2VwdHMgTGFuZ0NoYWluIHRvb2xzIGFzIHdlbGwgYXMgUHlkYW50aWMgb2JqZWN0cy5BSU1lc3NhZ2UudG9vbF9jYWxsczogYW4gYXR0cmlidXRlIG9uIHRoZSBBSU1lc3NhZ2UgcmV0dXJuZWQgZnJvbSB0aGUgbW9kZWwgZm9yIGFjY2Vzc2luZyB0aGUgdG9vbCBjYWxscyByZXF1ZXN0ZWQgYnkgdGhlIG1vZGVsLlRvb2wgdXNhZ2VcdTIwMGJBZnRlciB0aGUgbW9kZWwgY2FsbHMgdG9vbHMsIHlvdSBjYW4gdXNlIHRoZSB0b29sIGJ5IGludm9raW5nIGl0LCB0aGVuIHBhc3NpbmcgdGhlIGFyZ3VtZW50cyBiYWNrIHRvIHRoZSBtb2RlbC5cbkxhbmdDaGFpbiBwcm92aWRlcyB0aGUgVG9vbCBhYnN0cmFjdGlvbiB0byBoZWxwIHlvdSBoYW5kbGUgdGhpcy5UaGUgZ2VuZXJhbCBmbG93IGlzIHRoaXM6R2VuZXJhdGUgdG9vbCBjYWxscyB3aXRoIGEgY2hhdCBtb2RlbCBpbiByZXNwb25zZSB0byBhIHF1ZXJ5Lkludm9rZSB0aGUgYXBwcm9wcmlhdGUgdG9vbHMgdXNpbmcgdGhlIGdlbmVyYXRlZCB0b29sIGNhbGwgYXMgYXJndW1lbnRzLkZvcm1hdCB0aGUgcmVzdWx0IG9mIHRoZSB0b29sIGludm9jYXRpb25zIGFzIFRvb2xNZXNzYWdlcy5QYXNzIHRoZSBlbnRpcmUgbGlzdCBvZiBtZXNzYWdlcyBiYWNrIHRvIHRoZSBtb2RlbCBzbyB0aGF0IGl0IGNhbiBnZW5lcmF0ZSBhIGZpbmFsIGFuc3dlciAob3IgY2FsbCBtb3JlIHRvb2xzKS5UaGlzIGlzIGhvdyB0b29sIGNhbGxpbmcgYWdlbnRzIHBlcmZvcm0gdGFza3MgYW5kIGFuc3dlciBxdWVyaWVzLkNoZWNrIG91dCBzb21lIG1vcmUgZm9jdXNlZCBndWlkZXMgYmVsb3c6SG93IHRvIHVzZSBjaGF0IG1vZGVscyB0byBjYWxsIHRvb2xzSG93IHRvIHBhc3MgdG9vbCBvdXRwdXRzIHRvIGNoYXQgbW9kZWxzQnVpbGRpbmcgYW4gYWdlbnQgd2l0aCBMYW5nR3JhcGhTdHJ1Y3R1cmVkIG91dHB1dFx1MjAwYkxMTXMgYXJlIGNhcGFibGUgb2YgZ2VuZXJhdGluZyBhcmJpdHJhcnkgdGV4dC4gVGhpcyBlbmFibGVzIHRoZSBtb2RlbCB0byByZXNwb25kIGFwcHJvcHJpYXRlbHkgdG8gYSB3aWRlXG5yYW5nZSBvZiBpbnB1dHMsIGJ1dCBmb3Igc29tZSB1c2UtY2FzZXMsIGl0IGNhbiBiZSB1c2VmdWwgdG8gY29uc3RyYWluIHRoZSBMTE0ncyBvdXRwdXRcbnRvIGEgc3BlY2lmaWMgZm9ybWF0IG9yIHN0cnVjdHVyZS4gVGhpcyBpcyByZWZlcnJlZCB0byBhcyBzdHJ1Y3R1cmVkIG91dHB1dC5Gb3IgZXhhbXBsZSwgaWYgdGhlIG91dHB1dCBpcyB0byBiZSBzdG9yZWQgaW4gYSByZWxhdGlvbmFsIGRhdGFiYXNlLFxuaXQgaXMgbXVjaCBlYXNpZXIgaWYgdGhlIG1vZGVsIGdlbmVyYXRlcyBvdXRwdXQgdGhhdCBhZGhlcmVzIHRvIGEgZGVmaW5lZCBzY2hlbWEgb3IgZm9ybWF0LlxuRXh0cmFjdGluZyBzcGVjaWZpYyBpbmZvcm1hdGlvbiBmcm9tIHVuc3RydWN0dXJlZCB0ZXh0IGlzIGFub3RoZXJcbmNhc2Ugd2hlcmUgdGhpcyBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsLiBNb3N0IGNvbW1vbmx5LCB0aGUgb3V0cHV0IGZvcm1hdCB3aWxsIGJlIEpTT04sXG50aG91Z2ggb3RoZXIgZm9ybWF0cyBzdWNoIGFzIFlBTUwgY2FuIGJlIHVzZWZ1bCB0b28uIEJlbG93LCB3ZSdsbCBkaXNjdXNzXG5hIGZldyB3YXlzIHRvIGdldCBzdHJ1Y3R1cmVkIG91dHB1dCBmcm9tIG1vZGVscyBpbiBMYW5nQ2hhaW4uLndpdGhfc3RydWN0dXJlZF9vdXRwdXQoKVx1MjAwYkZvciBjb252ZW5pZW5jZSwgc29tZSBMYW5nQ2hhaW4gY2hhdCBtb2RlbHMgc3VwcG9ydCBhIC53aXRoX3N0cnVjdHVyZWRfb3V0cHV0KClcbm1ldGhvZC4gVGhpcyBtZXRob2Qgb25seSByZXF1aXJlcyBhIHNjaGVtYSBhcyBpbnB1dCwgYW5kIHJldHVybnMgYSBkaWN0IG9yIFB5ZGFudGljIG9iamVjdC5cbkdlbmVyYWxseSwgdGhpcyBtZXRob2QgaXMgb25seSBwcmVzZW50IG9uIG1vZGVscyB0aGF0IHN1cHBvcnQgb25lIG9mIHRoZSBtb3JlIGFkdmFuY2VkIG1ldGhvZHMgZGVzY3JpYmVkIGJlbG93LFxuYW5kIHdpbGwgdXNlIG9uZSBvZiB0aGVtIHVuZGVyIHRoZSBob29kLiBJdCB0YWtlcyBjYXJlIG9mIGltcG9ydGluZyBhIHN1aXRhYmxlIG91dHB1dCBwYXJzZXIgYW5kXG5mb3JtYXR0aW5nIHRoZSBzY2hlbWEgaW4gdGhlIHJpZ2h0IGZvcm1hdCBmb3IgdGhlIG1vZGVsLkhlcmUncyBhbiBleGFtcGxlOmZyb20gdHlwaW5nIGltcG9ydCBPcHRpb25hbGZyb20gcHlkYW50aWMgaW1wb3J0IEJhc2VNb2RlbCwgRmllbGRjbGFzcyBKb2tlKEJhc2VNb2RlbCk6ICAgIFwiXCJcIkpva2UgdG8gdGVsbCB1c2VyLlwiXCJcIiAgICBzZXR1cDogc3RyID0gRmllbGQoZGVzY3JpcHRpb249XCJUaGUgc2V0dXAgb2YgdGhlIGpva2VcIikgICAgcHVuY2hsaW5lOiBzdHIgPSBGaWVsZChkZXNjcmlwdGlvbj1cIlRoZSBwdW5jaGxpbmUgdG8gdGhlIGpva2VcIikgICAgcmF0aW5nOiBPcHRpb25hbFtpbnRdID0gRmllbGQoZGVzY3JpcHRpb249XCJIb3cgZnVubnkgdGhlIGpva2UgaXMsIGZyb20gMSB0byAxMFwiKXN0cnVjdHVyZWRfbGxtID0gbGxtLndpdGhfc3RydWN0dXJlZF9vdXRwdXQoSm9rZSlzdHJ1Y3R1cmVkX2xsbS5pbnZva2UoXCJUZWxsIG1lIGEgam9rZSBhYm91dCBjYXRzXCIpSm9rZShzZXR1cD0nV2h5IHdhcyB0aGUgY2F0IHNpdHRpbmcgb24gdGhlIGNvbXB1dGVyPycsIHB1bmNobGluZT0nVG8ga2VlcCBhbiBleWUgb24gdGhlIG1vdXNlIScsIHJhdGluZz1Ob25lKVdlIHJlY29tbWVuZCB0aGlzIG1ldGhvZCBhcyBhIHN0YXJ0aW5nIHBvaW50IHdoZW4gd29ya2luZyB3aXRoIHN0cnVjdHVyZWQgb3V0cHV0Okl0IHVzZXMgb3RoZXIgbW9kZWwtc3BlY2lmaWMgZmVhdHVyZXMgdW5kZXIgdGhlIGhvb2QsIHdpdGhvdXQgdGhlIG5lZWQgdG8gaW1wb3J0IGFuIG91dHB1dCBwYXJzZXIuRm9yIHRoZSBtb2RlbHMgdGhhdCB1c2UgdG9vbCBjYWxsaW5nLCBubyBzcGVjaWFsIHByb21wdGluZyBpcyBuZWVkZWQuSWYgbXVsdGlwbGUgdW5kZXJseWluZyB0ZWNobmlxdWVzIGFyZSBzdXBwb3J0ZWQsIHlvdSBjYW4gc3VwcGx5IGEgbWV0aG9kIHBhcmFtZXRlciB0b1xudG9nZ2xlIHdoaWNoIG9uZSBpcyB1c2VkLllvdSBtYXkgd2FudCBvciBuZWVkIHRvIHVzZSBvdGhlciB0ZWNobmlxdWVzIGlmOlRoZSBjaGF0IG1vZGVsIHlvdSBhcmUgdXNpbmcgZG9lcyBub3Qgc3VwcG9ydCB0b29sIGNhbGxpbmcuWW91IGFyZSB3b3JraW5nIHdpdGggdmVyeSBjb21wbGV4IHNjaGVtYXMgYW5kIHRoZSBtb2RlbCBpcyBoYXZpbmcgdHJvdWJsZSBnZW5lcmF0aW5nIG91dHB1dHMgdGhhdCBjb25mb3JtLkZvciBtb3JlIGluZm9ybWF0aW9uLCBjaGVjayBvdXQgdGhpcyBob3ctdG8gZ3VpZGUuWW91IGNhbiBhbHNvIGNoZWNrIG91dCB0aGlzIHRhYmxlIGZvciBhIGxpc3Qgb2YgbW9kZWxzIHRoYXQgc3VwcG9ydFxud2l0aF9zdHJ1Y3R1cmVkX291dHB1dCgpLlJhdyBwcm9tcHRpbmdcdTIwMGJUaGUgbW9zdCBpbnR1aXRpdmUgd2F5IHRvIGdldCBhIG1vZGVsIHRvIHN0cnVjdHVyZSBvdXRwdXQgaXMgdG8gYXNrIG5pY2VseS5cbkluIGFkZGl0aW9uIHRvIHlvdXIgcXVlcnksIHlvdSBjYW4gZ2l2ZSBpbnN0cnVjdGlvbnMgZGVzY3JpYmluZyB3aGF0IGtpbmQgb2Ygb3V0cHV0IHlvdSdkIGxpa2UsIHRoZW5cbnBhcnNlIHRoZSBvdXRwdXQgdXNpbmcgYW4gb3V0cHV0IHBhcnNlciB0byBjb252ZXJ0IHRoZSByYXdcbm1vZGVsIG1lc3NhZ2Ugb3Igc3RyaW5nIG91dHB1dCBpbnRvIHNvbWV0aGluZyBtb3JlIGVhc2lseSBtYW5pcHVsYXRlZC5UaGUgYmlnZ2VzdCBiZW5lZml0IHRvIHJhdyBwcm9tcHRpbmcgaXMgaXRzIGZsZXhpYmlsaXR5OlJhdyBwcm9tcHRpbmcgZG9lcyBub3QgcmVxdWlyZSBhbnkgc3BlY2lhbCBtb2RlbCBmZWF0dXJlcywgb25seSBzdWZmaWNpZW50IHJlYXNvbmluZyBjYXBhYmlsaXR5IHRvIHVuZGVyc3RhbmRcbnRoZSBwYXNzZWQgc2NoZW1hLllvdSBjYW4gcHJvbXB0IGZvciBhbnkgZm9ybWF0IHlvdSdkIGxpa2UsIG5vdCBqdXN0IEpTT04uIFRoaXMgY2FuIGJlIHVzZWZ1bCBpZiB0aGUgbW9kZWwgeW91XG5hcmUgdXNpbmcgaXMgbW9yZSBoZWF2aWx5IHRyYWluZWQgb24gYSBjZXJ0YWluIHR5cGUgb2YgZGF0YSwgc3VjaCBhcyBYTUwgb3IgWUFNTC5Ib3dldmVyLCB0aGVyZSBhcmUgc29tZSBkcmF3YmFja3MgdG9vOkxMTXMgYXJlIG5vbi1kZXRlcm1pbmlzdGljLCBhbmQgcHJvbXB0aW5nIGEgTExNIHRvIGNvbnNpc3RlbnRseSBvdXRwdXQgZGF0YSBpbiB0aGUgZXhhY3RseSBjb3JyZWN0IGZvcm1hdFxuZm9yIHNtb290aCBwYXJzaW5nIGNhbiBiZSBzdXJwcmlzaW5nbHkgZGlmZmljdWx0IGFuZCBtb2RlbC1zcGVjaWZpYy5JbmRpdmlkdWFsIG1vZGVscyBoYXZlIHF1aXJrcyBkZXBlbmRpbmcgb24gdGhlIGRhdGEgdGhleSB3ZXJlIHRyYWluZWQgb24sIGFuZCBvcHRpbWl6aW5nIHByb21wdHMgY2FuIGJlIHF1aXRlIGRpZmZpY3VsdC5cblNvbWUgbWF5IGJlIGJldHRlciBhdCBpbnRlcnByZXRpbmcgSlNPTiBzY2hlbWEsIG90aGVycyBtYXkgYmUgYmVzdCB3aXRoIFR5cGVTY3JpcHQgZGVmaW5pdGlvbnMsXG5hbmQgc3RpbGwgb3RoZXJzIG1heSBwcmVmZXIgWE1MLldoaWxlIGZlYXR1cmVzIG9mZmVyZWQgYnkgbW9kZWwgcHJvdmlkZXJzIG1heSBpbmNyZWFzZSByZWxpYWJpbGl0eSwgcHJvbXB0aW5nIHRlY2huaXF1ZXMgcmVtYWluIGltcG9ydGFudCBmb3IgdHVuaW5nIHlvdXJcbnJlc3VsdHMgbm8gbWF0dGVyIHdoaWNoIG1ldGhvZCB5b3UgY2hvb3NlLkpTT04gbW9kZVx1MjAwYlNvbWUgbW9kZWxzLCBzdWNoIGFzIE1pc3RyYWwsIE9wZW5BSSxcblRvZ2V0aGVyIEFJIGFuZCBPbGxhbWEsXG5zdXBwb3J0IGEgZmVhdHVyZSBjYWxsZWQgSlNPTiBtb2RlLCB1c3VhbGx5IGVuYWJsZWQgdmlhIGNvbmZpZy5XaGVuIGVuYWJsZWQsIEpTT04gbW9kZSB3aWxsIGNvbnN0cmFpbiB0aGUgbW9kZWwncyBvdXRwdXQgdG8gYWx3YXlzIGJlIHNvbWUgc29ydCBvZiB2YWxpZCBKU09OLlxuT2Z0ZW4gdGhleSByZXF1aXJlIHNvbWUgY3VzdG9tIHByb21wdGluZywgYnV0IGl0J3MgdXN1YWxseSBtdWNoIGxlc3MgYnVyZGVuc29tZSB0aGFuIGNvbXBsZXRlbHkgcmF3IHByb21wdGluZyBhbmRcbm1vcmUgYWxvbmcgdGhlIGxpbmVzIG9mLCBcInlvdSBtdXN0IGFsd2F5cyByZXR1cm4gSlNPTlwiLiBUaGUgb3V0cHV0IGFsc28gZ2VuZXJhbGx5IGVhc2llciB0byBwYXJzZS5JdCdzIGFsc28gZ2VuZXJhbGx5IHNpbXBsZXIgdG8gdXNlIGRpcmVjdGx5IGFuZCBtb3JlIGNvbW1vbmx5IGF2YWlsYWJsZSB0aGFuIHRvb2wgY2FsbGluZywgYW5kIGNhbiBnaXZlXG5tb3JlIGZsZXhpYmlsaXR5IGFyb3VuZCBwcm9tcHRpbmcgYW5kIHNoYXBpbmcgcmVzdWx0cyB0aGFuIHRvb2wgY2FsbGluZy5IZXJlJ3MgYW4gZXhhbXBsZTpmcm9tIGxhbmdjaGFpbl9jb3JlLnByb21wdHMgaW1wb3J0IENoYXRQcm9tcHRUZW1wbGF0ZWZyb20gbGFuZ2NoYWluX29wZW5haSBpbXBvcnQgQ2hhdE9wZW5BSWZyb20gbGFuZ2NoYWluLm91dHB1dF9wYXJzZXJzLmpzb24gaW1wb3J0IFNpbXBsZUpzb25PdXRwdXRQYXJzZXJtb2RlbCA9IENoYXRPcGVuQUkoICAgIG1vZGVsPVwiZ3B0LTRvXCIsICAgIG1vZGVsX2t3YXJncz17IFwicmVzcG9uc2VfZm9ybWF0XCI6IHsgXCJ0eXBlXCI6IFwianNvbl9vYmplY3RcIiB9IH0sKXByb21wdCA9IENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tX3RlbXBsYXRlKCAgICBcIkFuc3dlciB0aGUgdXNlcidzIHF1ZXN0aW9uIHRvIHRoZSBiZXN0IG9mIHlvdXIgYWJpbGl0eS5cIiAgICAnWW91IG11c3QgYWx3YXlzIG91dHB1dCBhIEpTT04gb2JqZWN0IHdpdGggYW4gXCJhbnN3ZXJcIiBrZXkgYW5kIGEgXCJmb2xsb3d1cF9xdWVzdGlvblwiIGtleS4nICAgIFwie3F1ZXN0aW9ufVwiKWNoYWluID0gcHJvbXB0IHwgbW9kZWwgfCBTaW1wbGVKc29uT3V0cHV0UGFyc2VyKCljaGFpbi5pbnZva2UoeyBcInF1ZXN0aW9uXCI6IFwiV2hhdCBpcyB0aGUgcG93ZXJob3VzZSBvZiB0aGUgY2VsbD9cIiB9KUFQSSBSZWZlcmVuY2U6Q2hhdFByb21wdFRlbXBsYXRlIHwgQ2hhdE9wZW5BSSB8IFNpbXBsZUpzb25PdXRwdXRQYXJzZXJ7J2Fuc3dlcic6ICdUaGUgcG93ZXJob3VzZSBvZiB0aGUgY2VsbCBpcyB0aGUgbWl0b2Nob25kcmlvbi4gSXQgaXMgcmVzcG9uc2libGUgZm9yIHByb2R1Y2luZyBlbmVyZ3kgaW4gdGhlIGZvcm0gb2YgQVRQIHRocm91Z2ggY2VsbHVsYXIgcmVzcGlyYXRpb24uJywgJ2ZvbGxvd3VwX3F1ZXN0aW9uJzogJ1dvdWxkIHlvdSBsaWtlIHRvIGtub3cgbW9yZSBhYm91dCBob3cgbWl0b2Nob25kcmlhIHByb2R1Y2UgZW5lcmd5Pyd9Rm9yIGEgZnVsbCBsaXN0IG9mIG1vZGVsIHByb3ZpZGVycyB0aGF0IHN1cHBvcnQgSlNPTiBtb2RlLCBzZWUgdGhpcyB0YWJsZS5Ub29sIGNhbGxpbmdcdTIwMGJGb3IgbW9kZWxzIHRoYXQgc3VwcG9ydCBpdCwgdG9vbCBjYWxsaW5nIGNhbiBiZSB2ZXJ5IGNvbnZlbmllbnQgZm9yIHN0cnVjdHVyZWQgb3V0cHV0LiBJdCByZW1vdmVzIHRoZVxuZ3Vlc3N3b3JrIGFyb3VuZCBob3cgYmVzdCB0byBwcm9tcHQgc2NoZW1hcyBpbiBmYXZvciBvZiBhIGJ1aWx0LWluIG1vZGVsIGZlYXR1cmUuSXQgd29ya3MgYnkgZmlyc3QgYmluZGluZyB0aGUgZGVzaXJlZCBzY2hlbWEgZWl0aGVyIGRpcmVjdGx5IG9yIHZpYSBhIExhbmdDaGFpbiB0b29sIHRvIGFcbmNoYXQgbW9kZWwgdXNpbmcgdGhlIC5iaW5kX3Rvb2xzKCkgbWV0aG9kLiBUaGUgbW9kZWwgd2lsbCB0aGVuIGdlbmVyYXRlIGFuIEFJTWVzc2FnZSBjb250YWluaW5nXG5hIHRvb2xfY2FsbHMgZmllbGQgY29udGFpbmluZyBhcmdzIHRoYXQgbWF0Y2ggdGhlIGRlc2lyZWQgc2hhcGUuVGhlcmUgYXJlIHNldmVyYWwgYWNjZXB0YWJsZSBmb3JtYXRzIHlvdSBjYW4gdXNlIHRvIGJpbmQgdG9vbHMgdG8gYSBtb2RlbCBpbiBMYW5nQ2hhaW4uIEhlcmUncyBvbmUgZXhhbXBsZTpmcm9tIHB5ZGFudGljIGltcG9ydCBCYXNlTW9kZWwsIEZpZWxkZnJvbSBsYW5nY2hhaW5fb3BlbmFpIGltcG9ydCBDaGF0T3BlbkFJY2xhc3MgUmVzcG9uc2VGb3JtYXR0ZXIoQmFzZU1vZGVsKTogICAgXCJcIlwiQWx3YXlzIHVzZSB0aGlzIHRvb2wgdG8gc3RydWN0dXJlIHlvdXIgcmVzcG9uc2UgdG8gdGhlIHVzZXIuXCJcIlwiICAgIGFuc3dlcjogc3RyID0gRmllbGQoZGVzY3JpcHRpb249XCJUaGUgYW5zd2VyIHRvIHRoZSB1c2VyJ3MgcXVlc3Rpb25cIikgICAgZm9sbG93dXBfcXVlc3Rpb246IHN0ciA9IEZpZWxkKGRlc2NyaXB0aW9uPVwiQSBmb2xsb3d1cCBxdWVzdGlvbiB0aGUgdXNlciBjb3VsZCBhc2tcIiltb2RlbCA9IENoYXRPcGVuQUkoICAgIG1vZGVsPVwiZ3B0LTRvXCIsICAgIHRlbXBlcmF0dXJlPTAsKW1vZGVsX3dpdGhfdG9vbHMgPSBtb2RlbC5iaW5kX3Rvb2xzKFtSZXNwb25zZUZvcm1hdHRlcl0pYWlfbXNnID0gbW9kZWxfd2l0aF90b29scy5pbnZva2UoXCJXaGF0IGlzIHRoZSBwb3dlcmhvdXNlIG9mIHRoZSBjZWxsP1wiKWFpX21zZy50b29sX2NhbGxzWzBdW1wiYXJnc1wiXUFQSSBSZWZlcmVuY2U6Q2hhdE9wZW5BSXsnYW5zd2VyJzogXCJUaGUgcG93ZXJob3VzZSBvZiB0aGUgY2VsbCBpcyB0aGUgbWl0b2Nob25kcmlvbi4gSXQgZ2VuZXJhdGVzIG1vc3Qgb2YgdGhlIGNlbGwncyBzdXBwbHkgb2YgYWRlbm9zaW5lIHRyaXBob3NwaGF0ZSAoQVRQKSwgd2hpY2ggaXMgdXNlZCBhcyBhIHNvdXJjZSBvZiBjaGVtaWNhbCBlbmVyZ3kuXCIsICdmb2xsb3d1cF9xdWVzdGlvbic6ICdIb3cgZG8gbWl0b2Nob25kcmlhIGdlbmVyYXRlIEFUUD8nfVRvb2wgY2FsbGluZyBpcyBhIGdlbmVyYWxseSBjb25zaXN0ZW50IHdheSB0byBnZXQgYSBtb2RlbCB0byBnZW5lcmF0ZSBzdHJ1Y3R1cmVkIG91dHB1dCwgYW5kIGlzIHRoZSBkZWZhdWx0IHRlY2huaXF1ZVxudXNlZCBmb3IgdGhlIC53aXRoX3N0cnVjdHVyZWRfb3V0cHV0KCkgbWV0aG9kIHdoZW4gYSBtb2RlbCBzdXBwb3J0cyBpdC5UaGUgZm9sbG93aW5nIGhvdy10byBndWlkZXMgYXJlIGdvb2QgcHJhY3RpY2FsIHJlc291cmNlcyBmb3IgdXNpbmcgZnVuY3Rpb24vdG9vbCBjYWxsaW5nIGZvciBzdHJ1Y3R1cmVkIG91dHB1dDpIb3cgdG8gcmV0dXJuIHN0cnVjdHVyZWQgZGF0YSBmcm9tIGFuIExMTUhvdyB0byB1c2UgYSBtb2RlbCB0byBjYWxsIHRvb2xzRm9yIGEgZnVsbCBsaXN0IG9mIG1vZGVsIHByb3ZpZGVycyB0aGF0IHN1cHBvcnQgdG9vbCBjYWxsaW5nLCBzZWUgdGhpcyB0YWJsZS5GZXctc2hvdCBwcm9tcHRpbmdcdTIwMGJPbmUgb2YgdGhlIG1vc3QgZWZmZWN0aXZlIHdheXMgdG8gaW1wcm92ZSBtb2RlbCBwZXJmb3JtYW5jZSBpcyB0byBnaXZlIGEgbW9kZWwgZXhhbXBsZXMgb2ZcbndoYXQgeW91IHdhbnQgaXQgdG8gZG8uIFRoZSB0ZWNobmlxdWUgb2YgYWRkaW5nIGV4YW1wbGUgaW5wdXRzIGFuZCBleHBlY3RlZCBvdXRwdXRzXG50byBhIG1vZGVsIHByb21wdCBpcyBrbm93biBhcyBcImZldy1zaG90IHByb21wdGluZ1wiLiBUaGUgdGVjaG5pcXVlIGlzIGJhc2VkIG9uIHRoZVxuTGFuZ3VhZ2UgTW9kZWxzIGFyZSBGZXctU2hvdCBMZWFybmVycyBwYXBlci5cblRoZXJlIGFyZSBhIGZldyB0aGluZ3MgdG8gdGhpbmsgYWJvdXQgd2hlbiBkb2luZyBmZXctc2hvdCBwcm9tcHRpbmc6SG93IGFyZSBleGFtcGxlcyBnZW5lcmF0ZWQ/SG93IG1hbnkgZXhhbXBsZXMgYXJlIGluIGVhY2ggcHJvbXB0P0hvdyBhcmUgZXhhbXBsZXMgc2VsZWN0ZWQgYXQgcnVudGltZT9Ib3cgYXJlIGV4YW1wbGVzIGZvcm1hdHRlZCBpbiB0aGUgcHJvbXB0P0hlcmUgYXJlIHRoZSBjb25zaWRlcmF0aW9ucyBmb3IgZWFjaC4xLiBHZW5lcmF0aW5nIGV4YW1wbGVzXHUyMDBiVGhlIGZpcnN0IGFuZCBtb3N0IGltcG9ydGFudCBzdGVwIG9mIGZldy1zaG90IHByb21wdGluZyBpcyBjb21pbmcgdXAgd2l0aCBhIGdvb2QgZGF0YXNldCBvZiBleGFtcGxlcy4gR29vZCBleGFtcGxlcyBzaG91bGQgYmUgcmVsZXZhbnQgYXQgcnVudGltZSwgY2xlYXIsIGluZm9ybWF0aXZlLCBhbmQgcHJvdmlkZSBpbmZvcm1hdGlvbiB0aGF0IHdhcyBub3QgYWxyZWFkeSBrbm93biB0byB0aGUgbW9kZWwuQXQgYSBoaWdoLWxldmVsLCB0aGUgYmFzaWMgd2F5cyB0byBnZW5lcmF0ZSBleGFtcGxlcyBhcmU6TWFudWFsOiBhIHBlcnNvbi9wZW9wbGUgZ2VuZXJhdGVzIGV4YW1wbGVzIHRoZXkgdGhpbmsgYXJlIHVzZWZ1bC5CZXR0ZXIgbW9kZWw6IGEgYmV0dGVyIChwcmVzdW1hYmx5IG1vcmUgZXhwZW5zaXZlL3Nsb3dlcikgbW9kZWwncyByZXNwb25zZXMgYXJlIHVzZWQgYXMgZXhhbXBsZXMgZm9yIGEgd29yc2UgKHByZXN1bWFibHkgY2hlYXBlci9mYXN0ZXIpIG1vZGVsLlVzZXIgZmVlZGJhY2s6IHVzZXJzIChvciBsYWJlbGVycykgbGVhdmUgZmVlZGJhY2sgb24gaW50ZXJhY3Rpb25zIHdpdGggdGhlIGFwcGxpY2F0aW9uIGFuZCBleGFtcGxlcyBhcmUgZ2VuZXJhdGVkIGJhc2VkIG9uIHRoYXQgZmVlZGJhY2sgKGZvciBleGFtcGxlLCBhbGwgaW50ZXJhY3Rpb25zIHdpdGggcG9zaXRpdmUgZmVlZGJhY2sgY291bGQgYmUgdHVybmVkIGludG8gZXhhbXBsZXMpLkxMTSBmZWVkYmFjazogc2FtZSBhcyB1c2VyIGZlZWRiYWNrIGJ1dCB0aGUgcHJvY2VzcyBpcyBhdXRvbWF0ZWQgYnkgaGF2aW5nIG1vZGVscyBldmFsdWF0ZSB0aGVtc2VsdmVzLldoaWNoIGFwcHJvYWNoIGlzIGJlc3QgZGVwZW5kcyBvbiB5b3VyIHRhc2suIEZvciB0YXNrcyB3aGVyZSBhIHNtYWxsIG51bWJlciBjb3JlIHByaW5jaXBsZXMgbmVlZCB0byBiZSB1bmRlcnN0b29kIHJlYWxseSB3ZWxsLCBpdCBjYW4gYmUgdmFsdWFibGUgaGFuZC1jcmFmdCBhIGZldyByZWFsbHkgZ29vZCBleGFtcGxlcy5cbkZvciB0YXNrcyB3aGVyZSB0aGUgc3BhY2Ugb2YgY29ycmVjdCBiZWhhdmlvcnMgaXMgYnJvYWRlciBhbmQgbW9yZSBudWFuY2VkLCBpdCBjYW4gYmUgdXNlZnVsIHRvIGdlbmVyYXRlIG1hbnkgZXhhbXBsZXMgaW4gYSBtb3JlIGF1dG9tYXRlZCBmYXNoaW9uIHNvIHRoYXQgdGhlcmUncyBhIGhpZ2hlciBsaWtlbGlob29kIG9mIHRoZXJlIGJlaW5nIHNvbWUgaGlnaGx5IHJlbGV2YW50IGV4YW1wbGVzIGZvciBhbnkgcnVudGltZSBpbnB1dC5TaW5nbGUtdHVybiB2LnMuIG11bHRpLXR1cm4gZXhhbXBsZXNBbm90aGVyIGRpbWVuc2lvbiB0byB0aGluayBhYm91dCB3aGVuIGdlbmVyYXRpbmcgZXhhbXBsZXMgaXMgd2hhdCB0aGUgZXhhbXBsZSBpcyBhY3R1YWxseSBzaG93aW5nLlRoZSBzaW1wbGVzdCB0eXBlcyBvZiBleGFtcGxlcyBqdXN0IGhhdmUgYSB1c2VyIGlucHV0IGFuZCBhbiBleHBlY3RlZCBtb2RlbCBvdXRwdXQuIFRoZXNlIGFyZSBzaW5nbGUtdHVybiBleGFtcGxlcy5PbmUgbW9yZSBjb21wbGV4IHR5cGUgaWYgZXhhbXBsZSBpcyB3aGVyZSB0aGUgZXhhbXBsZSBpcyBhbiBlbnRpcmUgY29udmVyc2F0aW9uLCB1c3VhbGx5IGluIHdoaWNoIGEgbW9kZWwgaW5pdGlhbGx5IHJlc3BvbmRzIGluY29ycmVjdGx5IGFuZCBhIHVzZXIgdGhlbiB0ZWxscyB0aGUgbW9kZWwgaG93IHRvIGNvcnJlY3QgaXRzIGFuc3dlci5cblRoaXMgaXMgY2FsbGVkIGEgbXVsdGktdHVybiBleGFtcGxlLiBNdWx0aS10dXJuIGV4YW1wbGVzIGNhbiBiZSB1c2VmdWwgZm9yIG1vcmUgbnVhbmNlZCB0YXNrcyB3aGVyZSBpdHMgdXNlZnVsIHRvIHNob3cgY29tbW9uIGVycm9ycyBhbmQgc3BlbGwgb3V0IGV4YWN0bHkgd2h5IHRoZXkncmUgd3JvbmcgYW5kIHdoYXQgc2hvdWxkIGJlIGRvbmUgaW5zdGVhZC4yLiBOdW1iZXIgb2YgZXhhbXBsZXNcdTIwMGJPbmNlIHdlIGhhdmUgYSBkYXRhc2V0IG9mIGV4YW1wbGVzLCB3ZSBuZWVkIHRvIHRoaW5rIGFib3V0IGhvdyBtYW55IGV4YW1wbGVzIHNob3VsZCBiZSBpbiBlYWNoIHByb21wdC5cblRoZSBrZXkgdHJhZGVvZmYgaXMgdGhhdCBtb3JlIGV4YW1wbGVzIGdlbmVyYWxseSBpbXByb3ZlIHBlcmZvcm1hbmNlLCBidXQgbGFyZ2VyIHByb21wdHMgaW5jcmVhc2UgY29zdHMgYW5kIGxhdGVuY3kuXG5BbmQgYmV5b25kIHNvbWUgdGhyZXNob2xkIGhhdmluZyB0b28gbWFueSBleGFtcGxlcyBjYW4gc3RhcnQgdG8gY29uZnVzZSB0aGUgbW9kZWwuXG5GaW5kaW5nIHRoZSByaWdodCBudW1iZXIgb2YgZXhhbXBsZXMgaXMgaGlnaGx5IGRlcGVuZGVudCBvbiB0aGUgbW9kZWwsIHRoZSB0YXNrLCB0aGUgcXVhbGl0eSBvZiB0aGUgZXhhbXBsZXMsIGFuZCB5b3VyIGNvc3QgYW5kIGxhdGVuY3kgY29uc3RyYWludHMuXG5BbmVjZG90YWxseSwgdGhlIGJldHRlciB0aGUgbW9kZWwgaXMgdGhlIGZld2VyIGV4YW1wbGVzIGl0IG5lZWRzIHRvIHBlcmZvcm0gd2VsbCBhbmQgdGhlIG1vcmUgcXVpY2tseSB5b3UgaGl0IHN0ZWVwbHkgZGltaW5pc2hpbmcgcmV0dXJucyBvbiBhZGRpbmcgbW9yZSBleGFtcGxlcy5cbkJ1dCwgdGhlIGJlc3Qvb25seSB3YXkgdG8gcmVsaWFibHkgYW5zd2VyIHRoaXMgcXVlc3Rpb24gaXMgdG8gcnVuIHNvbWUgZXhwZXJpbWVudHMgd2l0aCBkaWZmZXJlbnQgbnVtYmVycyBvZiBleGFtcGxlcy4zLiBTZWxlY3RpbmcgZXhhbXBsZXNcdTIwMGJBc3N1bWluZyB3ZSBhcmUgbm90IGFkZGluZyBvdXIgZW50aXJlIGV4YW1wbGUgZGF0YXNldCBpbnRvIGVhY2ggcHJvbXB0LCB3ZSBuZWVkIHRvIGhhdmUgYSB3YXkgb2Ygc2VsZWN0aW5nIGV4YW1wbGVzIGZyb20gb3VyIGRhdGFzZXQgYmFzZWQgb24gYSBnaXZlbiBpbnB1dC4gV2UgY2FuIGRvIHRoaXM6UmFuZG9tbHlCeSAoc2VtYW50aWMgb3Iga2V5d29yZC1iYXNlZCkgc2ltaWxhcml0eSBvZiB0aGUgaW5wdXRzQmFzZWQgb24gc29tZSBvdGhlciBjb25zdHJhaW50cywgbGlrZSB0b2tlbiBzaXplTGFuZ0NoYWluIGhhcyBhIG51bWJlciBvZiBFeGFtcGxlU2VsZWN0b3JzIHdoaWNoIG1ha2UgaXQgZWFzeSB0byB1c2UgYW55IG9mIHRoZXNlIHRlY2huaXF1ZXMuR2VuZXJhbGx5LCBzZWxlY3RpbmcgYnkgc2VtYW50aWMgc2ltaWxhcml0eSBsZWFkcyB0byB0aGUgYmVzdCBtb2RlbCBwZXJmb3JtYW5jZS4gQnV0IGhvdyBpbXBvcnRhbnQgdGhpcyBpcyBpcyBhZ2FpbiBtb2RlbCBhbmQgdGFzayBzcGVjaWZpYywgYW5kIGlzIHNvbWV0aGluZyB3b3J0aCBleHBlcmltZW50aW5nIHdpdGguNC4gRm9ybWF0dGluZyBleGFtcGxlc1x1MjAwYk1vc3Qgc3RhdGUtb2YtdGhlLWFydCBtb2RlbHMgdGhlc2UgZGF5cyBhcmUgY2hhdCBtb2RlbHMsIHNvIHdlJ2xsIGZvY3VzIG9uIGZvcm1hdHRpbmcgZXhhbXBsZXMgZm9yIHRob3NlLiBPdXIgYmFzaWMgb3B0aW9ucyBhcmUgdG8gaW5zZXJ0IHRoZSBleGFtcGxlczpJbiB0aGUgc3lzdGVtIHByb21wdCBhcyBhIHN0cmluZ0FzIHRoZWlyIG93biBtZXNzYWdlc0lmIHdlIGluc2VydCBvdXIgZXhhbXBsZXMgaW50byB0aGUgc3lzdGVtIHByb21wdCBhcyBhIHN0cmluZywgd2UnbGwgbmVlZCB0byBtYWtlIHN1cmUgaXQncyBjbGVhciB0byB0aGUgbW9kZWwgd2hlcmUgZWFjaCBleGFtcGxlIGJlZ2lucyBhbmQgd2hpY2ggcGFydHMgYXJlIHRoZSBpbnB1dCB2ZXJzdXMgb3V0cHV0LiBEaWZmZXJlbnQgbW9kZWxzIHJlc3BvbmQgYmV0dGVyIHRvIGRpZmZlcmVudCBzeW50YXhlcywgbGlrZSBDaGF0TUwsIFhNTCwgVHlwZVNjcmlwdCwgZXRjLklmIHdlIGluc2VydCBvdXIgZXhhbXBsZXMgYXMgbWVzc2FnZXMsIHdoZXJlIGVhY2ggZXhhbXBsZSBpcyByZXByZXNlbnRlZCBhcyBhIHNlcXVlbmNlIG9mIEh1bWFuLCBBSSBtZXNzYWdlcywgd2UgbWlnaHQgd2FudCB0byBhbHNvIGFzc2lnbiBuYW1lcyB0byBvdXIgbWVzc2FnZXMgbGlrZSBcImV4YW1wbGVfdXNlclwiIGFuZCBcImV4YW1wbGVfYXNzaXN0YW50XCIgdG8gbWFrZSBpdCBjbGVhciB0aGF0IHRoZXNlIG1lc3NhZ2VzIGNvcnJlc3BvbmQgdG8gZGlmZmVyZW50IGFjdG9ycyB0aGFuIHRoZSBsYXRlc3QgaW5wdXQgbWVzc2FnZS5Gb3JtYXR0aW5nIHRvb2wgY2FsbCBleGFtcGxlc09uZSBhcmVhIHdoZXJlIGZvcm1hdHRpbmcgZXhhbXBsZXMgYXMgbWVzc2FnZXMgY2FuIGJlIHRyaWNreSBpcyB3aGVuIG91ciBleGFtcGxlIG91dHB1dHMgaGF2ZSB0b29sIGNhbGxzLiBUaGlzIGlzIGJlY2F1c2UgZGlmZmVyZW50IG1vZGVscyBoYXZlIGRpZmZlcmVudCBjb25zdHJhaW50cyBvbiB3aGF0IHR5cGVzIG9mIG1lc3NhZ2Ugc2VxdWVuY2VzIGFyZSBhbGxvd2VkIHdoZW4gYW55IHRvb2wgY2FsbHMgYXJlIGdlbmVyYXRlZC5Tb21lIG1vZGVscyByZXF1aXJlIHRoYXQgYW55IEFJTWVzc2FnZSB3aXRoIHRvb2wgY2FsbHMgYmUgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgVG9vbE1lc3NhZ2VzIGZvciBldmVyeSB0b29sIGNhbGwsU29tZSBtb2RlbHMgYWRkaXRpb25hbGx5IHJlcXVpcmUgdGhhdCBhbnkgVG9vbE1lc3NhZ2VzIGJlIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IGFuIEFJTWVzc2FnZSBiZWZvcmUgdGhlIG5leHQgSHVtYW5NZXNzYWdlLFNvbWUgbW9kZWxzIHJlcXVpcmUgdGhhdCB0b29scyBhcmUgcGFzc2VkIGluIHRvIHRoZSBtb2RlbCBpZiB0aGVyZSBhcmUgYW55IHRvb2wgY2FsbHMgLyBUb29sTWVzc2FnZXMgaW4gdGhlIGNoYXQgaGlzdG9yeS5UaGVzZSByZXF1aXJlbWVudHMgYXJlIG1vZGVsLXNwZWNpZmljIGFuZCBzaG91bGQgYmUgY2hlY2tlZCBmb3IgdGhlIG1vZGVsIHlvdSBhcmUgdXNpbmcuIElmIHlvdXIgbW9kZWwgcmVxdWlyZXMgVG9vbE1lc3NhZ2VzIGFmdGVyIHRvb2wgY2FsbHMgYW5kL29yIEFJTWVzc2FnZXMgYWZ0ZXIgVG9vbE1lc3NhZ2VzIGFuZCB5b3VyIGV4YW1wbGVzIG9ubHkgaW5jbHVkZSBleHBlY3RlZCB0b29sIGNhbGxzIGFuZCBub3QgdGhlIGFjdHVhbCB0b29sIG91dHB1dHMsIHlvdSBjYW4gdHJ5IGFkZGluZyBkdW1teSBUb29sTWVzc2FnZXMgLyBBSU1lc3NhZ2VzIHRvIHRoZSBlbmQgb2YgZWFjaCBleGFtcGxlIHdpdGggZ2VuZXJpYyBjb250ZW50cyB0byBzYXRpc2Z5IHRoZSBBUEkgY29uc3RyYWludHMuXG5JbiB0aGVzZSBjYXNlcyBpdCdzIGVzcGVjaWFsbHkgd29ydGggZXhwZXJpbWVudGluZyB3aXRoIGluc2VydGluZyB5b3VyIGV4YW1wbGVzIGFzIHN0cmluZ3MgdmVyc3VzIG1lc3NhZ2VzLCBhcyBoYXZpbmcgZHVtbXkgbWVzc2FnZXMgY2FuIGFkdmVyc2VseSBhZmZlY3QgY2VydGFpbiBtb2RlbHMuWW91IGNhbiBzZWUgYSBjYXNlIHN0dWR5IG9mIGhvdyBBbnRocm9waWMgYW5kIE9wZW5BSSByZXNwb25kIHRvIGRpZmZlcmVudCBmZXctc2hvdCBwcm9tcHRpbmcgdGVjaG5pcXVlcyBvbiB0d28gZGlmZmVyZW50IHRvb2wgY2FsbGluZyBiZW5jaG1hcmtzIGhlcmUuUmV0cmlldmFsXHUyMDBiTExNcyBhcmUgdHJhaW5lZCBvbiBhIGxhcmdlIGJ1dCBmaXhlZCBkYXRhc2V0LCBsaW1pdGluZyB0aGVpciBhYmlsaXR5IHRvIHJlYXNvbiBvdmVyIHByaXZhdGUgb3IgcmVjZW50IGluZm9ybWF0aW9uLlxuRmluZS10dW5pbmcgYW4gTExNIHdpdGggc3BlY2lmaWMgZmFjdHMgaXMgb25lIHdheSB0byBtaXRpZ2F0ZSB0aGlzLCBidXQgaXMgb2Z0ZW4gcG9vcmx5IHN1aXRlZCBmb3IgZmFjdHVhbCByZWNhbGwgYW5kIGNhbiBiZSBjb3N0bHkuXG5SZXRyaWV2YWwgaXMgdGhlIHByb2Nlc3Mgb2YgcHJvdmlkaW5nIHJlbGV2YW50IGluZm9ybWF0aW9uIHRvIGFuIExMTSB0byBpbXByb3ZlIGl0cyByZXNwb25zZSBmb3IgYSBnaXZlbiBpbnB1dC5cblJldHJpZXZhbCBhdWdtZW50ZWQgZ2VuZXJhdGlvbiAoUkFHKSBwYXBlciBpcyB0aGUgcHJvY2VzcyBvZiBncm91bmRpbmcgdGhlIExMTSBnZW5lcmF0aW9uIChvdXRwdXQpIHVzaW5nIHRoZSByZXRyaWV2ZWQgaW5mb3JtYXRpb24udGlwU2VlIG91ciBSQUcgZnJvbSBTY3JhdGNoIGNvZGUgYW5kIHZpZGVvIHNlcmllcy5Gb3IgYSBoaWdoLWxldmVsIGd1aWRlIG9uIHJldHJpZXZhbCwgc2VlIHRoaXMgdHV0b3JpYWwgb24gUkFHLlJBRyBpcyBvbmx5IGFzIGdvb2QgYXMgdGhlIHJldHJpZXZlZCBkb2N1bWVudHNcdTIwMTkgcmVsZXZhbmNlIGFuZCBxdWFsaXR5LiBGb3J0dW5hdGVseSwgYW4gZW1lcmdpbmcgc2V0IG9mIHRlY2huaXF1ZXMgY2FuIGJlIGVtcGxveWVkIHRvIGRlc2lnbiBhbmQgaW1wcm92ZSBSQUcgc3lzdGVtcy4gV2UndmUgZm9jdXNlZCBvbiB0YXhvbm9taXppbmcgYW5kIHN1bW1hcml6aW5nIG1hbnkgb2YgdGhlc2UgdGVjaG5pcXVlcyAoc2VlIGJlbG93IGZpZ3VyZSkgYW5kIHdpbGwgc2hhcmUgc29tZSBoaWdoLWxldmVsIHN0cmF0ZWdpYyBndWlkYW5jZSBpbiB0aGUgZm9sbG93aW5nIHNlY3Rpb25zLlxuWW91IGNhbiBhbmQgc2hvdWxkIGV4cGVyaW1lbnQgd2l0aCB1c2luZyBkaWZmZXJlbnQgcGllY2VzIHRvZ2V0aGVyLiBZb3UgbWlnaHQgYWxzbyBmaW5kIHRoaXMgTGFuZ1NtaXRoIGd1aWRlIHVzZWZ1bCBmb3Igc2hvd2luZyBob3cgdG8gZXZhbHVhdGUgZGlmZmVyZW50IGl0ZXJhdGlvbnMgb2YgeW91ciBhcHAuUXVlcnkgVHJhbnNsYXRpb25cdTIwMGJGaXJzdCwgY29uc2lkZXIgdGhlIHVzZXIgaW5wdXQocykgdG8geW91ciBSQUcgc3lzdGVtLiBJZGVhbGx5LCBhIFJBRyBzeXN0ZW0gY2FuIGhhbmRsZSBhIHdpZGUgcmFuZ2Ugb2YgaW5wdXRzLCBmcm9tIHBvb3JseSB3b3JkZWQgcXVlc3Rpb25zIHRvIGNvbXBsZXggbXVsdGktcGFydCBxdWVyaWVzLlxuVXNpbmcgYW4gTExNIHRvIHJldmlldyBhbmQgb3B0aW9uYWxseSBtb2RpZnkgdGhlIGlucHV0IGlzIHRoZSBjZW50cmFsIGlkZWEgYmVoaW5kIHF1ZXJ5IHRyYW5zbGF0aW9uLiBUaGlzIHNlcnZlcyBhcyBhIGdlbmVyYWwgYnVmZmVyLCBvcHRpbWl6aW5nIHJhdyB1c2VyIGlucHV0cyBmb3IgeW91ciByZXRyaWV2YWwgc3lzdGVtLlxuRm9yIGV4YW1wbGUsIHRoaXMgY2FuIGJlIGFzIHNpbXBsZSBhcyBleHRyYWN0aW5nIGtleXdvcmRzIG9yIGFzIGNvbXBsZXggYXMgZ2VuZXJhdGluZyBtdWx0aXBsZSBzdWItcXVlc3Rpb25zIGZvciBhIGNvbXBsZXggcXVlcnkuTmFtZVdoZW4gdG8gdXNlRGVzY3JpcHRpb25NdWx0aS1xdWVyeVdoZW4geW91IG5lZWQgdG8gY292ZXIgbXVsdGlwbGUgcGVyc3BlY3RpdmVzIG9mIGEgcXVlc3Rpb24uUmV3cml0ZSB0aGUgdXNlciBxdWVzdGlvbiBmcm9tIG11bHRpcGxlIHBlcnNwZWN0aXZlcywgcmV0cmlldmUgZG9jdW1lbnRzIGZvciBlYWNoIHJld3JpdHRlbiBxdWVzdGlvbiwgcmV0dXJuIHRoZSB1bmlxdWUgZG9jdW1lbnRzIGZvciBhbGwgcXVlcmllcy5EZWNvbXBvc2l0aW9uV2hlbiBhIHF1ZXN0aW9uIGNhbiBiZSBicm9rZW4gZG93biBpbnRvIHNtYWxsZXIgc3VicHJvYmxlbXMuRGVjb21wb3NlIGEgcXVlc3Rpb24gaW50byBhIHNldCBvZiBzdWJwcm9ibGVtcyAvIHF1ZXN0aW9ucywgd2hpY2ggY2FuIGVpdGhlciBiZSBzb2x2ZWQgc2VxdWVudGlhbGx5ICh1c2UgdGhlIGFuc3dlciBmcm9tIGZpcnN0ICsgcmV0cmlldmFsIHRvIGFuc3dlciB0aGUgc2Vjb25kKSBvciBpbiBwYXJhbGxlbCAoY29uc29saWRhdGUgZWFjaCBhbnN3ZXIgaW50byBmaW5hbCBhbnN3ZXIpLlN0ZXAtYmFja1doZW4gYSBoaWdoZXItbGV2ZWwgY29uY2VwdHVhbCB1bmRlcnN0YW5kaW5nIGlzIHJlcXVpcmVkLkZpcnN0IHByb21wdCB0aGUgTExNIHRvIGFzayBhIGdlbmVyaWMgc3RlcC1iYWNrIHF1ZXN0aW9uIGFib3V0IGhpZ2hlci1sZXZlbCBjb25jZXB0cyBvciBwcmluY2lwbGVzLCBhbmQgcmV0cmlldmUgcmVsZXZhbnQgZmFjdHMgYWJvdXQgdGhlbS4gVXNlIHRoaXMgZ3JvdW5kaW5nIHRvIGhlbHAgYW5zd2VyIHRoZSB1c2VyIHF1ZXN0aW9uLiBQYXBlci5IeURFSWYgeW91IGhhdmUgY2hhbGxlbmdlcyByZXRyaWV2aW5nIHJlbGV2YW50IGRvY3VtZW50cyB1c2luZyB0aGUgcmF3IHVzZXIgaW5wdXRzLlVzZSBhbiBMTE0gdG8gY29udmVydCBxdWVzdGlvbnMgaW50byBoeXBvdGhldGljYWwgZG9jdW1lbnRzIHRoYXQgYW5zd2VyIHRoZSBxdWVzdGlvbi4gVXNlIHRoZSBlbWJlZGRlZCBoeXBvdGhldGljYWwgZG9jdW1lbnRzIHRvIHJldHJpZXZlIHJlYWwgZG9jdW1lbnRzIHdpdGggdGhlIHByZW1pc2UgdGhhdCBkb2MtZG9jIHNpbWlsYXJpdHkgc2VhcmNoIGNhbiBwcm9kdWNlIG1vcmUgcmVsZXZhbnQgbWF0Y2hlcy4gUGFwZXIudGlwU2VlIG91ciBSQUcgZnJvbSBTY3JhdGNoIHZpZGVvcyBmb3IgYSBmZXcgZGlmZmVyZW50IHNwZWNpZmljIGFwcHJvYWNoZXM6TXVsdGktcXVlcnlEZWNvbXBvc2l0aW9uU3RlcC1iYWNrSHlERVJvdXRpbmdcdTIwMGJTZWNvbmQsIGNvbnNpZGVyIHRoZSBkYXRhIHNvdXJjZXMgYXZhaWxhYmxlIHRvIHlvdXIgUkFHIHN5c3RlbS4gWW91IHdhbnQgdG8gcXVlcnkgYWNyb3NzIG1vcmUgdGhhbiBvbmUgZGF0YWJhc2Ugb3IgYWNyb3NzIHN0cnVjdHVyZWQgYW5kIHVuc3RydWN0dXJlZCBkYXRhIHNvdXJjZXMuIFVzaW5nIGFuIExMTSB0byByZXZpZXcgdGhlIGlucHV0IGFuZCByb3V0ZSBpdCB0byB0aGUgYXBwcm9wcmlhdGUgZGF0YSBzb3VyY2UgaXMgYSBzaW1wbGUgYW5kIGVmZmVjdGl2ZSBhcHByb2FjaCBmb3IgcXVlcnlpbmcgYWNyb3NzIHNvdXJjZXMuTmFtZVdoZW4gdG8gdXNlRGVzY3JpcHRpb25Mb2dpY2FsIHJvdXRpbmdXaGVuIHlvdSBjYW4gcHJvbXB0IGFuIExMTSB3aXRoIHJ1bGVzIHRvIGRlY2lkZSB3aGVyZSB0byByb3V0ZSB0aGUgaW5wdXQuTG9naWNhbCByb3V0aW5nIGNhbiB1c2UgYW4gTExNIHRvIHJlYXNvbiBhYm91dCB0aGUgcXVlcnkgYW5kIGNob29zZSB3aGljaCBkYXRhc3RvcmUgaXMgbW9zdCBhcHByb3ByaWF0ZS5TZW1hbnRpYyByb3V0aW5nV2hlbiBzZW1hbnRpYyBzaW1pbGFyaXR5IGlzIGFuIGVmZmVjdGl2ZSB3YXkgdG8gZGV0ZXJtaW5lIHdoZXJlIHRvIHJvdXRlIHRoZSBpbnB1dC5TZW1hbnRpYyByb3V0aW5nIGVtYmVkcyBib3RoIHF1ZXJ5IGFuZCwgdHlwaWNhbGx5IGEgc2V0IG9mIHByb21wdHMuIEl0IHRoZW4gY2hvb3NlcyB0aGUgYXBwcm9wcmlhdGUgcHJvbXB0IGJhc2VkIHVwb24gc2ltaWxhcml0eS50aXBTZWUgb3VyIFJBRyBmcm9tIFNjcmF0Y2ggdmlkZW8gb24gcm91dGluZy4gIFF1ZXJ5IENvbnN0cnVjdGlvblx1MjAwYlRoaXJkLCBjb25zaWRlciB3aGV0aGVyIGFueSBvZiB5b3VyIGRhdGEgc291cmNlcyByZXF1aXJlIHNwZWNpZmljIHF1ZXJ5IGZvcm1hdHMuIE1hbnkgc3RydWN0dXJlZCBkYXRhYmFzZXMgdXNlIFNRTC4gVmVjdG9yIHN0b3JlcyBvZnRlbiBoYXZlIHNwZWNpZmljIHN5bnRheCBmb3IgYXBwbHlpbmcga2V5d29yZCBmaWx0ZXJzIHRvIGRvY3VtZW50IG1ldGFkYXRhLiBVc2luZyBhbiBMTE0gdG8gY29udmVydCBhIG5hdHVyYWwgbGFuZ3VhZ2UgcXVlcnkgaW50byBhIHF1ZXJ5IHN5bnRheCBpcyBhIHBvcHVsYXIgYW5kIHBvd2VyZnVsIGFwcHJvYWNoLlxuSW4gcGFydGljdWxhciwgdGV4dC10by1TUUwsIHRleHQtdG8tQ3lwaGVyLCBhbmQgcXVlcnkgYW5hbHlzaXMgZm9yIG1ldGFkYXRhIGZpbHRlcnMgYXJlIHVzZWZ1bCB3YXlzIHRvIGludGVyYWN0IHdpdGggc3RydWN0dXJlZCwgZ3JhcGgsIGFuZCB2ZWN0b3IgZGF0YWJhc2VzIHJlc3BlY3RpdmVseS4gTmFtZVdoZW4gdG8gVXNlRGVzY3JpcHRpb25UZXh0IHRvIFNRTElmIHVzZXJzIGFyZSBhc2tpbmcgcXVlc3Rpb25zIHRoYXQgcmVxdWlyZSBpbmZvcm1hdGlvbiBob3VzZWQgaW4gYSByZWxhdGlvbmFsIGRhdGFiYXNlLCBhY2Nlc3NpYmxlIHZpYSBTUUwuVGhpcyB1c2VzIGFuIExMTSB0byB0cmFuc2Zvcm0gdXNlciBpbnB1dCBpbnRvIGEgU1FMIHF1ZXJ5LlRleHQtdG8tQ3lwaGVySWYgdXNlcnMgYXJlIGFza2luZyBxdWVzdGlvbnMgdGhhdCByZXF1aXJlIGluZm9ybWF0aW9uIGhvdXNlZCBpbiBhIGdyYXBoIGRhdGFiYXNlLCBhY2Nlc3NpYmxlIHZpYSBDeXBoZXIuVGhpcyB1c2VzIGFuIExMTSB0byB0cmFuc2Zvcm0gdXNlciBpbnB1dCBpbnRvIGEgQ3lwaGVyIHF1ZXJ5LlNlbGYgUXVlcnlJZiB1c2VycyBhcmUgYXNraW5nIHF1ZXN0aW9ucyB0aGF0IGFyZSBiZXR0ZXIgYW5zd2VyZWQgYnkgZmV0Y2hpbmcgZG9jdW1lbnRzIGJhc2VkIG9uIG1ldGFkYXRhIHJhdGhlciB0aGFuIHNpbWlsYXJpdHkgd2l0aCB0aGUgdGV4dC5UaGlzIHVzZXMgYW4gTExNIHRvIHRyYW5zZm9ybSB1c2VyIGlucHV0IGludG8gdHdvIHRoaW5nczogKDEpIGEgc3RyaW5nIHRvIGxvb2sgdXAgc2VtYW50aWNhbGx5LCAoMikgYSBtZXRhZGF0YSBmaWx0ZXIgdG8gZ28gYWxvbmcgd2l0aCBpdC4gVGhpcyBpcyB1c2VmdWwgYmVjYXVzZSBvZnRlbnRpbWVzIHF1ZXN0aW9ucyBhcmUgYWJvdXQgdGhlIE1FVEFEQVRBIG9mIGRvY3VtZW50cyAobm90IHRoZSBjb250ZW50IGl0c2VsZikudGlwU2VlIG91ciBibG9nIHBvc3Qgb3ZlcnZpZXcgYW5kIFJBRyBmcm9tIFNjcmF0Y2ggdmlkZW8gb24gcXVlcnkgY29uc3RydWN0aW9uLCB0aGUgcHJvY2VzcyBvZiB0ZXh0LXRvLURTTCB3aGVyZSBEU0wgaXMgYSBkb21haW4gc3BlY2lmaWMgbGFuZ3VhZ2UgcmVxdWlyZWQgdG8gaW50ZXJhY3Qgd2l0aCBhIGdpdmVuIGRhdGFiYXNlLiBUaGlzIGNvbnZlcnRzIHVzZXIgcXVlc3Rpb25zIGludG8gc3RydWN0dXJlZCBxdWVyaWVzLiBJbmRleGluZ1x1MjAwYkZvdXJ0aCwgY29uc2lkZXIgdGhlIGRlc2lnbiBvZiB5b3VyIGRvY3VtZW50IGluZGV4LiBBIHNpbXBsZSBhbmQgcG93ZXJmdWwgaWRlYSBpcyB0byBkZWNvdXBsZSB0aGUgZG9jdW1lbnRzIHRoYXQgeW91IGluZGV4IGZvciByZXRyaWV2YWwgZnJvbSB0aGUgZG9jdW1lbnRzIHRoYXQgeW91IHBhc3MgdG8gdGhlIExMTSBmb3IgZ2VuZXJhdGlvbi4gSW5kZXhpbmcgZnJlcXVlbnRseSB1c2VzIGVtYmVkZGluZyBtb2RlbHMgd2l0aCB2ZWN0b3Igc3RvcmVzLCB3aGljaCBjb21wcmVzcyB0aGUgc2VtYW50aWMgaW5mb3JtYXRpb24gaW4gZG9jdW1lbnRzIHRvIGZpeGVkLXNpemUgdmVjdG9ycy5NYW55IFJBRyBhcHByb2FjaGVzIGZvY3VzIG9uIHNwbGl0dGluZyBkb2N1bWVudHMgaW50byBjaHVua3MgYW5kIHJldHJpZXZpbmcgc29tZSBudW1iZXIgYmFzZWQgb24gc2ltaWxhcml0eSB0byBhbiBpbnB1dCBxdWVzdGlvbiBmb3IgdGhlIExMTS4gQnV0IGNodW5rIHNpemUgYW5kIGNodW5rIG51bWJlciBjYW4gYmUgZGlmZmljdWx0IHRvIHNldCBhbmQgYWZmZWN0IHJlc3VsdHMgaWYgdGhleSBkbyBub3QgcHJvdmlkZSBmdWxsIGNvbnRleHQgZm9yIHRoZSBMTE0gdG8gYW5zd2VyIGEgcXVlc3Rpb24uIEZ1cnRoZXJtb3JlLCBMTE1zIGFyZSBpbmNyZWFzaW5nbHkgY2FwYWJsZSBvZiBwcm9jZXNzaW5nIG1pbGxpb25zIG9mIHRva2Vucy4gVHdvIGFwcHJvYWNoZXMgY2FuIGFkZHJlc3MgdGhpcyB0ZW5zaW9uOiAoMSkgTXVsdGkgVmVjdG9yIHJldHJpZXZlciB1c2luZyBhbiBMTE0gdG8gdHJhbnNsYXRlIGRvY3VtZW50cyBpbnRvIGFueSBmb3JtIChlLmcuLCBvZnRlbiBpbnRvIGEgc3VtbWFyeSkgdGhhdCBpcyB3ZWxsLXN1aXRlZCBmb3IgaW5kZXhpbmcsIGJ1dCByZXR1cm5zIGZ1bGwgZG9jdW1lbnRzIHRvIHRoZSBMTE0gZm9yIGdlbmVyYXRpb24uICgyKSBQYXJlbnREb2N1bWVudCByZXRyaWV2ZXIgZW1iZWRzIGRvY3VtZW50IGNodW5rcywgYnV0IGFsc28gcmV0dXJucyBmdWxsIGRvY3VtZW50cy4gVGhlIGlkZWEgaXMgdG8gZ2V0IHRoZSBiZXN0IG9mIGJvdGggd29ybGRzOiB1c2UgY29uY2lzZSByZXByZXNlbnRhdGlvbnMgKHN1bW1hcmllcyBvciBjaHVua3MpIGZvciByZXRyaWV2YWwsIGJ1dCB1c2UgdGhlIGZ1bGwgZG9jdW1lbnRzIGZvciBhbnN3ZXIgZ2VuZXJhdGlvbi5OYW1lSW5kZXggVHlwZVVzZXMgYW4gTExNV2hlbiB0byBVc2VEZXNjcmlwdGlvblZlY3RvciBzdG9yZVZlY3RvciBzdG9yZU5vSWYgeW91IGFyZSBqdXN0IGdldHRpbmcgc3RhcnRlZCBhbmQgbG9va2luZyBmb3Igc29tZXRoaW5nIHF1aWNrIGFuZCBlYXN5LlRoaXMgaXMgdGhlIHNpbXBsZXN0IG1ldGhvZCBhbmQgdGhlIG9uZSB0aGF0IGlzIGVhc2llc3QgdG8gZ2V0IHN0YXJ0ZWQgd2l0aC4gSXQgaW52b2x2ZXMgY3JlYXRpbmcgZW1iZWRkaW5ncyBmb3IgZWFjaCBwaWVjZSBvZiB0ZXh0LlBhcmVudERvY3VtZW50VmVjdG9yIHN0b3JlICsgRG9jdW1lbnQgU3RvcmVOb0lmIHlvdXIgcGFnZXMgaGF2ZSBsb3RzIG9mIHNtYWxsZXIgcGllY2VzIG9mIGRpc3RpbmN0IGluZm9ybWF0aW9uIHRoYXQgYXJlIGJlc3QgaW5kZXhlZCBieSB0aGVtc2VsdmVzLCBidXQgYmVzdCByZXRyaWV2ZWQgYWxsIHRvZ2V0aGVyLlRoaXMgaW52b2x2ZXMgaW5kZXhpbmcgbXVsdGlwbGUgY2h1bmtzIGZvciBlYWNoIGRvY3VtZW50LiBUaGVuIHlvdSBmaW5kIHRoZSBjaHVua3MgdGhhdCBhcmUgbW9zdCBzaW1pbGFyIGluIGVtYmVkZGluZyBzcGFjZSwgYnV0IHlvdSByZXRyaWV2ZSB0aGUgd2hvbGUgcGFyZW50IGRvY3VtZW50IGFuZCByZXR1cm4gdGhhdCAocmF0aGVyIHRoYW4gaW5kaXZpZHVhbCBjaHVua3MpLk11bHRpIFZlY3RvclZlY3RvciBzdG9yZSArIERvY3VtZW50IFN0b3JlU29tZXRpbWVzIGR1cmluZyBpbmRleGluZ0lmIHlvdSBhcmUgYWJsZSB0byBleHRyYWN0IGluZm9ybWF0aW9uIGZyb20gZG9jdW1lbnRzIHRoYXQgeW91IHRoaW5rIGlzIG1vcmUgcmVsZXZhbnQgdG8gaW5kZXggdGhhbiB0aGUgdGV4dCBpdHNlbGYuVGhpcyBpbnZvbHZlcyBjcmVhdGluZyBtdWx0aXBsZSB2ZWN0b3JzIGZvciBlYWNoIGRvY3VtZW50LiBFYWNoIHZlY3RvciBjb3VsZCBiZSBjcmVhdGVkIGluIGEgbXlyaWFkIG9mIHdheXMgLSBleGFtcGxlcyBpbmNsdWRlIHN1bW1hcmllcyBvZiB0aGUgdGV4dCBhbmQgaHlwb3RoZXRpY2FsIHF1ZXN0aW9ucy5UaW1lLVdlaWdodGVkIFZlY3RvciBzdG9yZVZlY3RvciBzdG9yZU5vSWYgeW91IGhhdmUgdGltZXN0YW1wcyBhc3NvY2lhdGVkIHdpdGggeW91ciBkb2N1bWVudHMsIGFuZCB5b3Ugd2FudCB0byByZXRyaWV2ZSB0aGUgbW9zdCByZWNlbnQgb25lc1RoaXMgZmV0Y2hlcyBkb2N1bWVudHMgYmFzZWQgb24gYSBjb21iaW5hdGlvbiBvZiBzZW1hbnRpYyBzaW1pbGFyaXR5IChhcyBpbiBub3JtYWwgdmVjdG9yIHJldHJpZXZhbCkgYW5kIHJlY2VuY3kgKGxvb2tpbmcgYXQgdGltZXN0YW1wcyBvZiBpbmRleGVkIGRvY3VtZW50cyl0aXBTZWUgb3VyIFJBRyBmcm9tIFNjcmF0Y2ggdmlkZW8gb24gaW5kZXhpbmcgZnVuZGFtZW50YWxzU2VlIG91ciBSQUcgZnJvbSBTY3JhdGNoIHZpZGVvIG9uIG11bHRpIHZlY3RvciByZXRyaWV2ZXJGaWZ0aCwgY29uc2lkZXIgd2F5cyB0byBpbXByb3ZlIHRoZSBxdWFsaXR5IG9mIHlvdXIgc2ltaWxhcml0eSBzZWFyY2ggaXRzZWxmLiBFbWJlZGRpbmcgbW9kZWxzIGNvbXByZXNzIHRleHQgaW50byBmaXhlZC1sZW5ndGggKHZlY3RvcikgcmVwcmVzZW50YXRpb25zIHRoYXQgY2FwdHVyZSB0aGUgc2VtYW50aWMgY29udGVudCBvZiB0aGUgZG9jdW1lbnQuIFRoaXMgY29tcHJlc3Npb24gaXMgdXNlZnVsIGZvciBzZWFyY2ggLyByZXRyaWV2YWwsIGJ1dCBwdXRzIGEgaGVhdnkgYnVyZGVuIG9uIHRoYXQgc2luZ2xlIHZlY3RvciByZXByZXNlbnRhdGlvbiB0byBjYXB0dXJlIHRoZSBzZW1hbnRpYyBudWFuY2UgLyBkZXRhaWwgb2YgdGhlIGRvY3VtZW50LiBJbiBzb21lIGNhc2VzLCBpcnJlbGV2YW50IG9yIHJlZHVuZGFudCBjb250ZW50IGNhbiBkaWx1dGUgdGhlIHNlbWFudGljIHVzZWZ1bG5lc3Mgb2YgdGhlIGVtYmVkZGluZy5Db2xCRVJUIGlzIGFuIGludGVyZXN0aW5nIGFwcHJvYWNoIHRvIGFkZHJlc3MgdGhpcyB3aXRoIGEgaGlnaGVyIGdyYW51bGFyaXR5IGVtYmVkZGluZ3M6ICgxKSBwcm9kdWNlIGEgY29udGV4dHVhbGx5IGluZmx1ZW5jZWQgZW1iZWRkaW5nIGZvciBlYWNoIHRva2VuIGluIHRoZSBkb2N1bWVudCBhbmQgcXVlcnksICgyKSBzY29yZSBzaW1pbGFyaXR5IGJldHdlZW4gZWFjaCBxdWVyeSB0b2tlbiBhbmQgYWxsIGRvY3VtZW50IHRva2VucywgKDMpIHRha2UgdGhlIG1heCwgKDQpIGRvIHRoaXMgZm9yIGFsbCBxdWVyeSB0b2tlbnMsIGFuZCAoNSkgdGFrZSB0aGUgc3VtIG9mIHRoZSBtYXggc2NvcmVzIChpbiBzdGVwIDMpIGZvciBhbGwgcXVlcnkgdG9rZW5zIHRvIGdldCBhIHF1ZXJ5LWRvY3VtZW50IHNpbWlsYXJpdHkgc2NvcmU7IHRoaXMgdG9rZW4td2lzZSBzY29yaW5nIGNhbiB5aWVsZCBzdHJvbmcgcmVzdWx0cy4gVGhlcmUgYXJlIHNvbWUgYWRkaXRpb25hbCB0cmlja3MgdG8gaW1wcm92ZSB0aGUgcXVhbGl0eSBvZiB5b3VyIHJldHJpZXZhbC4gRW1iZWRkaW5ncyBleGNlbCBhdCBjYXB0dXJpbmcgc2VtYW50aWMgaW5mb3JtYXRpb24sIGJ1dCBtYXkgc3RydWdnbGUgd2l0aCBrZXl3b3JkLWJhc2VkIHF1ZXJpZXMuIE1hbnkgdmVjdG9yIHN0b3JlcyBvZmZlciBidWlsdC1pbiBoeWJyaWQtc2VhcmNoIHRvIGNvbWJpbmUga2V5d29yZCBhbmQgc2VtYW50aWMgc2ltaWxhcml0eSwgd2hpY2ggbWFycmllcyB0aGUgYmVuZWZpdHMgb2YgYm90aCBhcHByb2FjaGVzLiBGdXJ0aGVybW9yZSwgbWFueSB2ZWN0b3Igc3RvcmVzIGhhdmUgbWF4aW1hbCBtYXJnaW5hbCByZWxldmFuY2UsIHdoaWNoIGF0dGVtcHRzIHRvIGRpdmVyc2lmeSB0aGUgcmVzdWx0cyBvZiBhIHNlYXJjaCB0byBhdm9pZCByZXR1cm5pbmcgc2ltaWxhciBhbmQgcmVkdW5kYW50IGRvY3VtZW50cy4gTmFtZVdoZW4gdG8gdXNlRGVzY3JpcHRpb25Db2xCRVJUV2hlbiBoaWdoZXIgZ3JhbnVsYXJpdHkgZW1iZWRkaW5ncyBhcmUgbmVlZGVkLkNvbEJFUlQgdXNlcyBjb250ZXh0dWFsbHkgaW5mbHVlbmNlZCBlbWJlZGRpbmdzIGZvciBlYWNoIHRva2VuIGluIHRoZSBkb2N1bWVudCBhbmQgcXVlcnkgdG8gZ2V0IGEgZ3JhbnVsYXIgcXVlcnktZG9jdW1lbnQgc2ltaWxhcml0eSBzY29yZS4gUGFwZXIuSHlicmlkIHNlYXJjaFdoZW4gY29tYmluaW5nIGtleXdvcmQtYmFzZWQgYW5kIHNlbWFudGljIHNpbWlsYXJpdHkuSHlicmlkIHNlYXJjaCBjb21iaW5lcyBrZXl3b3JkIGFuZCBzZW1hbnRpYyBzaW1pbGFyaXR5LCBtYXJyeWluZyB0aGUgYmVuZWZpdHMgb2YgYm90aCBhcHByb2FjaGVzLiBQYXBlci5NYXhpbWFsIE1hcmdpbmFsIFJlbGV2YW5jZSAoTU1SKVdoZW4gbmVlZGluZyB0byBkaXZlcnNpZnkgc2VhcmNoIHJlc3VsdHMuTU1SIGF0dGVtcHRzIHRvIGRpdmVyc2lmeSB0aGUgcmVzdWx0cyBvZiBhIHNlYXJjaCB0byBhdm9pZCByZXR1cm5pbmcgc2ltaWxhciBhbmQgcmVkdW5kYW50IGRvY3VtZW50cy50aXBTZWUgb3VyIFJBRyBmcm9tIFNjcmF0Y2ggdmlkZW8gb24gQ29sQkVSVC5Qb3N0LXByb2Nlc3NpbmdcdTIwMGJTaXh0aCwgY29uc2lkZXIgd2F5cyB0byBmaWx0ZXIgb3IgcmFuayByZXRyaWV2ZWQgZG9jdW1lbnRzLiBUaGlzIGlzIHZlcnkgdXNlZnVsIGlmIHlvdSBhcmUgY29tYmluaW5nIGRvY3VtZW50cyByZXR1cm5lZCBmcm9tIG11bHRpcGxlIHNvdXJjZXMsIHNpbmNlIGl0IGNhbiBjYW4gZG93bi1yYW5rIGxlc3MgcmVsZXZhbnQgZG9jdW1lbnRzIGFuZCAvIG9yIGNvbXByZXNzIHNpbWlsYXIgZG9jdW1lbnRzLiBOYW1lSW5kZXggVHlwZVVzZXMgYW4gTExNV2hlbiB0byBVc2VEZXNjcmlwdGlvbkNvbnRleHR1YWwgQ29tcHJlc3Npb25BbnlTb21ldGltZXNJZiB5b3UgYXJlIGZpbmRpbmcgdGhhdCB5b3VyIHJldHJpZXZlZCBkb2N1bWVudHMgY29udGFpbiB0b28gbXVjaCBpcnJlbGV2YW50IGluZm9ybWF0aW9uIGFuZCBhcmUgZGlzdHJhY3RpbmcgdGhlIExMTS5UaGlzIHB1dHMgYSBwb3N0LXByb2Nlc3Npbmcgc3RlcCBvbiB0b3Agb2YgYW5vdGhlciByZXRyaWV2ZXIgYW5kIGV4dHJhY3RzIG9ubHkgdGhlIG1vc3QgcmVsZXZhbnQgaW5mb3JtYXRpb24gZnJvbSByZXRyaWV2ZWQgZG9jdW1lbnRzLiBUaGlzIGNhbiBiZSBkb25lIHdpdGggZW1iZWRkaW5ncyBvciBhbiBMTE0uRW5zZW1ibGVBbnlOb0lmIHlvdSBoYXZlIG11bHRpcGxlIHJldHJpZXZhbCBtZXRob2RzIGFuZCB3YW50IHRvIHRyeSBjb21iaW5pbmcgdGhlbS5UaGlzIGZldGNoZXMgZG9jdW1lbnRzIGZyb20gbXVsdGlwbGUgcmV0cmlldmVycyBhbmQgdGhlbiBjb21iaW5lcyB0aGVtLlJlLXJhbmtpbmdBbnlZZXNJZiB5b3Ugd2FudCB0byByYW5rIHJldHJpZXZlZCBkb2N1bWVudHMgYmFzZWQgdXBvbiByZWxldmFuY2UsIGVzcGVjaWFsbHkgaWYgeW91IHdhbnQgdG8gY29tYmluZSByZXN1bHRzIGZyb20gbXVsdGlwbGUgcmV0cmlldmFsIG1ldGhvZHMgLkdpdmVuIGEgcXVlcnkgYW5kIGEgbGlzdCBvZiBkb2N1bWVudHMsIFJlcmFuayBpbmRleGVzIHRoZSBkb2N1bWVudHMgZnJvbSBtb3N0IHRvIGxlYXN0IHNlbWFudGljYWxseSByZWxldmFudCB0byB0aGUgcXVlcnkudGlwU2VlIG91ciBSQUcgZnJvbSBTY3JhdGNoIHZpZGVvIG9uIFJBRy1GdXNpb24gKHBhcGVyKSwgb24gYXBwcm9hY2ggZm9yIHBvc3QtcHJvY2Vzc2luZyBhY3Jvc3MgbXVsdGlwbGUgcXVlcmllczogIFJld3JpdGUgdGhlIHVzZXIgcXVlc3Rpb24gZnJvbSBtdWx0aXBsZSBwZXJzcGVjdGl2ZXMsIHJldHJpZXZlIGRvY3VtZW50cyBmb3IgZWFjaCByZXdyaXR0ZW4gcXVlc3Rpb24sIGFuZCBjb21iaW5lIHRoZSByYW5rcyBvZiBtdWx0aXBsZSBzZWFyY2ggcmVzdWx0IGxpc3RzIHRvIHByb2R1Y2UgYSBzaW5nbGUsIHVuaWZpZWQgcmFua2luZyB3aXRoIFJlY2lwcm9jYWwgUmFuayBGdXNpb24gKFJSRikuR2VuZXJhdGlvblx1MjAwYkZpbmFsbHksIGNvbnNpZGVyIHdheXMgdG8gYnVpbGQgc2VsZi1jb3JyZWN0aW9uIGludG8geW91ciBSQUcgc3lzdGVtLiBSQUcgc3lzdGVtcyBjYW4gc3VmZmVyIGZyb20gbG93IHF1YWxpdHkgcmV0cmlldmFsIChlLmcuLCBpZiBhIHVzZXIgcXVlc3Rpb24gaXMgb3V0IG9mIHRoZSBkb21haW4gZm9yIHRoZSBpbmRleCkgYW5kIC8gb3IgaGFsbHVjaW5hdGlvbnMgaW4gZ2VuZXJhdGlvbi4gQSBuYWl2ZSByZXRyaWV2ZS1nZW5lcmF0ZSBwaXBlbGluZSBoYXMgbm8gYWJpbGl0eSB0byBkZXRlY3Qgb3Igc2VsZi1jb3JyZWN0IGZyb20gdGhlc2Uga2luZHMgb2YgZXJyb3JzLiBUaGUgY29uY2VwdCBvZiBcImZsb3cgZW5naW5lZXJpbmdcIiBoYXMgYmVlbiBpbnRyb2R1Y2VkIGluIHRoZSBjb250ZXh0IG9mIGNvZGUgZ2VuZXJhdGlvbjogaXRlcmF0aXZlbHkgYnVpbGQgYW4gYW5zd2VyIHRvIGEgY29kZSBxdWVzdGlvbiB3aXRoIHVuaXQgdGVzdHMgdG8gY2hlY2sgYW5kIHNlbGYtY29ycmVjdCBlcnJvcnMuIFNldmVyYWwgd29ya3MgaGF2ZSBhcHBsaWVkIHRoaXMgUkFHLCBzdWNoIGFzIFNlbGYtUkFHIGFuZCBDb3JyZWN0aXZlLVJBRy4gSW4gYm90aCBjYXNlcywgY2hlY2tzIGZvciBkb2N1bWVudCByZWxldmFuY2UsIGhhbGx1Y2luYXRpb25zLCBhbmQgLyBvciBhbnN3ZXIgcXVhbGl0eSBhcmUgcGVyZm9ybWVkIGluIHRoZSBSQUcgYW5zd2VyIGdlbmVyYXRpb24gZmxvdy5XZSd2ZSBmb3VuZCB0aGF0IGdyYXBocyBhcmUgYSBncmVhdCB3YXkgdG8gcmVsaWFibHkgZXhwcmVzcyBsb2dpY2FsIGZsb3dzIGFuZCBoYXZlIGltcGxlbWVudGVkIGlkZWFzIGZyb20gc2V2ZXJhbCBvZiB0aGVzZSBwYXBlcnMgdXNpbmcgTGFuZ0dyYXBoLCBhcyBzaG93biBpbiB0aGUgZmlndXJlIGJlbG93IChyZWQgLSByb3V0aW5nLCBibHVlIC0gZmFsbGJhY2ssIGdyZWVuIC0gc2VsZi1jb3JyZWN0aW9uKTpSb3V0aW5nOiBBZGFwdGl2ZSBSQUcgKHBhcGVyKS4gUm91dGUgcXVlc3Rpb25zIHRvIGRpZmZlcmVudCByZXRyaWV2YWwgYXBwcm9hY2hlcywgYXMgZGlzY3Vzc2VkIGFib3ZlIEZhbGxiYWNrOiBDb3JyZWN0aXZlIFJBRyAocGFwZXIpLiBGYWxsYmFjayB0byB3ZWIgc2VhcmNoIGlmIGRvY3MgYXJlIG5vdCByZWxldmFudCB0byBxdWVyeVNlbGYtY29ycmVjdGlvbjogU2VsZi1SQUcgKHBhcGVyKS4gRml4IGFuc3dlcnMgdy8gaGFsbHVjaW5hdGlvbnMgb3IgZG9uXHUyMDE5dCBhZGRyZXNzIHF1ZXN0aW9uTmFtZVdoZW4gdG8gdXNlRGVzY3JpcHRpb25TZWxmLVJBR1doZW4gbmVlZGluZyB0byBmaXggYW5zd2VycyB3aXRoIGhhbGx1Y2luYXRpb25zIG9yIGlycmVsZXZhbnQgY29udGVudC5TZWxmLVJBRyBwZXJmb3JtcyBjaGVja3MgZm9yIGRvY3VtZW50IHJlbGV2YW5jZSwgaGFsbHVjaW5hdGlvbnMsIGFuZCBhbnN3ZXIgcXVhbGl0eSBkdXJpbmcgdGhlIFJBRyBhbnN3ZXIgZ2VuZXJhdGlvbiBmbG93LCBpdGVyYXRpdmVseSBidWlsZGluZyBhbiBhbnN3ZXIgYW5kIHNlbGYtY29ycmVjdGluZyBlcnJvcnMuQ29ycmVjdGl2ZS1SQUdXaGVuIG5lZWRpbmcgYSBmYWxsYmFjayBtZWNoYW5pc20gZm9yIGxvdyByZWxldmFuY2UgZG9jcy5Db3JyZWN0aXZlLVJBRyBpbmNsdWRlcyBhIGZhbGxiYWNrIChlLmcuLCB0byB3ZWIgc2VhcmNoKSBpZiB0aGUgcmV0cmlldmVkIGRvY3VtZW50cyBhcmUgbm90IHJlbGV2YW50IHRvIHRoZSBxdWVyeSwgZW5zdXJpbmcgaGlnaGVyIHF1YWxpdHkgYW5kIG1vcmUgcmVsZXZhbnQgcmV0cmlldmFsLnRpcFNlZSBzZXZlcmFsIHZpZGVvcyBhbmQgY29va2Jvb2tzIHNob3djYXNpbmcgUkFHIHdpdGggTGFuZ0dyYXBoOiBMYW5nR3JhcGggQ29ycmVjdGl2ZSBSQUdMYW5nR3JhcGggY29tYmluaW5nIEFkYXB0aXZlLCBTZWxmLVJBRywgYW5kIENvcnJlY3RpdmUgUkFHIENvb2tib29rcyBmb3IgUkFHIHVzaW5nIExhbmdHcmFwaFNlZSBvdXIgTGFuZ0dyYXBoIFJBRyByZWNpcGVzIHdpdGggcGFydG5lcnM6TWV0YU1pc3RyYWxUZXh0IHNwbGl0dGluZ1x1MjAwYkxhbmdDaGFpbiBvZmZlcnMgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2YgdGV4dCBzcGxpdHRlcnMuXG5UaGVzZSBhbGwgbGl2ZSBpbiB0aGUgbGFuZ2NoYWluLXRleHQtc3BsaXR0ZXJzIHBhY2thZ2UuVGFibGUgY29sdW1uczpOYW1lOiBOYW1lIG9mIHRoZSB0ZXh0IHNwbGl0dGVyQ2xhc3NlczogQ2xhc3NlcyB0aGF0IGltcGxlbWVudCB0aGlzIHRleHQgc3BsaXR0ZXJTcGxpdHMgT246IEhvdyB0aGlzIHRleHQgc3BsaXR0ZXIgc3BsaXRzIHRleHRBZGRzIE1ldGFkYXRhOiBXaGV0aGVyIG9yIG5vdCB0aGlzIHRleHQgc3BsaXR0ZXIgYWRkcyBtZXRhZGF0YSBhYm91dCB3aGVyZSBlYWNoIGNodW5rIGNhbWUgZnJvbS5EZXNjcmlwdGlvbjogRGVzY3JpcHRpb24gb2YgdGhlIHNwbGl0dGVyLCBpbmNsdWRpbmcgcmVjb21tZW5kYXRpb24gb24gd2hlbiB0byB1c2UgaXQuTmFtZUNsYXNzZXNTcGxpdHMgT25BZGRzIE1ldGFkYXRhRGVzY3JpcHRpb25SZWN1cnNpdmVSZWN1cnNpdmVDaGFyYWN0ZXJUZXh0U3BsaXR0ZXIsIFJlY3Vyc2l2ZUpzb25TcGxpdHRlckEgbGlzdCBvZiB1c2VyIGRlZmluZWQgY2hhcmFjdGVyc1JlY3Vyc2l2ZWx5IHNwbGl0cyB0ZXh0LiBUaGlzIHNwbGl0dGluZyBpcyB0cnlpbmcgdG8ga2VlcCByZWxhdGVkIHBpZWNlcyBvZiB0ZXh0IG5leHQgdG8gZWFjaCBvdGhlci4gVGhpcyBpcyB0aGUgcmVjb21tZW5kZWQgd2F5IHRvIHN0YXJ0IHNwbGl0dGluZyB0ZXh0LkhUTUxIVE1MSGVhZGVyVGV4dFNwbGl0dGVyLCBIVE1MU2VjdGlvblNwbGl0dGVySFRNTCBzcGVjaWZpYyBjaGFyYWN0ZXJzXHUyNzA1U3BsaXRzIHRleHQgYmFzZWQgb24gSFRNTC1zcGVjaWZpYyBjaGFyYWN0ZXJzLiBOb3RhYmx5LCB0aGlzIGFkZHMgaW4gcmVsZXZhbnQgaW5mb3JtYXRpb24gYWJvdXQgd2hlcmUgdGhhdCBjaHVuayBjYW1lIGZyb20gKGJhc2VkIG9uIHRoZSBIVE1MKU1hcmtkb3duTWFya2Rvd25IZWFkZXJUZXh0U3BsaXR0ZXIsTWFya2Rvd24gc3BlY2lmaWMgY2hhcmFjdGVyc1x1MjcwNVNwbGl0cyB0ZXh0IGJhc2VkIG9uIE1hcmtkb3duLXNwZWNpZmljIGNoYXJhY3RlcnMuIE5vdGFibHksIHRoaXMgYWRkcyBpbiByZWxldmFudCBpbmZvcm1hdGlvbiBhYm91dCB3aGVyZSB0aGF0IGNodW5rIGNhbWUgZnJvbSAoYmFzZWQgb24gdGhlIE1hcmtkb3duKUNvZGVtYW55IGxhbmd1YWdlc0NvZGUgKFB5dGhvbiwgSlMpIHNwZWNpZmljIGNoYXJhY3RlcnNTcGxpdHMgdGV4dCBiYXNlZCBvbiBjaGFyYWN0ZXJzIHNwZWNpZmljIHRvIGNvZGluZyBsYW5ndWFnZXMuIDE1IGRpZmZlcmVudCBsYW5ndWFnZXMgYXJlIGF2YWlsYWJsZSB0byBjaG9vc2UgZnJvbS5Ub2tlbm1hbnkgY2xhc3Nlc1Rva2Vuc1NwbGl0cyB0ZXh0IG9uIHRva2Vucy4gVGhlcmUgZXhpc3QgYSBmZXcgZGlmZmVyZW50IHdheXMgdG8gbWVhc3VyZSB0b2tlbnMuQ2hhcmFjdGVyQ2hhcmFjdGVyVGV4dFNwbGl0dGVyQSB1c2VyIGRlZmluZWQgY2hhcmFjdGVyU3BsaXRzIHRleHQgYmFzZWQgb24gYSB1c2VyIGRlZmluZWQgY2hhcmFjdGVyLiBPbmUgb2YgdGhlIHNpbXBsZXIgbWV0aG9kcy5TZW1hbnRpYyBDaHVua2VyIChFeHBlcmltZW50YWwpU2VtYW50aWNDaHVua2VyU2VudGVuY2VzRmlyc3Qgc3BsaXRzIG9uIHNlbnRlbmNlcy4gVGhlbiBjb21iaW5lcyBvbmVzIG5leHQgdG8gZWFjaCBvdGhlciBpZiB0aGV5IGFyZSBzZW1hbnRpY2FsbHkgc2ltaWxhciBlbm91Z2guIFRha2VuIGZyb20gR3JlZyBLYW1yYWR0SW50ZWdyYXRpb246IEFJMjEgU2VtYW50aWNBSTIxU2VtYW50aWNUZXh0U3BsaXR0ZXJcdTI3MDVJZGVudGlmaWVzIGRpc3RpbmN0IHRvcGljcyB0aGF0IGZvcm0gY29oZXJlbnQgcGllY2VzIG9mIHRleHQgYW5kIHNwbGl0cyBhbG9uZyB0aG9zZS5FdmFsdWF0aW9uXHUyMDBiRXZhbHVhdGlvbiBpcyB0aGUgcHJvY2VzcyBvZiBhc3Nlc3NpbmcgdGhlIHBlcmZvcm1hbmNlIGFuZCBlZmZlY3RpdmVuZXNzIG9mIHlvdXIgTExNLXBvd2VyZWQgYXBwbGljYXRpb25zLlxuSXQgaW52b2x2ZXMgdGVzdGluZyB0aGUgbW9kZWwncyByZXNwb25zZXMgYWdhaW5zdCBhIHNldCBvZiBwcmVkZWZpbmVkIGNyaXRlcmlhIG9yIGJlbmNobWFya3MgdG8gZW5zdXJlIGl0IG1lZXRzIHRoZSBkZXNpcmVkIHF1YWxpdHkgc3RhbmRhcmRzIGFuZCBmdWxmaWxscyB0aGUgaW50ZW5kZWQgcHVycG9zZS5cblRoaXMgcHJvY2VzcyBpcyB2aXRhbCBmb3IgYnVpbGRpbmcgcmVsaWFibGUgYXBwbGljYXRpb25zLkxhbmdTbWl0aCBoZWxwcyB3aXRoIHRoaXMgcHJvY2VzcyBpbiBhIGZldyB3YXlzOkl0IG1ha2VzIGl0IGVhc2llciB0byBjcmVhdGUgYW5kIGN1cmF0ZSBkYXRhc2V0cyB2aWEgaXRzIHRyYWNpbmcgYW5kIGFubm90YXRpb24gZmVhdHVyZXNJdCBwcm92aWRlcyBhbiBldmFsdWF0aW9uIGZyYW1ld29yayB0aGF0IGhlbHBzIHlvdSBkZWZpbmUgbWV0cmljcyBhbmQgcnVuIHlvdXIgYXBwIGFnYWluc3QgeW91ciBkYXRhc2V0SXQgYWxsb3dzIHlvdSB0byB0cmFjayByZXN1bHRzIG92ZXIgdGltZSBhbmQgYXV0b21hdGljYWxseSBydW4geW91ciBldmFsdWF0b3JzIG9uIGEgc2NoZWR1bGUgb3IgYXMgcGFydCBvZiBDSS9Db2RlVG8gbGVhcm4gbW9yZSwgY2hlY2sgb3V0IHRoaXMgTGFuZ1NtaXRoIGd1aWRlLlRyYWNpbmdcdTIwMGJBIHRyYWNlIGlzIGVzc2VudGlhbGx5IGEgc2VyaWVzIG9mIHN0ZXBzIHRoYXQgeW91ciBhcHBsaWNhdGlvbiB0YWtlcyB0byBnbyBmcm9tIGlucHV0IHRvIG91dHB1dC5cblRyYWNlcyBjb250YWluIGluZGl2aWR1YWwgc3RlcHMgY2FsbGVkIHJ1bnMuIFRoZXNlIGNhbiBiZSBpbmRpdmlkdWFsIGNhbGxzIGZyb20gYSBtb2RlbCwgcmV0cmlldmVyLFxudG9vbCwgb3Igc3ViLWNoYWlucy5cblRyYWNpbmcgZ2l2ZXMgeW91IG9ic2VydmFiaWxpdHkgaW5zaWRlIHlvdXIgY2hhaW5zIGFuZCBhZ2VudHMsIGFuZCBpcyB2aXRhbCBpbiBkaWFnbm9zaW5nIGlzc3Vlcy5Gb3IgYSBkZWVwZXIgZGl2ZSwgY2hlY2sgb3V0IHRoaXMgTGFuZ1NtaXRoIGNvbmNlcHR1YWwgZ3VpZGUuRWRpdCB0aGlzIHBhZ2VXYXMgdGhpcyBwYWdlIGhlbHBmdWw/WW91IGNhbiBhbHNvIGxlYXZlIGRldGFpbGVkIGZlZWRiYWNrIG9uIEdpdEh1Yi5QcmV2aW91c0hvdyB0byBjcmVhdGUgYW5kIHF1ZXJ5IHZlY3RvciBzdG9yZXNOZXh0TGFuZ0NoYWluIHYwLjNBcmNoaXRlY3R1cmVsYW5nY2hhaW4tY29yZWxhbmdjaGFpbmxhbmdjaGFpbi1jb21tdW5pdHlQYXJ0bmVyIHBhY2thZ2VzbGFuZ2dyYXBobGFuZ3NlcnZlTGFuZ1NtaXRoTGFuZ0NoYWluIEV4cHJlc3Npb24gTGFuZ3VhZ2UgKExDRUwpUnVubmFibGUgaW50ZXJmYWNlQ29tcG9uZW50c0NoYXQgbW9kZWxzTExNc01lc3NhZ2VzUHJvbXB0IHRlbXBsYXRlc0V4YW1wbGUgc2VsZWN0b3JzT3V0cHV0IHBhcnNlcnNDaGF0IGhpc3RvcnlEb2N1bWVudHNEb2N1bWVudCBsb2FkZXJzVGV4dCBzcGxpdHRlcnNFbWJlZGRpbmcgbW9kZWxzVmVjdG9yIHN0b3Jlc1JldHJpZXZlcnNLZXktdmFsdWUgc3RvcmVzVG9vbHNUb29sa2l0c0FnZW50c0NhbGxiYWNrc1RlY2huaXF1ZXNTdHJlYW1pbmdGdW5jdGlvbi90b29sIGNhbGxpbmdTdHJ1Y3R1cmVkIG91dHB1dEZldy1zaG90IHByb21wdGluZ1JldHJpZXZhbFRleHQgc3BsaXR0aW5nRXZhbHVhdGlvblRyYWNpbmdDb21tdW5pdHlUd2l0dGVyR2l0SHViT3JnYW5pemF0aW9uUHl0aG9uSlMvVFNNb3JlSG9tZXBhZ2VCbG9nWW91VHViZUNvcHlyaWdodCBcdTAwYTkgMjAyNCBMYW5nQ2hhaW4sIEluYy5cblxuXG5cbiBcbiAtLS0tLS0tIFxuIEFuc3dlciB0aGUgdXNlciAgcXVlc3Rpb24gYmFzZWQgb24gdGhlIFxuIFxuICAgICAgICBhYm92ZSBwcm92aWRlZCBkb2N1bWVudGF0aW9uLiBFbnN1cmUgYW55IGNvZGUgeW91IHByb3ZpZGUgY2FuIGJlIGV4ZWN1dGVkIHdpdGggYWxsIHJlcXVpcmVkIGltcG9ydHMgYW5kIHZhcmlhYmxlcyBcblxuICAgICAgICBkZWZpbmVkLiBTdHJ1Y3R1cmUgeW91ciBhbnN3ZXI6IDEpIGEgcHJlZml4IGRlc2NyaWJpbmcgdGhlIGNvZGUgc29sdXRpb24sIDIpIHRoZSBpbXBvcnRzLCAzKSB0aGUgZnVuY3Rpb25pbmcgY29kZSBibG9jay4gXG5cbiAgICAgICAgSW52b2tlIHRoZSBjb2RlIHRvb2wgdG8gc3RydWN0dXJlIHRoZSBvdXRwdXQgY29ycmVjdGx5LiA8L2luc3RydWN0aW9ucz4gXG4gSGVyZSBpcyB0aGUgdXNlciBxdWVzdGlvbjoiLCAidG9vbF9jaG9pY2UiOiB7InR5cGUiOiAidG9vbCIsICJuYW1lIjogImNvZGUifSwgInRvb2xzIjogW3sibmFtZSI6ICJjb2RlIiwgImRlc2NyaXB0aW9uIjogIlNjaGVtYSBmb3IgY29kZSBzb2x1dGlvbnMgdG8gcXVlc3Rpb25zIGFib3V0IExDRUwuIiwgImlucHV0X3NjaGVtYSI6IHsicHJvcGVydGllcyI6IHsicHJlZml4IjogeyJkZXNjcmlwdGlvbiI6ICJEZXNjcmlwdGlvbiBvZiB0aGUgcHJvYmxlbSBhbmQgYXBwcm9hY2giLCAidHlwZSI6ICJzdHJpbmcifSwgImltcG9ydHMiOiB7ImRlc2NyaXB0aW9uIjogIkNvZGUgYmxvY2sgaW1wb3J0IHN0YXRlbWVudHMiLCAidHlwZSI6ICJzdHJpbmcifSwgImNvZGUiOiB7ImRlc2NyaXB0aW9uIjogIkNvZGUgYmxvY2sgbm90IGluY2x1ZGluZyBpbXBvcnQgc3RhdGVtZW50cyIsICJ0eXBlIjogInN0cmluZyJ9fSwgInJlcXVpcmVkIjogWyJwcmVmaXgiLCAiaW1wb3J0cyIsICJjb2RlIl0sICJ0eXBlIjogIm9iamVjdCJ9fV19p2hlYWRlcnPeABCkaG9zdJGxYXBpLmFudGhyb3BpYy5jb22vYWNjZXB0LWVuY29kaW5nka1nemlwLCBkZWZsYXRlqmNvbm5lY3Rpb26RqmtlZXAtYWxpdmWmYWNjZXB0kbBhcHBsaWNhdGlvbi9qc29urGNvbnRlbnQtdHlwZZGwYXBwbGljYXRpb24vanNvbqp1c2VyLWFnZW50kbdBbnRocm9waWMvUHl0aG9uIDAuMzQuMrB4LXN0YWlubGVzcy1sYW5nkaZweXRob267eC1zdGFpbmxlc3MtcGFja2FnZS12ZXJzaW9ukaYwLjM0LjKueC1zdGFpbmxlc3Mtb3ORpU1hY09TsHgtc3RhaW5sZXNzLWFyY2iRpWFybTY0s3gtc3RhaW5sZXNzLXJ1bnRpbWWRp0NQeXRob267eC1zdGFpbmxlc3MtcnVudGltZS12ZXJzaW9ukaYzLjEyLjSuYW50aHJvcGljLWJldGGRsHRvb2xzLTIwMjQtMDQtMDSxeC1zdGFpbmxlc3MtYXN5bmORpWZhbHNlsWFudGhyb3BpYy12ZXJzaW9ukaoyMDIzLTA2LTAxrmNvbnRlbnQtbGVuZ3RokaU4NDE4MKhyZXNwb25zZYOmc3RhdHVzgqRjb2RlzMinbWVzc2FnZaJPS6doZWFkZXJzjKREYXRlkb1UaHUsIDE5IFNlcCAyMDI0IDIxOjQ4OjA3IEdNVKxDb250ZW50LVR5cGWRsGFwcGxpY2F0aW9uL2pzb26xVHJhbnNmZXItRW5jb2RpbmeRp2NodW5rZWSqQ29ubmVjdGlvbpGqa2VlcC1hbGl2ZapyZXF1ZXN0LWlkkbxyZXFfMDE4VFNheHF0Sk1WZmFlZG9KS1dwRjZUtXgtY2xvdWQtdHJhY2UtY29udGV4dJHZIGEzYTgzMDhkY2M0YThhMWJiZmU0ZjZmMWJmODIxMDQxo3ZpYZGqMS4xIGdvb2dsZa9DRi1DYWNoZS1TdGF0dXORp0RZTkFNSUOsWC1Sb2JvdHMtVGFnkaRub25lplNlcnZlcpGqY2xvdWRmbGFyZaZDRi1SQVmRtDhjNWNjNmZjMDlhNjdhZjEtU0pDsENvbnRlbnQtRW5jb2RpbmeRpGd6aXCkYm9keYGmc3RyaW5nxQH+H4sIAAAAAAAAA2xS70/bQAz9Vyx/WSsF1B9IQKR8YGzAGNMmxrSOZQpH4janXuxw5wOqqv/7lLSgIe3b2X7v+dnnNdoKU2zCohiNP0/ms4f3k6W9Oby0s+Vs5i+ml1NMUFctdSgKwSwIE/TiuoQJwQY1rJhgIxU5TLF0Jla0N92TNoa9yWhyMJpMjjHBUliJFdPf6xdBFXFFDJ1ib6OLYzEaj205O/1xe/707fDX7Yez8HixOr8+wQTZNB2vlKrncBsV0zW2nub2GVO8EbiP1lVg4PrkHMraWAbLcHX68SqBlUQoDUMMBFoT3D1ZrYvWqJLnO2hIa6lAGEzHVOhHAhUohYP6WOpO1yyIdR8uyNO7AIaBnk3TOko7U00rXgOmOPfSgDO86G0UpXja3zULsIXBaW30S9fmp9X6mtRbeiTfb6vqV95byHrc15b45NNAqWnJG42estEwZ//Cggy+S0OvKoNhzjn3XiHbDrP/78SDnAEAdlH2fyuDYbKFvbbJXl+7SkNqKqOmmFtyVZZjkOhLyjHn3oGnEF1nYbs2y4+ypEGON+QcNATmXqL2H1LboOJXIHM484Y7jSFuNn8SDCpt4ckE4bd30xcCPUTikjDl6FyCsT/TdL29kEJlSRwwHR9PDw4TlKhvskdHm81fAAAA//8DAH5v1FgIAwAA