interactions:
- request:
    body: '{"messages": [{"content": "Which sales agent made the most in sales in
      2009?", "role": "user"}, {"content": null, "role": "assistant", "tool_calls":
      [{"type": "function", "id": "tool_abcd123", "function": {"name": "sql_db_list_tables",
      "arguments": "{}"}}]}, {"content": "Album, Artist, Customer, Employee, Genre,
      Invoice, InvoiceLine, MediaType, Playlist, PlaylistTrack, Track", "role": "tool",
      "tool_call_id": "tool_abcd123"}], "model": "gpt-4o", "n": 1, "stream": false,
      "temperature": 0.0, "tools": [{"type": "function", "function": {"name": "sql_db_schema",
      "description": "Input to this tool is a comma-separated list of tables, output
      is the schema and sample rows for those tables. Be sure that the tables actually
      exist by calling sql_db_list_tables first! Example Input: table1, table2, table3",
      "parameters": {"properties": {"table_names": {"description": "A comma-separated
      list of the table names for which to return the schema. Example input: ''table1,
      table2, table3''", "type": "string"}}, "required": ["table_names"], "type":
      "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1054'
      content-type:
      - application/json
      cookie:
      - __cf_bm=lxxtCtuGzUU5WR3H93X85M5Wl9xFaqrnyvCWsRqQxcg-1726769588-1.0.1.1-e4iTBhwLXDbM.0DDrMvnbF04rB14QLQML_EJegrwmRT34sFMzUuzqolKoRHDyR1jvyR_5wF8C.bbTuYP3tzNaQ;
        _cfuvid=r4ChciaxqK3IxGo3fF1JLassrM0n5BtyVgHHdaLNf6Q-1726769588781-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//zFNdb9MwFH3Pr7Duc4Oa0KRr3mDrRscQYzCYRlHkODcf4NjBdka7qv8d
        xemSrBKIR/IQOffknHuude7OIQTKFCICrKCGVTV3Xy3Of7278YKzzfvHa/Xh6k1CT5k658vL5fYG
        Ji1DJt+RmSfWCyarmqMppehgppAabFW9uR/Ow0WwmFqgkinylpbXxp1J15/6M3cauN7LA7GQJUMN
        EfnqEELIzr5biyLFDUTEythKhVrTHCHqfyIElORtBajWpTZUGJgMIJPCoGhdi4bzEWCk5DGjnA+N
        u2c3Og/3RDmP6enZ7G71eMuWanPL9MfVBcP7L+HVqF8nva2toawRrL+fEd7Xo6NmhICgleXqnzxO
        k1izAit6JEAIUJU3FQrTmofdGgxNOMYtWa8hImtYVjWXW8Q17OEZeT/62k/+aW4VXJ5M2Wf6loXh
        3fWF4kmB968/Nf/j3Cvx0Kbp72P352+jQCjMGk35ISnO0Q0Bl3mtZKKPkgRZKUpdxAqptpONg+U8
        dbN9oHmWXaiVrGoTG/kDhbZrM+9UYVitAZ2dHEAjDeVD3feDP7HiFA0tbcD7nep8liIfFKa9TTst
        6K02WMVZKXJUtSrt9kBWxzRIPS/xMfPB2Tu/AQAA//8DABc8KFFGBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b8c539fda7ad3-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:13:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '928'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999942'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_41f352c97830a17a5d9e4116a0904642
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a SQL expert with a strong attention
      to detail.\n    \n    Given an input question, output a syntactically correct
      SQLite query to run, then look at the results of the query and return the answer.\n    \n    DO
      NOT call any tool besides SubmitFinalAnswer to submit the final answer.\n    \n    When
      generating the query:\n    \n    Output the SQL query that answers the input
      question without a tool call.\n    \n    Unless the user specifies a specific
      number of examples they wish to obtain, always limit your query to at most 5
      results.\n    You can order the results by a relevant column to return the most
      interesting examples in the database.\n    Never query for all the columns from
      a specific table, only ask for the relevant columns given the question.\n    \n    If
      you get an error while executing a query, rewrite the query and try again.\n    \n    If
      you get an empty result set, you should try to rewrite the query to get a non-empty
      result set. \n    NEVER make stuff up if you don''t have enough information
      to answer the query... just say you don''t have enough information.\n    \n    If
      you have enough information to answer the input question, simply invoke the
      appropriate tool to submit the final answer to the user.\n    \n    DO NOT make
      any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database.", "role":
      "system"}, {"content": "Which sales agent made the most in sales in 2009?",
      "role": "user"}, {"content": null, "role": "assistant", "tool_calls": [{"type":
      "function", "id": "tool_abcd123", "function": {"name": "sql_db_list_tables",
      "arguments": "{}"}}]}, {"content": "Album, Artist, Customer, Employee, Genre,
      Invoice, InvoiceLine, MediaType, Playlist, PlaylistTrack, Track", "role": "tool",
      "tool_call_id": "tool_abcd123"}, {"content": null, "role": "assistant", "tool_calls":
      [{"type": "function", "id": "call_aCD4XIzUcErxUcsSIGceZW6L", "function": {"name":
      "sql_db_schema", "arguments": "{\"table_names\": \"Employee\"}"}}, {"type":
      "function", "id": "call_r5J80cVaKc66XPGrlbheZBTu", "function": {"name": "sql_db_schema",
      "arguments": "{\"table_names\": \"Invoice\"}"}}]}, {"content": "\nCREATE TABLE
      \"Employee\" (\n\t\"EmployeeId\" INTEGER NOT NULL, \n\t\"LastName\" NVARCHAR(20)
      NOT NULL, \n\t\"FirstName\" NVARCHAR(20) NOT NULL, \n\t\"Title\" NVARCHAR(30),
      \n\t\"ReportsTo\" INTEGER, \n\t\"BirthDate\" DATETIME, \n\t\"HireDate\" DATETIME,
      \n\t\"Address\" NVARCHAR(70), \n\t\"City\" NVARCHAR(40), \n\t\"State\" NVARCHAR(40),
      \n\t\"Country\" NVARCHAR(40), \n\t\"PostalCode\" NVARCHAR(10), \n\t\"Phone\"
      NVARCHAR(24), \n\t\"Fax\" NVARCHAR(24), \n\t\"Email\" NVARCHAR(60), \n\tPRIMARY
      KEY (\"EmployeeId\"), \n\tFOREIGN KEY(\"ReportsTo\") REFERENCES \"Employee\"
      (\"EmployeeId\")\n)\n\n/*\n3 rows from Employee table:\nEmployeeId\tLastName\tFirstName\tTitle\tReportsTo\tBirthDate\tHireDate\tAddress\tCity\tState\tCountry\tPostalCode\tPhone\tFax\tEmail\n1\tAdams\tAndrew\tGeneral
      Manager\tNone\t1962-02-18 00:00:00\t2002-08-14 00:00:00\t11120 Jasper Ave NW\tEdmonton\tAB\tCanada\tT5K
      2N1\t+1 (780) 428-9482\t+1 (780) 428-3457\tandrew@chinookcorp.com\n2\tEdwards\tNancy\tSales
      Manager\t1\t1958-12-08 00:00:00\t2002-05-01 00:00:00\t825 8 Ave SW\tCalgary\tAB\tCanada\tT2P
      2T3\t+1 (403) 262-3443\t+1 (403) 262-3322\tnancy@chinookcorp.com\n3\tPeacock\tJane\tSales
      Support Agent\t2\t1973-08-29 00:00:00\t2002-04-01 00:00:00\t1111 6 Ave SW\tCalgary\tAB\tCanada\tT2P
      5M5\t+1 (403) 262-3443\t+1 (403) 262-6712\tjane@chinookcorp.com\n*/", "role":
      "tool", "tool_call_id": "call_aCD4XIzUcErxUcsSIGceZW6L"}, {"content": "\nCREATE
      TABLE \"Invoice\" (\n\t\"InvoiceId\" INTEGER NOT NULL, \n\t\"CustomerId\" INTEGER
      NOT NULL, \n\t\"InvoiceDate\" DATETIME NOT NULL, \n\t\"BillingAddress\" NVARCHAR(70),
      \n\t\"BillingCity\" NVARCHAR(40), \n\t\"BillingState\" NVARCHAR(40), \n\t\"BillingCountry\"
      NVARCHAR(40), \n\t\"BillingPostalCode\" NVARCHAR(10), \n\t\"Total\" NUMERIC(10,
      2) NOT NULL, \n\tPRIMARY KEY (\"InvoiceId\"), \n\tFOREIGN KEY(\"CustomerId\")
      REFERENCES \"Customer\" (\"CustomerId\")\n)\n\n/*\n3 rows from Invoice table:\nInvoiceId\tCustomerId\tInvoiceDate\tBillingAddress\tBillingCity\tBillingState\tBillingCountry\tBillingPostalCode\tTotal\n1\t2\t2009-01-01
      00:00:00\tTheodor-Heuss-Stra\u00dfe 34\tStuttgart\tNone\tGermany\t70174\t1.98\n2\t4\t2009-01-02
      00:00:00\tUllev\u00e5lsveien 14\tOslo\tNone\tNorway\t0171\t3.96\n3\t8\t2009-01-03
      00:00:00\tGr\u00e9trystraat 63\tBrussels\tNone\tBelgium\t1000\t5.94\n*/", "role":
      "tool", "tool_call_id": "call_r5J80cVaKc66XPGrlbheZBTu"}], "model": "gpt-4o",
      "n": 1, "stream": false, "temperature": 0.0, "tools": [{"type": "function",
      "function": {"name": "SubmitFinalAnswer", "description": "Submit the final answer
      to the user based on the query results.", "parameters": {"properties": {"final_answer":
      {"description": "The final answer to the user", "type": "string"}}, "required":
      ["final_answer"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4936'
      content-type:
      - application/json
      cookie:
      - __cf_bm=kbQyADG_WcNnXtLZTO10gYgTw_4nYX84baZP4VxbtAw-1726769590-1.0.1.1-BT5KShENE0cz1ZaXldZX83cPOO7Gd0eCOL7sUlFEL8fA.adH3DGd86ByPM60kYynipjMGag0BhpJM2nbUXViKg;
        _cfuvid=xSPDbtrRNPi1LipHUSjwucco_YQZVAmITpPxAzPLyDw-1726769590270-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFPbbtpAEH3nK0b70hdAjoNB8EYVpRelaqNGqtpSWeP12N6wF3d3DE0Q
        /17ZBHBQ6wdrNWfOmftuACBULhYgZIUsTa1Hy/nt9nP2/Pa3/HHzMZgQ3/Pj8+Z9M6H1cimGLcNl
        jyT5yBpLZ2pNrJw9wNITMrWqV7N4OpvOk3ncAcblpFtaWfNo4kZxFE9GUTK6un4hVk5JCmIBPwcA
        ALvu36Zoc/ojFhANjxZDIWBJYnFyAhDe6dYiMAQVGC2L4RmUzjLZNmvbaN0D2DmdStT6HPjw7Xrv
        c59Q6/RxHd7dz7/dOU70081cfvn+aX2X8EMv3kH6qe4SKhorT/3p4Sf74iIYgLBoOu7XJjOKb5VF
        vbRhS/5CBECgLxtDltsCxG4litY5xc57JRYr8VAR5MiYYSAIsiKDkDsKYB1D7d1G5QQIufIkGbSy
        a8iIt0QWAmoKgGUrD2hzUHbTTWkMDxV5KpynIXyA3Nk3DBVuCMi6pqxA2cJ5g219wA5yYvJGWYJt
        pWTVFwaDOQFXBMYFBnWMqizEUTQfr8RevKp5P/jX+1dvqJ6KJqB+mfaLfX9aH+3K2rssXGxD2zkV
        qtQThm4q/eUYHKN1cUTzav9E7Z2pOWW3JtvKXl1H1wdZcb6PM5wcQXaMuk9Lpv+jpTkxqm5NT5dx
        yFTZ8iwRnRLt6hXhKTCZtFC2JF971d2AKOo0iXFWTKIsysRgP/gLAAD//wMAMsrIfAwEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b8c5adbe37aac-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:13:12 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '553'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999110'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_59b64b017f3d005e67c0db1bf36f6a0e
    status:
      code: 200
      message: OK
version: 1
