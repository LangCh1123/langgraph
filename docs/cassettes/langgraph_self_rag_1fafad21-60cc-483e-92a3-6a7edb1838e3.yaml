interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - langsmith-py/0.1.123
    method: GET
    uri: https://api.smith.langchain.com/info
  response:
    body:
      string: '{"version":"0.7.29","license_expiration_time":null,"batch_ingest_config":{"scale_up_qsize_trigger":1000,"scale_up_nthreads_limit":16,"scale_down_nempty_trigger":4,"size_limit":100,"size_limit_bytes":20971520},"instance_flags":{"generate_ai_query_enabled":true,"org_creation_disabled":false,"show_ttl_ui":true,"trace_tier_duration_days":{"longlived":400,"shortlived":14},"search_enabled":true,"workspace_scope_org_invites":false,"s3_storage_enabled":true}}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '455'
      Via:
      - 1.1 google
      cache-control:
      - no-cache
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:10:24 GMT
      server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[8252, 5044]], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '89'
      content-type:
      - application/json
      cookie:
      - __cf_bm=AcqgQy88m6qQBZQpQoyFbakoHggOYId_8TqvXuUOik4-1726769424-1.0.1.1-BW3akkkq4bix5eAVx13c7696IK3B2.foZBdHKeRQ3eZs9ZuPpWWA1SClwsCGM9fHjggz95aVqyhgoRAXcNlaZg;
        _cfuvid=idRaWHwwVdP76BKl2Q1fBP_R.loYPhdAl6aZkRqLIfY-1726769424672-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RWS8+yTBLdz6948m6ZREShi2/HRS4C0iqKMCtQRC7KtRvo+fMTny+ZyWw66a5K
        JX1O1Tn173/8/Pxp0jK7j3/++vlTF8P455/ft0cyJn/++vnXP35+fn7+/Xv+X2b2TrPHo/jkv+m/
        weLzyOY/f/3w/335X9JfP3/y1zGisZPK6WSIxw7Q4/Khz25dBYN6OtmyIoY+deCp62zZtyZkj/Ob
        qhSP/VgXx0i2V2uNauZ4KunNGEz0vtkONZCkBkL0uQCSd3rmi1MfsSH3mhDcRpiwLsSBPjtYmSD2
        kslHW+vW005sAe7xcU2D8oN68jQJgfOtErB/vh76qQ5SDroz3OiJ9Kk72YdjhuqHc/IFy5jQxDav
        Sj7p3eLztp/rbDi8JiltDza5PfLInYvYA+mKM87fnJ6AFkNZNKjOGk814OxgFsVmgC0XGPiwryI0
        XVO/QDh6fLB+kvdBk1hVAtMzrX1+dX/p1at4LtCsTcuX5+ucLriaBLnmWOZLlRuky+7oNdJwFUoy
        Icr04Rff3dF5+gUMWOcHBzhUr5BOmNAPQY/i3JY/DxbQg2P36fzYXwZ4tapJTe866UO3hPwvXtRa
        H9fpwDq/AWvUSmyMfFiy4hR0SCwDjch3SUOTjW42smP6wvvd8g4Yfzxswf5od2y/S9MlfB8D7G+7
        PdX6lC+nywZ2UnVEmOoPO2LTMz+dkfqxZ/qwjCti+xoIwqkQEnlfbRmJ8YFITVoLPneaU30+ma8F
        YCuPWA2LmrF2l4VQ675JsTtF6aDqnIcm872ilmCq7rzemWeY+jfyi82dsmk/7HL4xv2FeEc2f4TI
        BhY8dgTlLSt71jwcWK2OVyLXbxowkxQ5PIvwiA9SfUwpH2uFrPAbCXvu45UucVApoMPZInJpDemi
        Xi42tIgesfmMlX6sGpKgb39RxTB2pVCX8xb42uV8Wu3soOXrxIb5LGjkYSG1J3Ji2Mgijk29dVr2
        w5a7eshezAP1VLR3mQglkfn77UZCSY3YIhUSQBnsBrzbfSJ3NotuC7W2e+Gz3oE+xNUJQKyiD1bD
        49DPhpDyKBTzCnt8kJXEa+0LzOzafett2VQ7twvqU6EjfAOlO8qv/IhWlVfjQ7I3S5q19x1wd3Em
        G6yIaDi4VobaYtvRw4bnXfr03gVoeHWjalGq+nJZXSPw33yCr87n2C99epZWSWZ11HDEFg0CYQt8
        9YG8o6bqWf9KCDIS50YP93BKWc7fPOjYc0X4+sMHrI9CE81mN1Dvvk762W7xIBGdMAK506bdfEZb
        6BtFwao1kXS4V82EnqEjUfwKBn00hICH0/y80j2vfHq6jeMQiXXhUXzRD/omcU4e9Ak1MMY3JWDv
        U5chtFwqHItogyhrrjbw8+2Cd7afu/NiXyeZXzLRXyb54C4qlnlwdGYROEUnNnttlsPrFBpkJept
        wKTxtEN8251JuBdGlyDTiOD9MkMiWMaRzeLaiZDd2CrhxIL1ZLBaDsUXa/EhCTf9WBT7CtUKAFaj
        R5hOm1Tj0TKRM/X37UtnH1nMQPv4GXY/g40Wr1VCeR/QxF8x1umTq3ghnLTXAev5wypZbkY5Kkpl
        RTbrwu8nvY4kkNGxotZpFtxx4q8cPMQI03Of8n3fcfYRarkVfd6Fd//LB4zbXiOrj38PKFUeDXLZ
        9oWvd2eXLkWzT8CUxsFfu26pL/ogeVJ7rSl2et/uKahHSYYoM8hgCXE6OYF8BAOxypeEfg4Wch53
        sDkVKfXetzNb+P4E8nWV93T/TLig1xZJAXidh2+9pv/qGUFGyBqqZt2KDf2g8HLBmdSXmLR2l9KU
        c6Sf2YbAzKNy8XJ3kMhOiLBxd6p0yLZNAYWHHnQvPbt0Uu17gWzdNrDhurq7zGe2FQPn2lA1Vhs2
        LdoVIFKDAO+OTZBOQyBWYNSe/fd9Od6uWwguAT+uxnfeL2+NaBATXaaKQ9J+eSjqFvXq9knj8L4t
        6UlKdsgSOIqVw3ODyPH22MK1OMzYCV8K4g94nNCRNGuqffuNHcKtBEx81z6oqNWJZYUCMKd7YPtO
        L/1sBcez/JnbHtuIz4MFBXkouxrF1NLLWZ/GjcuhuvE1atR2pw8PLy6Q5BQ2WTufqR8TEfloqbsX
        Nq8bO2U2p4O4ih0e+6YW6/T8GHJ0duMc315Wrs8y/ihQrLwLjmQ6oblVgwtoml9Q9+o5jP/0i4ZC
        +o6I/NXTGYb7GxH10WLlWIwBu2cRQHjJG3wDdS5ZWhFAbgtXnAiy0y9WHO1Q1XMrqm/fd7R8NmIH
        cIguOPFWdk/nR6JJVJ4iqvCDjIiclRlguHLk8Vzkku4OmJfSJByxMRZyyniXvuFN1i71BrcqZ263
        DFDaGvJrS+AD8kB9gTZm1mFT2X6C+TPPAljdHFNNehppo/VEQnFRnLG7tTYlSTNqw2k33ajJePyL
        T4Gi6ZDiQxnXPZWenC1ZJtJ8eMSjzkqeaEg6HxysBs8p+PpFBFReIuy24rlfWiuwIZdMjuLxrZQD
        6FoCLVbOOKvKcz+9+ksC3B3NRAiiOqDp2FcA0d3ASbrlyolLmzvq9oqLFe1ip7Om54rcWds3daqH
        V86DqdyRO7c3bDwv23Sob9IZ5cHq4U/5WkXsF88lJVfsdg9D7zgcCfD1B5/XEj9Y9lXqo2YRZGqg
        xnbXQfLK5WjXaViVXTEYbHRzYEneE3VW7U0fuDTPwEBzhXX90etT7uUXmeOdrS9k5QWRg5dM4opz
        Jn94IyPg71WzQO7oJ1+2btQdcKPzwO+6kAiT2fSDwUsh4szLlbTP4VZ2X77AyClPrSwsEbnobPn1
        EyKM1yGgoEYS2vU+9slXLxcvHSPx9UEv6ji+l7LntbdhvdoLWMthZv0NPgkIcqdTL2mOaH5vLV4+
        ulsdnzd3jGa9Pw4wnlLwWe6SoL2fTyHMZ16jRlALwbc/G9FEmxPd34uy/9sPf/VMz6nChKLZR+jT
        Qvvbf/2crcsB9cloUGs403Jmomui6RnX1JDXMyM4BR/d5b1Hsajvg+Vin3d/8yE8rU86zY3twIkX
        dkTqfbv8e780uV1Kla06lF0cDBq64jtHeC0hwXw/xyEYgPbYemcyasu9dEFKhwhhpv8J2N27EamI
        TYZtdBxZ7avQ/Po/diJnq883cYiQFqOS4tvMSkJ8c4FUza3feS3HavQG9NUDqjZeFCzn9yaEh3O3
        6J5kVG/HcXYgexsHanqffbo5DRsHoezuEaLEmk5GmnSw4uyJWlio+zGbDwmcmob44oYQd9y8nAaO
        +070J+3SpEt/zo7Sd3/DWbV20bQVBQm+/8daRm137bVZgfJRbPChubklaTUQoNo6V78hchywdhde
        gEbTncz802M8WDkB+XSJqccHXP9lwUbXNzHwYZozNm9tFv3OMzntNAsJJ73iwPO503cfuujL1rlI
        oNBEI1KQ9QFxaRgCZ3gTdbX/AAAA//9MmtvOgsyyrs/HVYz8p2ZEkE0X84ydqIDdAoqarKyAIooi
        CnRDdzLvfQa/mZV1qIAmdG3e96nKkoTujgcddJrd6NGJFMSVt38BdvwqzG2+GzEku+AE8MgiPI50
        V4k6XQ86QHph1mEmkl/8GVM8UaP276I1nu0OOalfE5e/dIcvdJQhs3MSZtNwEMPryGPka2rDttvA
        RNKjbDwI9fuXeaGTCl7PSIO4+X2xX3+WFsqQwbfTH1jUXtEOA4cLNFvFZA5usnaMNDzA5XUJpvcx
        E+I7W8cw9Rc6V28pGi182cO2pcBCeePnkhQpGVI+2wsJQvxyBv+iqfDia0y5t7kFPC/ea7hf5wcS
        LK8Nap+XdIDVAhhbxQ5LxFtLfGDlrSBTvXHGzltfkHQtgGxf+zQQh/G5Q/1B3eH5fBcLTo9Bpsf3
        u02Vj+haNvkFxA7nnmz00WnZemU2aLrOQqa1Qf+66i5M9ZpqD9Y7o/e2MGTyfqTfAkkO28bxE3p/
        cSOr42ze0k+gFSjnDqPlDKfOIEXKCX76Z+k7M2eU528dTfrw976q4TlYJXyXn8uUPyensYcthtvp
        5JJVNc/QOL6CFLyzd2POG1ftdP/jp3ewvgHhdPd64aLteuaTTTvvgiYSeAan66UhXv9etrxehXso
        Dysbz3pyc8b83gK8x7bFi7cQiI13NUVbuV3jPtTe1eSPdsDYUSXr1zxp2fNScHDfconl9h2KMU1j
        E7ANDrugVIghUl4xrE8vIKtcMdGYpAEG5+BYbHnbn3LRawMHNX8kdJA6Q/TYkr5w34UlO8rSW9BX
        pel6VNAHccoA50MuRIb4swSyccutMwYLrQBPZx3l2ufc/sXj8L2mPx5QiatnUahuPZBw35ft7/e0
        zqie9DnF+7j+rCjYlmdQUZ+OQgDoD/QItSsh630bMG1ZZvD1RouKT19XgtzBBvsdFsTsno7gU71B
        s1ox8MV/y+0woNEFJ/BktnrXD/E5fSOONL/I2SaoHjkvupMKEr9oVEuMQyWk3VJFhmsVxAN+cLhx
        oBK8rfeMYe0hKq76Fx0elT0n7uUo54NsdwNku1SmSOS++Hw/rglL4tbMPmwZ6mebyAYsvXZU24l7
        JXZLfAG7SR22PMly9Rf/N0NGZI1Jmo/6ab+A5dxPaE8XNOfd6g5wep8krHfKDQ20kDpoazWng2qF
        VR95nwGU5XHJiEz1Vqh7YcOpTsj/6mmfmNzYHOCJETlpwXCJ34+f3iTur/8n5ScFvbUGOtt8LGf8
        LLUvrFRvT/thLJC4v9znn7/H7Z624ohLaizYdnKxXt/yy+ns6wcjuePX49ijca9d659fpag86jl3
        z1aMSuZsGSbPKOntxdYE77nekYOvfQRdzM8dkvmjJt7J5c7veaR8DxYL7a2dCLbJYmDQCDxsx8jh
        sarWcL95OlsdvKdgXbx2kb7anJlbdRN+uoEO5zJaM+vQZcF4+NoAX7nfsKA86gm7X1YAh1nusUmv
        5szyKhPs2tXYZjjP2y61lR08yPpNTg+YBV3ptJ1O81xiy9UTBXTm7UO9C/Qj256VPvnjJ5P+ZVM+
        O0O0NHdIPTpzCvWRo8EK+eLnRxmmSx+JQf7sdMlK3vjOzY/olq1BkSnJOlYvTGr5+dI0gF7WBy8O
        SpN/zrH9ADJ7r6nQ6B1R+Xi3gQ9dTEUN31wYOf3+eABzRLNAvfZmBTLZyaZyq3nBIpayHTqcohcL
        o28QjB8rT2F+cgiWd7mdDK67NH/5RFi0cHJ5hccZrDzNJtvVUkajvLV11HDJwFfpazo8W8xOiLGD
        SqziexOj9IrXUAbrBfMMFydUW1Qq2i2OCts2nycS+bOeoSZ/L6jaDAwJ8h0aeBElpWr0fAXsXNg+
        ZG5wIxvIpkoiwgeS3uc11RfnU/DHV379++pnbiveEkgw6R/mJ4PbjtDta0gPzZYd6NdO+McGSZvq
        FdZu2Szv3q1ugvoqbszFm10yNCfLhdYxXXKpj1w8g405Myo/XuKu2hvJkAuUQU5iYLZyIeKp3d8N
        OAm6YOlo3AVttwrAGHVXYt34U3yF3tWoENl60quOYGw71Mbruo5IeniRYAQ5Co3dvvsyPwm5w/Xi
        0iDp1nlsZc+LttlezQ56XQ+Zd0gOgmr9O9aPSTGw0O1eSSWd/RLmpbIgGzo0OfPTrwsLbcPocMZn
        RJPjs4PI5UdGBFHaMTJeLoj+TMhqfp2JVsiq+9PvWI3MuJWskEvqUb10E19oBO1mfYzaWs8J9lRX
        LKb3DxAEPlVl55nz8LhyYRvxkXh6EjtNj74xTLyCOJ/eq76R8wSI75XN3MvxkI/tIffgA5LMitsr
        rPhcsUrwABbsL16Wi3zxiw+az9SkGubyAkOvDW8KbrfMlUO/BZTt9vKUzxX6/M73YNZPFuRnKf/0
        n2yBeJUfWRD3K9FLRwUjfr4FxJy7dzRcniWHS5Zl2NjE84qSMivRlG/Mom3ujEJ6DtDI7oqlt3NZ
        Deu17uv3HS4JuXl2rmzdeQN0rFLiYF2gka+vHLSgNpl/NivUT/0NXTfpA2spHQXX5uXDeO/MgqX3
        +puL2l09wG72DvGfbIkUy6j36NdvPX9d5/e7Pvmvy4wQN/huc2RzbgN5nAW1y6/ajoQGDTrfTz0t
        zzzMudm1GaRxUrDtxDOpHwYA12RHGb69ulYUfEeNt6OsSThrH21Xz7+gSfY5JL7QDw4/X8ovPF67
        DdkdX492aJLHAFTSl3ghJOaM28zRYfSajs6GWKq6QrIx4Jx/WFCiDk35Y8P7zW6EBIOaDO930oEB
        2QbLN3se0IWjepAuNjIzOzNKxPmwLcFdupQcLOQGQ/v+lvqnbEvKYxqKj7Hf7iF50D2z0sdSTNcf
        kKBSJ55po/ZX39DLnAH9nd8g6HP2409Tv6I5VR7dWv+wu04fP30xsHsB02fi32511f/8yGyJB0Z2
        tMhF8dm7UJa+YGt3fkx4u53PEDvxC1XWdyXoOpLEhjZLOdmujsT5lkhP4ZymQPC4LnPGza5AEX/q
        eBZrpTPuCs0GvQsOFOpPGHQRBDWa/D6ekVgNBAfs6YinTxYsA1Zx22zx7/zw8SPCVmxeUgfy9fH5
        63f9pBf1X36Orzlt//qvsiiPLODKKR8Nwmz0dqH/45njvZN16OYDpaVd36uBdF8frTbrkFnmPE6m
        +ckeisE5//H87seztrGe/vWXqV80yHbSFZb4K3OUc2GvYeK5tAArrcbnYpP+/DNbopQixc0e3Mil
        WKPz++uVjMZ1A2jbLe7EDonvDJe8W0NicJdZZq8Fjd3WOrQjhGxpHaNKBBoU8N3YAdlI5qoa1zxM
        9ZNTXpl9s+45T4+oBLGKKDE/d5yMHwAA+pH2VHa7MhnHl7OHUpElKh0NS0gB6mfIqq2QbC/6Q3Bb
        oQ8oj2lITKm7omE6Tzi8niXDp90s6OWtr8PoJAbB9OgGw6BkAyzPJmeblI6oT9IgREGhPokTnVPE
        zWbroV2Xt1jbEeY0p2aIwXLijIX4cEn6mKv85w+Jf2hlZ7zrOwnWuB2IE62MagirgoJgzZl5RmOi
        fmUdbTTpM6orxEFilWlPdAHnjUefjPmkTz1jf8ujSZ+dg9F8LGPE53VHwtLf5Pzqlhg9e+/JNkG0
        ccQRNx101euM5zLNqlE6zsO/edpt0n/DVNFRso8kKgeB4yhoV5VomjdRqVqPSXdv9ycQOvXZ1ki7
        9q8/9cnHo9qL263SbYICyh41ZHPLinx87W6+/uMl4b43K9ZepExnwfVOtRVkuZL5Z6yvIhDMnvJ7
        4hdroPlZIhY1pGRQtZkOyMku9HGzrKSf4hdZl5WJH7C+VEIZmyfAYZUyS9om7eBurcYQ7Humszm7
        /s3nYKuoMfvp+4UNoYQeRwP/+HP1EZrjoayxFiyQm33Vf58v+pv30Je1VHO+abQHfL+fE31LM3D6
        o+x5kOrfDRUZYs6Qw2Aip/Q4vhssEJM+i2FfJB2d+JlQzo+mgEk/Uem4SgOGzqVv7L83G6sf++OI
        QE59KHLrQgLyjZPxW5IMTfNBZu6kuuX7debBxJvpkLnLttuLA4dgqDhtjiOteBeaOxTdpBVZG2wn
        unK+3MPJDCjl7fztsNMiOsE+Hixyw6JHI4uCGiaeR2eTnuYBjDGoWUaJnwzPdsxre2do88uRkige
        0Pjs3Q5UTE5Yvb7KvK+t8PHze/SrkEpwe2mVaNLzuAxiGvS/+7FJNdzOVNGK52fsoLCWEdX0saoG
        KT1QrdqsSyw9FmrwbbdzQEr3DEhia2rFn7QO/55X6yhEzM2+HPTWGdhaukWIyj72oK2qDqtIMvPh
        kHslZFGRkUBt/UCw7fCEdP9oyGYweDDe6sg1Kk9LsTxulrkcl8oD+nJmEes1pxXPh+ak2ycxw3Pt
        8KjaiTfDUm/nxEu80Bmq+d43Zu0+Ilhxdi1X2oajNxc7ZhesCXh4JB6ynf2KJZPf/PEelHWlT45e
        7bWLTaOVxo8XuNU6yun0f9C+hsVvPpCwtbza6zv1bZGVI3/zcSGJpy7dqEdCe/vIB9so14brGBvc
        ik3U8hnZLdDUf9m2WoXJ0GbkiSb+yzwoczFuIxKjyS9gns9aNPE3+ptHYQnnm2qIb4WN1qaKfjy5
        VZq7o6PCLUy2Od9oIORlVMNKln2qrvd1MJZ4s4Cp/zK3DjwxlPrbBCfEGdWTwa0Wl9N5jTT/krPd
        h8jOsDfVAah1+zAHti7qxeAV6J/fVsB//+vf//4/vw2DurkWr2kxoC/G/j//b1XgP9k1+48kLf7W
        EGiXlcU///W/Gwj/fNqm/vT/t2+exbv757/+vfhbNfinb/rs9f99/a/pj/77X/8DAAD//wMAqy1/
        pt4gAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b884b2966239d-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:10:25 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - langchain
      openai-processing-ms:
      - '20'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999998'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_360c3bdeb63a44509c86fdefd937c9bd
    status:
      code: 200
      message: OK
- request:
    body: '{"post":[{"id":"ac3810ed-260b-408c-8907-6fc00d3c1c81","start_time":"2024-09-19T18:10:25.066079+00:00","end_time":null,"extra":{"metadata":{"ls_retriever_name":"vectorstore","ls_vector_store_provider":"Chroma","ls_embedding_provider":"OpenAIEmbeddings","revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"}},"error":null,"events":[{"name":"start","time":"2024-09-19T18:10:25.066079+00:00"}],"reference_example_id":null,"parent_run_id":null,"tags":["OpenAIEmbeddings","Chroma"],"trace_id":"ac3810ed-260b-408c-8907-6fc00d3c1c81","dotted_order":"20240919T181025066079Zac3810ed-260b-408c-8907-6fc00d3c1c81","outputs":null,"session_name":"default","name":"VectorStoreRetriever","inputs":{"query":"agent
      memory"},"run_type":"retriever"}]}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1019'
      Content-Type:
      - application/json
      User-Agent:
      - langsmith-py/0.1.123
    method: POST
    uri: https://api.smith.langchain.com/runs/batch
  response:
    body:
      string: '{"detail":"Monthly unique traces usage limit exceeded"}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '55'
      Via:
      - 1.1 google
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:10:25 GMT
      server:
      - uvicorn
    status:
      code: 429
      message: Too Many Requests
- request:
    body: '{"batch": [{"properties": {"batch_size": 1, "collection_uuid": "e6f1a924-4624-4170-9b87-fc506d6bd2e3",
      "query_amount": 1, "with_metadata_filter": 1, "with_document_filter": 1, "n_results":
      4, "include_metadatas": 1, "include_documents": 1, "include_uris": 0, "include_distances":
      1, "chroma_version": "0.5.7", "server_context": "None", "hosted": false, "chroma_api_impl":
      "chromadb.api.segment.SegmentAPI", "is_persistent": false, "chroma_server_ssl_enabled":
      false, "$lib": "posthog-python", "$lib_version": "3.6.6", "$geoip_disable":
      true}, "timestamp": "2024-09-19T18:10:25.424582+00:00", "context": {}, "distinct_id":
      "822f58bd-9f93-4e85-98a3-15e1fd596665", "event": "CollectionQueryEvent"}], "historical_migration":
      false, "sentAt": "2024-09-19T18:10:25.473869+00:00", "api_key": "phc_YeUxaojbKk5KPi8hNlx1bBKHzuZ4FDtl67kH1blv8Bh"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '835'
      Content-Type:
      - application/json
      User-Agent:
      - posthog-python/3.6.6
    method: POST
    uri: https://us.i.posthog.com/batch/
  response:
    body:
      string: '{"status":"Ok"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '15'
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:10:25 GMT
      access-control-allow-credentials:
      - 'true'
      server:
      - envoy
      vary:
      - origin, access-control-request-method, access-control-request-headers
      x-envoy-upstream-service-time:
      - '33'
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a grader assessing relevance of a retrieved
      document to a user question. \n \n        It does not need to be a stringent
      test. The goal is to filter out erroneous retrievals. \n\n        If the document
      contains keyword(s) or semantic meaning related to the user question, grade
      it as relevant. \n\n        Give a binary score ''yes'' or ''no'' score to indicate
      whether the document is relevant to the question.", "role": "system"}, {"content":
      "Retrieved document: \n\n Building agents with LLM (large language model) as
      its core controller is a cool concept. Several proof-of-concepts demos, such
      as AutoGPT, GPT-Engineer and BabyAGI, serve as inspiring examples. The potentiality
      of LLM extends beyond generating well-written copies, stories, essays and programs;
      it can be framed as a powerful general problem solver.\nAgent System Overview#\nIn
      a LLM-powered autonomous agent system, LLM functions as the agent\u2019s brain,
      complemented by several key components:\n\nPlanning\n\nSubgoal and decomposition:
      The agent breaks down large tasks into smaller, manageable subgoals, enabling
      efficient handling of complex tasks.\nReflection and refinement: The agent can
      do self-criticism and self-reflection over past actions, learn from mistakes
      and refine them for future steps, thereby improving the quality of final results.\n\n\nMemory
      \n\n User question: agent memory", "role": "user"}], "model": "gpt-3.5-turbo-0125",
      "n": 1, "parallel_tool_calls": false, "stream": false, "temperature": 0.0, "tool_choice":
      {"type": "function", "function": {"name": "GradeDocuments"}}, "tools": [{"type":
      "function", "function": {"name": "GradeDocuments", "description": "Binary score
      for relevance check on retrieved documents.", "parameters": {"properties": {"binary_score":
      {"description": "Documents are relevant to the question, ''yes'' or ''no''",
      "type": "string"}}, "required": ["binary_score"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1943'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFLbitswEH33V4h5TpZcHC/x29LS7YXSlrJtoVmMIk8cbWSNkMa0JuTf
        F1/W9oZWD0LM0TlndDTnSAjQOaQC1FGyKp2Z323f8TFJ3vuPv4rqx0mpWvLyy+f4T/7h6yeYNQza
        P6HiF9aNotIZZE22g5VHydioLm9XyW2yjVebFigpR9PQCsfz9c1mzpXf03yxXG165pG0wgCp+B0J
        IcS53ZsebY5/IRWL2UulxBBkgZAOl4QAT6apgAxBB5aWYTaCiiyjbdq2lTETgIlMpqQxo3G3zpPz
        GJQ0Jtu6p5Ne40+M/bf7h9P3ODzoWOk3E79OunZtQ4fKqiGgCT7U0yszIcDKsuXee5njW1JViZbD
        lYIQIH3RQ6mA8w722kpfZ0GRxx2kO6gx7OACr3iX6F/nx0kqHg9VkKaPq69fhvwNFc7TPlzFCQdt
        dThmHmVonwWByXXejU/rANWrrwPnqXScMZ3QNoLreN3pwThaI5r0GBNLMyVt/0fKcmSp2+8dJqpr
        UNtiVFgMXbbPhFAHxjI7aFugd14PsxNdomcAAAD//wMA659DGzoDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b884db9391742-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:10:25 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=y4F4olkRNNN5Fa64RNjWyGJTPx5ATs0dpbvQBF.K1IU-1726769425-1.0.1.1-dmqTHbW7wephpZYZ_uXwYyA.m11UYjY1ix8Mwyd_e4IU8bB6PMYD9hkpyROjCyyquPDi3cuX60ryQcILpwGPEg;
        path=/; expires=Thu, 19-Sep-24 18:40:25 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=paZ0W87QyD0AlI6lRGDY7FXS0piFpgULfMaXZMkEN88-1726769425994-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '200'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49999652'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_84b1d053b4ed420709eaf13247b67211
    status:
      code: 200
      message: OK
version: 1
