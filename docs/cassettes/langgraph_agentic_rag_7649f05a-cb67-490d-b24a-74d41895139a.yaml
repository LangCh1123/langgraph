interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - langsmith-py/0.1.123
    method: GET
    uri: https://api.smith.langchain.com/info
  response:
    body:
      string: '{"version":"0.7.29","license_expiration_time":null,"batch_ingest_config":{"scale_up_qsize_trigger":1000,"scale_up_nthreads_limit":16,"scale_down_nempty_trigger":4,"size_limit":100,"size_limit_bytes":20971520},"instance_flags":{"generate_ai_query_enabled":true,"org_creation_disabled":false,"show_ttl_ui":true,"trace_tier_duration_days":{"longlived":400,"shortlived":14},"search_enabled":true,"workspace_scope_org_invites":false,"s3_storage_enabled":true}}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '455'
      Via:
      - 1.1 google
      cache-control:
      - no-cache
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:11:33 GMT
      server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"post":[{"id":"de02fe3a-77a5-4790-9643-f94fb510d529","start_time":"2024-09-19T18:11:33.367880+00:00","end_time":null,"extra":{"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"},"metadata":{"revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"}},"error":null,"events":[{"name":"start","time":"2024-09-19T18:11:33.367880+00:00"}],"reference_example_id":null,"parent_run_id":null,"tags":[],"trace_id":"de02fe3a-77a5-4790-9643-f94fb510d529","dotted_order":"20240919T181133367880Zde02fe3a-77a5-4790-9643-f94fb510d529","outputs":null,"session_name":"default","name":"LangGraph","inputs":{"messages":[["user","What
      does Lilian Weng say about the types of agent memory?"]]},"run_type":"chain"},{"id":"05811dc1-5eed-4d3f-8942-e2210699006f","start_time":"2024-09-19T18:11:33.368906+00:00","end_time":"2024-09-19T18:11:33.369276+00:00","extra":{"metadata":{"langgraph_step":0,"langgraph_node":"__start__","langgraph_triggers":["__start__"],"langgraph_path":["__pregel_pull","__start__"],"langgraph_checkpoint_ns":"__start__:aa0d492f-9ee7-4f8d-7873-1d81358d68d9","revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langsmith","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1"}},"error":null,"events":[{"name":"start","time":"2024-09-19T18:11:33.368906+00:00"},{"name":"end","time":"2024-09-19T18:11:33.369276+00:00"}],"reference_example_id":null,"parent_run_id":"de02fe3a-77a5-4790-9643-f94fb510d529","tags":["graph:step:0","langsmith:hidden"],"trace_id":"de02fe3a-77a5-4790-9643-f94fb510d529","dotted_order":"20240919T181133367880Zde02fe3a-77a5-4790-9643-f94fb510d529.20240919T181133368906Z05811dc1-5eed-4d3f-8942-e2210699006f","outputs":{"messages":[["user","What
      does Lilian Weng say about the types of agent memory?"]]},"session_name":"default","name":"__start__","inputs":{"messages":[["user","What
      does Lilian Weng say about the types of agent memory?"]]},"run_type":"chain"},{"id":"0d7aa2df-6310-462b-a4d0-ac50c01cc26a","start_time":"2024-09-19T18:11:33.369491+00:00","end_time":null,"extra":{"metadata":{"langgraph_step":1,"langgraph_node":"agent","langgraph_triggers":["start:agent"],"langgraph_path":["__pregel_pull","agent"],"langgraph_checkpoint_ns":"agent:ae29f8de-6550-e47a-9db9-7adaf969a61b","revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"}},"error":null,"events":[{"name":"start","time":"2024-09-19T18:11:33.369491+00:00"}],"reference_example_id":null,"parent_run_id":"de02fe3a-77a5-4790-9643-f94fb510d529","tags":["graph:step:1"],"trace_id":"de02fe3a-77a5-4790-9643-f94fb510d529","dotted_order":"20240919T181133367880Zde02fe3a-77a5-4790-9643-f94fb510d529.20240919T181133369491Z0d7aa2df-6310-462b-a4d0-ac50c01cc26a","outputs":null,"session_name":"default","name":"agent","inputs":{"messages":[{"content":"What
      does Lilian Weng say about the types of agent memory?","additional_kwargs":{},"response_metadata":{},"type":"human","id":"e34fbee6-ba43-4be1-b18d-a7984d259ec8","example":false}]},"run_type":"chain"},{"id":"97895a61-e261-4619-b254-f10694a0a79a","start_time":"2024-09-19T18:11:33.383746+00:00","end_time":null,"extra":{"invocation_params":{"model":"gpt-4-turbo","model_name":"gpt-4-turbo","stream":true,"n":1,"temperature":0.0,"_type":"openai-chat","stop":null,"tools":[{"type":"function","function":{"name":"retrieve_blog_posts","description":"Search
      and return information about Lilian Weng blog posts on LLM agents, prompt engineering,
      and adversarial attacks on LLMs.","parameters":{"properties":{"query":{"description":"query
      to look up in retriever","type":"string"}},"required":["query"],"type":"object"}}}]},"options":{"stop":null},"batch_size":1,"metadata":{"langgraph_step":1,"langgraph_node":"agent","langgraph_triggers":["start:agent"],"langgraph_path":["__pregel_pull","agent"],"langgraph_checkpoint_ns":"agent:ae29f8de-6550-e47a-9db9-7adaf969a61b","checkpoint_ns":"agent:ae29f8de-6550-e47a-9db9-7adaf969a61b","ls_provider":"openai","ls_model_name":"gpt-4-turbo","ls_model_type":"chat","ls_temperature":0.0,"revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"}},"error":null,"serialized":{"lc":1,"type":"constructor","id":["langchain","chat_models","openai","ChatOpenAI"],"kwargs":{"model_name":"gpt-4-turbo","temperature":0.0,"openai_api_key":{"lc":1,"type":"secret","id":["OPENAI_API_KEY"]},"max_retries":2,"streaming":true,"n":1},"name":"ChatOpenAI"},"events":[{"name":"start","time":"2024-09-19T18:11:33.383746+00:00"}],"reference_example_id":null,"parent_run_id":"0d7aa2df-6310-462b-a4d0-ac50c01cc26a","tags":["seq:step:1"],"trace_id":"de02fe3a-77a5-4790-9643-f94fb510d529","dotted_order":"20240919T181133367880Zde02fe3a-77a5-4790-9643-f94fb510d529.20240919T181133369491Z0d7aa2df-6310-462b-a4d0-ac50c01cc26a.20240919T181133383746Z97895a61-e261-4619-b254-f10694a0a79a","outputs":null,"session_name":"default","name":"ChatOpenAI","inputs":{"messages":[[{"lc":1,"type":"constructor","id":["langchain","schema","messages","HumanMessage"],"kwargs":{"content":"What
      does Lilian Weng say about the types of agent memory?","type":"human","id":"e34fbee6-ba43-4be1-b18d-a7984d259ec8"}}]]},"run_type":"llm"}]}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6043'
      Content-Type:
      - application/json
      User-Agent:
      - langsmith-py/0.1.123
    method: POST
    uri: https://api.smith.langchain.com/runs/batch
  response:
    body:
      string: '{"detail":"Monthly unique traces usage limit exceeded"}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '55'
      Via:
      - 1.1 google
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:11:33 GMT
      server:
      - uvicorn
    status:
      code: 429
      message: Too Many Requests
- request:
    body: '{"messages": [{"content": "What does Lilian Weng say about the types of
      agent memory?", "role": "user"}], "model": "gpt-4-turbo", "n": 1, "stream":
      true, "temperature": 0.0, "tools": [{"type": "function", "function": {"name":
      "retrieve_blog_posts", "description": "Search and return information about Lilian
      Weng blog posts on LLM agents, prompt engineering, and adversarial attacks on
      LLMs.", "parameters": {"properties": {"query": {"description": "query to look
      up in retriever", "type": "string"}}, "required": ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '546'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: 'data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"role":"assistant","content":null,"tool_calls":[{"index":0,"id":"call_HxY5lAdc1ygVYIAf5nLjJ7iE","type":"function","function":{"name":"retrieve_blog_posts","arguments":""}}],"refusal":null},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"{\""}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"query"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"\":\""}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"types"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"
        of"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"
        agent"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"
        memory"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"\"}"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fun0D9TDf52pypbh6RDp0ZqKHnS","object":"chat.completion.chunk","created":1726769493,"model":"gpt-4-turbo-2024-04-09","system_fingerprint":"fp_22b855c4b7","choices":[{"index":0,"delta":{},"logprobs":null,"finish_reason":"tool_calls"}]}


        data: [DONE]


        '
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b89f66aa0cf41-SJC
      Connection:
      - keep-alive
      Content-Type:
      - text/event-stream; charset=utf-8
      Date:
      - Thu, 19 Sep 2024 18:11:34 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=lgUDKeTCBcG.MbXb.MSLbSGZZZerIQ6JzzFzFSIG6Bs-1726769494-1.0.1.1-Q0DKt3ZtmWMDJgVv5YWjKqDkd5OWnda0KYHjHweWhHzN1WXjimM9y3P3QH6vqUrDTCkNWigSTYzkEdYzjt7.Vg;
        path=/; expires=Thu, 19-Sep-24 18:41:34 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=thLRigTIoQqHZmrcrPHS8W1.OcukfQQLtf3BNRweLvI-1726769494240-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '620'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999968'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_dcf12534c35f3c612902090c0bf34548
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[9426, 315, 8479, 5044]], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '100'
      content-type:
      - application/json
      cookie:
      - __cf_bm=rHFZRnJbDgDE9ZTKDD.WqC35yi1iNEP8HM1fs0y8L3U-1726769491-1.0.1.1-yMq231edEO4YL3dDAWtCspocgXBpjwBd6CYgliXaj7B3eJj3eN65Npweq5OZfH3aFjP.vKlMhk3_pmlavtdiZg;
        _cfuvid=3fEvPtthL83R7XKxTDXzdxoA359yc0EBWKCxKJjnAUU-1726769491111-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RZyRKyzJLd91N88W/pCBGRSu6OSWSSQkDEXgkqAiIyVAF1X75Dv47u6I0LrBBM
        8uQZ8t//8efPP21W3fPxn3/9+edVDuM///m9druO13/+9ee//uPPnz9//v37/H8n7012v93Kd/E7
        /vuyfN/u8z//+sP/75X/O/T9bXFYU3t/9NjEroRHq217p8mZzj1x1Kclu62tUrx5nKNhOkyCfEfx
        gYZ7eR+x7HES5S1yznSP2iwbdpdBkfqLalJ7zpm+uIrKwzaHp8+VJz2bjNNVg6LVKHbT4KA3ix+W
        aP2Wbr5omrY7q1cxh8BVTfqwZM+dK31nIpVZT5zX4uwyz911sBOWgB4U/dIv5gkRcPr5RDGna9ma
        PIcabJQ/sG5dFbYJP1sDltKkRNgpud690amGc2xSrPA9yubx/AnQbN5H6p+xFY274OlBhK8PXzyE
        asT6vBCR45od1qJ5QMRx6xyMwt36Uuxs3dE3TU3mHib4CxelWWscFU2+forWj+iF9CTNugHsVfbx
        JyQH/ewLxxidbP9MDafe6OQgzhbSFlUjz3s8Z2TDXUSo/adFr/hY9dP9gBwUXzjVX6rpps/MlQYI
        7GammLu+++GUF7FMUHPCuyMoFRsmWsD3PPZDrshoQu939DpkH4wX+R0Rfq+KMvacl48OzqJ3npTm
        QCZ5jXH92LJx4B8Cah/BwT+dvUxf8pwzt7fyoNKHajf93OxWC7oppupzctGzZu9cDKCfNMHeXef0
        8Z5yHETa0cFZPNJqGa6qKdM8Usg67Fx92XBHCZ5ClVEF/JS10acM5erRvanWwTpi7MAGmU3vjCwf
        uWTTZxo6qe58m+74zuw3vHYxYV9qN0JpP7MJs20Bh0q9UOum2NW0lidflpdzjp1HMrtLsJYKOApR
        RB1j5/aLuFEDRD/XxBdc5Lm9cZF4sBU7xu5SKjq/muUB3UqsYu+yJPq4v+w8kHw6EDiJLGPaWXFg
        PKYfrFfxUx9ozZloaPY3eriJjstaSVjkqxOENLfzomKBwBR5Wl8PZHieon74TEML+vOY4vjw2GcD
        Ag+2T9N/YUd1UEboWcvhwJELqRP1HJHzILRSlk6cT7/vZx4rV4R5p6U+4ywjmyrR9hFKlgvee+mu
        n5N3bYHjlStq1NPBnQtX1tCu32Nyez5rNF8vjgTHl8eIWHsqmwf+wSP8GCX/c6kUVzgVSrdyUk+h
        ofGK0bQkuQD76r5gw6nP+uTYVQ6PXBMJXBwLCf1sxlB3no2Vnbhnm+5u+QhdaUX1KlZdgR4vDgwR
        3HwqbDqdhK1YA5c3e/9dH9N+YI7kIR07Z+pKyatqj8LggXU6yNQ4XRyXbfDeAO+00nxJCI7VxtE+
        HXqm5xfGO/0TMf0xOKDkWw6Hi5DqQyCDgIp9bOD7cg3Qkpc0BRtEnmrbvnc/twLXqK+HPUECa/VF
        GT0RaH5UKN7pdsSnj0xDzU5wqeY9NtXInzgF/DCi1LmverYc/LMFRjddqN/7Yj/cLrcJ7Xch+J+V
        VFRLt4wdcjO1x6pol+4y0LcGV9BvVGmbA2M3r+wga4DHVrLbZsOvX+fXqPvccp0YZdGoSNvtoJFt
        0mK0FFZVwi6vary3+Ws/9eyRAE8uGcaW7OnsmukSpFjZ0SNcO3duFDMHjhv31Hjtl2hcie8Svnjy
        a017u3PME3ObGtkLH/YD737xEMpKp8ZUmew+Wp6yJaDr1mJUK+euX7TOD9FJWpVkLl+XaHJWhSFv
        H48Eu7aYV9M1z1PgbwmixnHCEZPHpZDpbTxRs/KOjHUj8FK64Abrj77J6GNVtEht0Zq6auJVG+Ue
        THJ4qj7+en/o0PwSdAOm16JRg8JOnyxTXCS2qBPG3HXfDwezFiDojjlV/OsZ0XPF+K2Tuw756O3i
        9kCPAprSdqBOx47ZJ2rSCXkLqbBP7BZNp/LSwo/fvG//ssocUzRUTUuq1R1cprS5CeFqiqmJD8+e
        aQ0/SdL9tKEuDbp+FsJNCodHruOTKbx65qpaDB/80v157R/RBmunAZT+8aG6PaU9e0NiwjuUSvJ6
        oQn1q0Ks0dQGGyKeboM7rTZvDTQDq3g37m2dsUuSwJ4ZMg3ypY3mc+MJP3xTA1120XTObAWZBpiE
        BnYd0eWx77Yv6FfYlZJdv0hU7P7iFRfCw13WbiZKzu31wLdXtq+mxWw9mNpwQ/pclLLph7fv//f7
        2ggrgaSfBU37xqNmqmwRfQv1BIS7r3xAwTOihS4Nv/mD/Uof2fQRTgDuOjxjHM9zP0VrTwS58HKa
        FpIXDe0QdhDnQo9dO6BR+ykmBYJNuhDEnDGb3ZUago5KHbuFQ9lcGnWK+vX0xmd0FNy5UGciZ6Ie
        k430adlc6QcD4l55UuNolfpArtIET2MJsN0kqb5oLwhBf0YpNQ31U80DfxZA1/clPtwxzqZA1Au5
        LLd7f6srBluMdImhltkduz130qd45ENJMM3IX589pI/0xTXoEF18vItCMZpAOStwOYgNVtevjbuc
        b46C7v2g0aDFbU+u8dWEcIfuWNXtFs19cfSk45LYWFseIVv0uE1A+EQMGzbYbNpIc719Ls0RW+zz
        RMvu+Bngy89kGjZrRPvhVkoXHCNqffI86t9wNyTpcDxjX5FP2TyXGw7xJMvw/mAGOns3ogWfIa7x
        7hXp1ewoRSf7Wl9TNbHNnp+fmxwawVWxun1cGN27lwbeZTHScyydqnG8XRuUki7wl0Yv9Nm6PTxY
        X9ne37ourYasIFek8o3gS1eis3XhrjXQVqVHeDEV3eHN+gBdb+s3dva8nm2enB0jLqhCbH37nR3X
        EYFXJsdYL7qtuzj78C576W1DjUsXupP6GRrpW0+85yq32pjlnUdBE4f0uBVW+og0jodfPfX8ctTn
        Vlwv8LZ6gUybTOnby40N8q++el0jRI+0vCJl43TUSumzYpvV9Qr1zWT+MhdKtLHtJUDniQ/oxQge
        1aS8rjVsilCh33kVTUbmxqBVG49Mh6Xrl7ZOEzQ+NZ7a5W7SZ9vTQzC65eLXq26M/vZvq1nil786
        fb45zxY+vkN+78ddf94fHgK7nok844PO2onl4LhGh53GrXXCq0EN3v5y9tuDRCq2EpISRAV6vMPq
        lDH4FAWs8PymB91o2NLyBgfuZvZwpAprNAoWGLDK8pZqxO/Ysrt5CWi7PqGe9pyy0Yv2HJAeHKye
        H/dseq2dGhLxQvDhvsmr5Yd/3gszvxZTUf/q1QTe1Uoj7dEzXP4o1B440lnxhfXayRYWDiW8k81A
        BPV2r4jyjhrZxgbDzkjUapqfqxxsdH/4nJtpaM07WQr8gUzEpYHTz1vj7kCz411s7pTcFdrO7gD3
        V+Rz66HJ5vNTEsBdB2d/2Nu3vpX27/bHh9S6kFhfn5PAR4fHXSfCIknuaF6HAozM8bFXvz/60vc3
        BVEpF/DeWlvuZEYS+T0P1WMh6ruNdQpBvxGN6ub+xqZT63CSHO1Mn89fZUSNWC0hGhwFe5t3009h
        r9byklwINtfrLqJRe5mgerKWjMqVQ7QbeR5QMl3o6dm1jH1obgGqAVMb75ZovvuoRdP2fCaARFIx
        L+AAkTvP00h4mWzdNVqB6i0fky+u0EJztEDRPWuqXnU762izMmCylSeZ2LJDG27IfOmCE4St1qyr
        sesRD4cjt6WHsQmz6c2qQFaNUPFJ07jRJlCEKwTb7RtbtfdE/RsSA/rGymlQZLrLZ0lvolmYK59f
        RZa+cawrgORMJfYTsdI/2bmvkR7SEdsvpYgo+SQiPA5rjbx33iFaxtq4ws8PvfyL7pIslBaEtqst
        Vp9fP3fUcQo3dnz+/BRjjeiZEGN6IrKYvTKmnwoeWQ/+5qehK/TDJXVS1AYJof55s+5pK3ETcqST
        8q1nGLWiQ0KUuX3rrz/rqP+LX7d1VezjwWFfvtTQ2ur21CgEJ5utQ1kDd1y9CXfPlGq9IrX/00/4
        8fW3U46vOXzn0c//Zbyedx0c5rfhS9F2QkwyHw5s1lFH92ro9FMRvARwTUWlFuxiNLXDtUORIqyx
        Jsc7RJ+WR2Dy5B4rp++8fiE+lTE5vrCv4I59z7dQjcIN7z3asQ7aQoMi4TA25fTNpmC5epACb+IE
        1yYSWt7jIA6YgPeBWmTDdBB5EKlTUKfLB3354g+6+47ig26YqH2zKgTsDAE9DoPK6Fw0HLze3Yms
        VLup5rje3uGa5hY9XYQqWkStBxRc+6OPvvpszj2Fg9N+0jB+z9RlxofmiGD/Q4CNFZqN0CrR/VB6
        /nQrQsZ8Tm+hsU4K1pp+zGij4Tu6PYiLD1m80tktzDh4xmlGvQM3Vcw2LEDWCcukPYTPbDJ9+wp4
        C81ffuGv5Y7AZlnWGCuLGtFwOxLpMyS1z+2fijvdtbSU/s5n+6lVtM9bCb76/qs/hmw+fdwcPU/8
        RLXo+q6Yk+4bdLkVMzZuNc9YssYT/PxamMGmmjwvsWDrSipWXxsfCUa5bqG5ZAW17+zaM+uUi8ht
        yOBLZOTdcStdF4hvWxd7g2FHix3KBtRHlcP7A5GjuZmOC3z5AhuHxztaltjl0RI9Daxer36/Ucty
        Ad14brAWXfdVn5ZxCWH8sMnq4PP6oJUZty0SwPQQ2Xy2CIYbovF0Zti7DSmaamUMwUy3Ad7vvDEb
        3uMWkBpJLrWKaq+T3TnS4MdvjksafTlwXQ7oEvnY0m5+xqePSAF9jA80gBfn0r4MfVk+dvO3nmU/
        76NIBJP3c/r1G+60BFUpv+z7w5eMPEDruCsnJD8DwNax+kTjsi8G+SoaEb665wLNaEx5tJnjAueb
        t1kxDwUcbDTTod6QkWq29tsQDHw7YLOqNvpUCx9x+80TvnrK6j9yY/mwZ6ZMkLXt3FEZjCuyOCWi
        4XpuI/qS5RTi7JpQPfabbP7N/19/hctjQR2IcYd2rf+iXsGRjK69PP2bJ13xirj9wSYx+LmI6U6D
        Ei388eCB0jYrIrLPk83MXQZ4XphEf/Nq2nudCRu9eFDl1Ez6qF0uf/0ntZNjV43ZuaphrtsKe88T
        q4j8tgbJvhMOK/ZT6/mff+K9IKPGNVxlVD8VgtzXZE8V7eRk7LFqO4CKn6idKFq/UYfGlPguP9L9
        465E4w+Pn8fBp05qIES32s6C8PT8UMc9K2z90I+avI+3eyJ89e9ET3YOlzw/4vdXf0ynvE2AU7Z7
        bN+Z1C/NHIagc9cRW4Oyj/72B3fXcuwk/FNfHsalgC9/UqcKGKNxI90Bt6JJs69+X8Z7ZsJr1Hlf
        MnZuNb+5twHffvCDW7GwRbkFIXz9NLb4bd6z6ylsYHXVIn9T0TYi9sGdIGT0QTX5dUAzYo4FXz7E
        /n3ZoWlrmxwIl74lHLWyaPQOSQsfOTMIQqfU/azI4P34g+LdlVRf/8pvEz6v8U3PBpeYrniFXCcn
        MpqjWi3BjvoQ35BLsbchaNgE5+bnd4hkjSIit2OWw2YlOngfS6eevpvJgjhLE3oO1CJaJDp1csnk
        N/bLUxVNDy/joeeTkHo3o+8/mF8U+Zc37QcXZYOezDEEhyfyu9RAbDw3Hi/98PiI52O1HPnMg+88
        wRp5TTpdJ48B6AZUuq/bG+osa57kr3/75qvoW+/IkE3n/CJDHeiM+bwVg/Qudewbm9Rd5LdFoGjq
        K97nN+bSjX1afn7Df/JNXdHxFIRydhJj+kj1tzsfNmIrh8fmgW0lAUY3248Jy+7kY9/Tg4xll6FB
        j3GXUiN/aRFrJ3QHsagFmh/fbsT61i3QfaIjtaNEysY1Nw1wkyXV74R3wqZPx2KkGoHiv3B66tlc
        NIBs9fWhe7LWI3q+OwUCdkfUyXa2+/Fsr0Xyim/obXpqlXAuUbL1nq2Oj3xj9IujfqyfX8fqszGZ
        IG7sACR/HOhuvJNoeaNbDcXa2mGzSzt9qvayBNopemLznHqZQMrRgI1mODhKJyGb7rf3At3QX8n3
        fj3zxTDZ8qicv34VR/wRTqUMsfeiJ5dKaDHaL39mq5jwB8HrN/FyM0FeCQ3e6WgdLUcDS8g+dHes
        98LRRa7qJGgtgozNGb37xcVcjpYpfFFHem6rZat6Hez3bKZmVZ316ZvnApw6idr66pwtN7d0fnnt
        12+e9W54SCmyItbi3/yhxz5I4ZOFBlZPyzNb2i0XoHnhL1TPtZ4tq4dowoNUo4/Yc6m++dAd3s/8
        QCP7EmXT+eUlcDRKC9sX6RXNsMktGJXY9ieVe7mTtKgteHE5+ijYldGS+e2ETDPNcJRrPaLdXfHQ
        Og1Dir2mQcuRPEVwenYiAvmEOlXIIUWCo96oft4UaMLE8qC4bi90H6hKtN4l1xK+fIMtR3EZS9uD
        IJV6N5P17aL81beQ85mCrTF5uKNZvwUoX/NMjVVkuctTvUpI1DKFWqErVNNRqP2fviVr2Uv6+Vbg
        BqR3oeNzcV4zhi2soSevNPjwMsps3OzzBS3hvSacu7T6IgPp4EbjhFQCDC5zTfQ3L/r5j4qQNknR
        KeVLqpILx5j+ut1BWxUePoTZh7X2yTSh4iQZG2KauvMcuTHaxM0KK46N0USKwYR9csr9zZevJ6Ry
        CRyr5U4VdKoyIr8VAtus8Hz5fIWIbbZPE01n7+zzs/dALRrSGLb3q4C/es9luZW2wHf3I+HILLgL
        tIWCVo/LQrXvvmCt1miBsj7n/vbhPP7qNdjKH496x8B0xY0Zh3Lca0+C2DOspjSaUhjOX3+Q7C7Z
        OMVlJw32CahPbAsN6qdufvmRL+Ni27eOLjngupcCO0IwV4Pn3R14HDYa9S177NmqmGr5fm8Gsm4F
        1V2UWxrARbbg62c+EdOe7h35h8AgZXCRIlZqUYp0Lh3/7iu+9e9gfECE7fXugMZYeqTSTTFUrIab
        o7se7lsJxf5RwXshLdCSPmMFpP5xIGdGxP4371CyFrdUk7QgE9o6SGTnExTYfZRaxu7mNgHmC5hM
        m6Htv88XwjITiboeG779uOMhSMge616sV8JPny9RZeDdbTJd8ttnyJrSkEWOX+j9xaPct5+jvxgg
        uSxuljv0ZnHEvurL2fTrD24+yP4idXI/bVkLKA3MhiyBttZHWhyCrXW/WoRHWuHSVSE2IDAppo7B
        BJck908CX/3tb/JbpK9L6aNA0EU5QT231kk0Os3vfvSXPy2iVoE8vBSZ7qapQjNNbA62RbXxXWO1
        z/hKtD3469cfoxDN2kO7w1ePYF0VTkgo0adA/UU3SYtu+4jPrmsTEuc9+vxJq9ngrFpT/vIrVUOs
        I2rtilA26/rorzz87H/5HVzI60h14WWiTYY/AQiv5EM9sAU2ffNAuUuH4H/2P+F2HFB9Mxj+5nvu
        ZBTQobX3PlLNAEmngrM2/+7nCvBFxEphIvKq/z5/7yTVUJtJA8p6OOGdoNwzcq19gtoVJ375omEz
        5iUNVv45JNLc1tHyiH0H1KpMfnmCuxjlupMlZynx4asXWLNcF9S7aML+Flfotw9D7tl8UuN2oP10
        HAoR3qqgYduptGyWJ7eErz6nO/NRRHPArWNITr5PuDNuI+IcTxN89SDV0yn5nS8gWxcPfB8XvV/L
        jeLL5foC2H6Sjs2XeixgYwCP91Wqu/Mv/7Kmyvb540SzZcryHHj1g3yaDWo/DvdZkv2VivFvXzG8
        jFWIykm5UZMq54wKO3dCKesRmZyNlH33AQb89kdfvsv+GwAA//9Mml2PojAYhe/9FcZbY0BkoMwd
        DCJfDlV0FJPNpiii8iW0dArJ/PdNcbPZ2970pu97es55iL/sahWYjgUd78h8ZrubTOP9LQw7hzxY
        Z1dYLYXqA9q1mj6e6LJXQGi9JQFIDzeT2Scr0Pj8t4Mf72SgZMqQH/B9bfZcL1XkhSFccT87PxZL
        Ud345or67m0R41CZBuAaqHcYOAz1nV7GhTonW0ChC6YPnDiGqIFlhmCE9XKHr+udpA3vYWrfUpP3
        0yKwjo5Fz7Q3zCE/UWvvjgZ96lmhBwkoilSC8aJTGp4/nqcg31rwyP/HjWT5nVLL+5gu80jZYWFR
        6mpkzRUK+3z/6EBV6aoQJxX0aQnVvsTPM+juS0p1OxAa6rpKCOxcKOmn2NUNcw+rDKCTfKEbb4F2
        TNysW1AJQIbrTN6aLEJ1ACA6xC3gfph8PZAHrt40ohbXrwVK58Frv663ZRO35Km1wJAMv52fJDNm
        W3JDmoIiQvdWY6gYvt1FDR+uYavZX23/He1kpCSf6ZryPqxnzmddKB8GXg/9ZNOT2C3AZKACfkbj
        8a+BMCiqS5JzMIAkjMz+oQIzdEEzUZReGEKLUZpM3v8SCJNnUxVP8ptUWVLiyftYfqEGE1IRlP93
        POIX/Yz+AAAA//8DAPfK5hjeIAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b89fcfa06173e-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:11:34 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - langchain
      openai-processing-ms:
      - '23'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999996'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_01d75dbc36c72ba1a06e7112adafc3c6
    status:
      code: 200
      message: OK
- request:
    body: '{"batch": [{"properties": {"batch_size": 1, "collection_uuid": "30a82d1c-d35c-43dc-8356-27e98145a8e4",
      "query_amount": 1, "with_metadata_filter": 1, "with_document_filter": 1, "n_results":
      4, "include_metadatas": 1, "include_documents": 1, "include_uris": 0, "include_distances":
      1, "chroma_version": "0.5.7", "server_context": "None", "hosted": false, "chroma_api_impl":
      "chromadb.api.segment.SegmentAPI", "is_persistent": false, "chroma_server_ssl_enabled":
      false, "$lib": "posthog-python", "$lib_version": "3.6.6", "$geoip_disable":
      true}, "timestamp": "2024-09-19T18:11:34.780156+00:00", "context": {}, "distinct_id":
      "822f58bd-9f93-4e85-98a3-15e1fd596665", "event": "CollectionQueryEvent"}], "historical_migration":
      false, "sentAt": "2024-09-19T18:11:34.923900+00:00", "api_key": "phc_YeUxaojbKk5KPi8hNlx1bBKHzuZ4FDtl67kH1blv8Bh"}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '835'
      Content-Type:
      - application/json
      User-Agent:
      - posthog-python/3.6.6
    method: POST
    uri: https://us.i.posthog.com/batch/
  response:
    body:
      string: '{"status":"Ok"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '15'
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:11:35 GMT
      access-control-allow-credentials:
      - 'true'
      server:
      - envoy
      vary:
      - origin, access-control-request-method, access-control-request-headers
      x-envoy-upstream-service-time:
      - '38'
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are a grader assessing relevance of a retrieved
      document to a user question. \n \n            Here is the retrieved document:
      \n\n Table of Contents\n\n\n\nAgent System Overview\n\nComponent One: Planning\n\nTask
      Decomposition\n\nSelf-Reflection\n\n\nComponent Two: Memory\n\nTypes of Memory\n\nMaximum
      Inner Product Search (MIPS)\n\n\nComponent Three: Tool Use\n\nCase Studies\n\nScientific
      Discovery Agent\n\nGenerative Agents Simulation\n\nProof-of-Concept Examples\n\n\nChallenges\n\nCitation\n\nReferences\n\nPlanning\n\nSubgoal
      and decomposition: The agent breaks down large tasks into smaller, manageable
      subgoals, enabling efficient handling of complex tasks.\nReflection and refinement:
      The agent can do self-criticism and self-reflection over past actions, learn
      from mistakes and refine them for future steps, thereby improving the quality
      of final results.\n\n\nMemory\n\nMemory\n\nShort-term memory: I would consider
      all the in-context learning (See Prompt Engineering) as utilizing short-term
      memory of the model to learn.\nLong-term memory: This provides the agent with
      the capability to retain and recall (infinite) information over extended periods,
      often by leveraging an external vector store and fast retrieval.\n\n\nTool use\n\nThe
      design of generative agents combines LLM with memory, planning and reflection
      mechanisms to enable agents to behave conditioned on past experience, as well
      as to interact with other agents. \n\n\n            Here is the user question:
      What does Lilian Weng say about the types of agent memory? \n\n            If
      the document contains keyword(s) or semantic meaning related to the user question,
      grade it as relevant. \n\n            Give a binary score ''yes'' or ''no''
      score to indicate whether the document is relevant to the question.", "role":
      "user"}], "model": "gpt-4-0125-preview", "n": 1, "parallel_tool_calls": false,
      "stream": true, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "grade"}}, "tools": [{"type": "function", "function": {"name": "grade",
      "description": "Binary score for relevance check.", "parameters": {"properties":
      {"binary_score": {"description": "Relevance score ''yes'' or ''no''", "type":
      "string"}}, "required": ["binary_score"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2292'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: 'data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"role":"assistant","content":null,"tool_calls":[{"index":0,"id":"call_3SvIqNQPWaPsBoePatZqL6xX","type":"function","function":{"name":"grade","arguments":""}}],"refusal":null},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"{\""}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"binary"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"_score"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"\":\""}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"yes"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{"tool_calls":[{"index":0,"function":{"arguments":"\"}"}}]},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9FupnriisYB33vw9al8ifUcwpKEg","object":"chat.completion.chunk","created":1726769495,"model":"gpt-4-0125-preview","system_fingerprint":null,"choices":[{"index":0,"delta":{},"logprobs":null,"finish_reason":"stop"}]}


        data: [DONE]


        '
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b89ff597267e2-SJC
      Connection:
      - keep-alive
      Content-Type:
      - text/event-stream; charset=utf-8
      Date:
      - Thu, 19 Sep 2024 18:11:35 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=FdRdIvTLH3XImoN770CvP_Qb3HHiV1JBonySI4sBsZc-1726769495-1.0.1.1-jWsGW.0HA40cV3.se5qDb..CN3Z2Pg6PZenKsiDtOYv16DxcWKxqALvo9BdkHZ3rOgR4rWgWy7Xpps6yt0k5BQ;
        path=/; expires=Thu, 19-Sep-24 18:41:35 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=gRcsK6VKYzogF6omeaGdhOmO7BvEZPQhcOwbNSsNiz0-1726769495388-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '289'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1999551'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 13ms
      x-request-id:
      - req_6f0bd07423b80f5be26afd94ff5f8a12
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - langsmith-py/0.1.123
    method: GET
    uri: https://api.smith.langchain.com/info
  response:
    body:
      string: '{"version":"0.7.29","license_expiration_time":null,"batch_ingest_config":{"scale_up_qsize_trigger":1000,"scale_up_nthreads_limit":16,"scale_down_nempty_trigger":4,"size_limit":100,"size_limit_bytes":20971520},"instance_flags":{"generate_ai_query_enabled":true,"org_creation_disabled":false,"show_ttl_ui":true,"trace_tier_duration_days":{"longlived":400,"shortlived":14},"search_enabled":true,"workspace_scope_org_invites":false,"s3_storage_enabled":true}}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '455'
      Via:
      - 1.1 google
      cache-control:
      - no-cache
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:11:35 GMT
      server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - langsmith-py/0.1.123
    method: GET
    uri: https://api.smith.langchain.com/commits/rlm/rag-prompt/latest
  response:
    body:
      string: '{"commit_hash":"50442af133e61576e74536c6556cefe1fac147cad032f4377b60c436e6cdcb6e","manifest":{"id":["langchain","prompts","chat","ChatPromptTemplate"],"lc":1,"type":"constructor","kwargs":{"messages":[{"id":["langchain","prompts","chat","HumanMessagePromptTemplate"],"lc":1,"type":"constructor","kwargs":{"prompt":{"id":["langchain","prompts","prompt","PromptTemplate"],"lc":1,"type":"constructor","kwargs":{"template":"You
        are an assistant for question-answering tasks. Use the following pieces of
        retrieved context to answer the question. If you don''t know the answer, just
        say that you don''t know. Use three sentences maximum and keep the answer
        concise.\nQuestion: {question} \nContext: {context} \nAnswer:","input_variables":["question","context"],"template_format":"f-string"}}}}],"input_variables":["question","context"]}},"examples":[]}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '844'
      Via:
      - 1.1 google
      cache-control:
      - no-cache
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:11:35 GMT
      server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are an assistant for question-answering
      tasks. Use the following pieces of retrieved context to answer the question.
      If you don''t know the answer, just say that you don''t know. Use three sentences
      maximum and keep the answer concise.\nQuestion: What does Lilian Weng say about
      the types of agent memory? \nContext: Table of Contents\n\n\n\nAgent System
      Overview\n\nComponent One: Planning\n\nTask Decomposition\n\nSelf-Reflection\n\n\nComponent
      Two: Memory\n\nTypes of Memory\n\nMaximum Inner Product Search (MIPS)\n\n\nComponent
      Three: Tool Use\n\nCase Studies\n\nScientific Discovery Agent\n\nGenerative
      Agents Simulation\n\nProof-of-Concept Examples\n\n\nChallenges\n\nCitation\n\nReferences\n\nPlanning\n\nSubgoal
      and decomposition: The agent breaks down large tasks into smaller, manageable
      subgoals, enabling efficient handling of complex tasks.\nReflection and refinement:
      The agent can do self-criticism and self-reflection over past actions, learn
      from mistakes and refine them for future steps, thereby improving the quality
      of final results.\n\n\nMemory\n\nMemory\n\nShort-term memory: I would consider
      all the in-context learning (See Prompt Engineering) as utilizing short-term
      memory of the model to learn.\nLong-term memory: This provides the agent with
      the capability to retain and recall (infinite) information over extended periods,
      often by leveraging an external vector store and fast retrieval.\n\n\nTool use\n\nThe
      design of generative agents combines LLM with memory, planning and reflection
      mechanisms to enable agents to behave conditioned on past experience, as well
      as to interact with other agents. \nAnswer:", "role": "user"}], "model": "gpt-3.5-turbo",
      "n": 1, "stream": true, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1757'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.46.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.46.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: 'data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"role":"assistant","content":"","refusal":null},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"L"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"ilian"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        W"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"eng"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        discusses"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        short"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"-term"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        and"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        long"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"-term"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        memory"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        in"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        agent"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        systems"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":","},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        with"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        short"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"-term"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        memory"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        being"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        used"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        for"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        in"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"-context"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        learning"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        and"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        long"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"-term"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        memory"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        allowing"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        for"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        retention"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        and"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        recall"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        of"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        information"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        over"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        extended"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"
        periods"},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{"content":"."},"logprobs":null,"finish_reason":null}]}


        data: {"id":"chatcmpl-A9Fuqg3q0hzOG3zNgk00xmAP5mLx7","object":"chat.completion.chunk","created":1726769496,"model":"gpt-3.5-turbo-0125","system_fingerprint":null,"choices":[{"index":0,"delta":{},"logprobs":null,"finish_reason":"stop"}]}


        data: [DONE]


        '
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b8a060ca29846-SJC
      Connection:
      - keep-alive
      Content-Type:
      - text/event-stream; charset=utf-8
      Date:
      - Thu, 19 Sep 2024 18:11:36 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=nfMu7JzTSUXVMTaW7ntmYiKm4HB.Q3vvKJJBEJLHVDE-1726769496-1.0.1.1-nO3wndi4ZZGiNZUAgtlUDZjcX6hubg8lBrTFyutRJGnXj9Luz1kekXbw503uJFdPYnbItvI6BB77iVgNuN7Hyw;
        path=/; expires=Thu, 19-Sep-24 18:41:36 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=pv2iQJI2IR5_QODRLX5K0uJD4Z7mSRSIhc0hVZLmebY-1726769496207-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - langchain
      openai-processing-ms:
      - '108'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49999586'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_d8db865d1b0f7746a9b80ceff94c28d5
    status:
      code: 200
      message: OK
version: 1
