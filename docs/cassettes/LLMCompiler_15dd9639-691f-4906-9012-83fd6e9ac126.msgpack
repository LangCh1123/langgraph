gqd2ZXJzaW9uAaxpbnRlcmFjdGlvbnOSgqdyZXF1ZXN0hKZtZXRob2SjR0VUo3VyadkkaHR0cHM6Ly9hcGkuc21pdGgubGFuZ2NoYWluLmNvbS9pbmZvpGJvZHnAp2hlYWRlcnOEqlVzZXItQWdlbnSRtGxhbmdzbWl0aC1weS8wLjEuMTIzr0FjY2VwdC1FbmNvZGluZ5GtZ3ppcCwgZGVmbGF0ZaZBY2NlcHSRsGFwcGxpY2F0aW9uL2pzb26qQ29ubmVjdGlvbpGqa2VlcC1hbGl2ZahyZXNwb25zZYOmc3RhdHVzgqRjb2RlzMinbWVzc2FnZaJPS6doZWFkZXJzja5Db250ZW50LUxlbmd0aJGjNDU1p0FsdC1TdmOR2S5oMz0iOjQ0MyI7IG1hPTI1OTIwMDAsaDMtMjk9Ijo0NDMiOyBtYT0yNTkyMDAwrGNvbnRlbnQtdHlwZZGwYXBwbGljYXRpb24vanNvbrtBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW6RoNkgQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHORpHRydWWjVmlhkaoxLjEgZ29vZ2xlpnNlcnZlcpGndXZpY29ybr1BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc5GhKqRkYXRlkb1UaHUsIDE5IFNlcCAyMDI0IDIxOjQ4OjA4IEdNVLxBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzkaEqrWNhY2hlLWNvbnRyb2yRqG5vLWNhY2hlvEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnORoSq2QWNjZXNzLUNvbnRyb2wtTWF4LUFnZZGjNjAwpGJvZHmBpnN0cmluZ9oBx3sidmVyc2lvbiI6IjAuNy4zMCIsImxpY2Vuc2VfZXhwaXJhdGlvbl90aW1lIjpudWxsLCJiYXRjaF9pbmdlc3RfY29uZmlnIjp7InNjYWxlX3VwX3FzaXplX3RyaWdnZXIiOjEwMDAsInNjYWxlX3VwX250aHJlYWRzX2xpbWl0IjoxNiwic2NhbGVfZG93bl9uZW1wdHlfdHJpZ2dlciI6NCwic2l6ZV9saW1pdCI6MTAwLCJzaXplX2xpbWl0X2J5dGVzIjoyMDk3MTUyMH0sImluc3RhbmNlX2ZsYWdzIjp7ImdlbmVyYXRlX2FpX3F1ZXJ5X2VuYWJsZWQiOnRydWUsIm9yZ19jcmVhdGlvbl9kaXNhYmxlZCI6ZmFsc2UsInNob3dfdHRsX3VpIjp0cnVlLCJ0cmFjZV90aWVyX2R1cmF0aW9uX2RheXMiOnsibG9uZ2xpdmVkIjo0MDAsInNob3J0bGl2ZWQiOjE0fSwic2VhcmNoX2VuYWJsZWQiOnRydWUsIndvcmtzcGFjZV9zY29wZV9vcmdfaW52aXRlcyI6ZmFsc2UsInMzX3N0b3JhZ2VfZW5hYmxlZCI6dHJ1ZX19gqdyZXF1ZXN0hKZtZXRob2SjR0VUo3Vyadk/aHR0cHM6Ly9hcGkuc21pdGgubGFuZ2NoYWluLmNvbS9jb21taXRzL3dmaC9sbG0tY29tcGlsZXIvbGF0ZXN0pGJvZHnAp2hlYWRlcnOEqlVzZXItQWdlbnSRtGxhbmdzbWl0aC1weS8wLjEuMTIzr0FjY2VwdC1FbmNvZGluZ5GtZ3ppcCwgZGVmbGF0ZaZBY2NlcHSRsGFwcGxpY2F0aW9uL2pzb26qQ29ubmVjdGlvbpGqa2VlcC1hbGl2ZahyZXNwb25zZYOmc3RhdHVzgqRjb2RlzMinbWVzc2FnZaJPS6doZWFkZXJzja5Db250ZW50LUxlbmd0aJGkMjc4MKdBbHQtU3ZjkdkuaDM9Ijo0NDMiOyBtYT0yNTkyMDAwLGgzLTI5PSI6NDQzIjsgbWE9MjU5MjAwMKxjb250ZW50LXR5cGWRsGFwcGxpY2F0aW9uL2pzb267QWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2lukaDZIEFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzkaR0cnVlo1ZpYZGqMS4xIGdvb2dsZaZzZXJ2ZXKRp3V2aWNvcm69QWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnORoSqkZGF0ZZG9VGh1LCAxOSBTZXAgMjAyNCAyMTo0ODowOCBHTVS8QWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc5GhKq1jYWNoZS1jb250cm9skahuby1jYWNoZbxBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzkaEqtkFjY2Vzcy1Db250cm9sLU1heC1BZ2WRozYwMKRib2R5gaZzdHJpbmfaCtx7ImNvbW1pdF9oYXNoIjoiMjQ2MjNkODI0NzVjMWNlZWRiNDc5MzUyY2M0MDFkMzg1Yjc3MTRhMjM4ZDhiMGI4MTg5ZWQ0Yzc4ODQ4NjVmYiIsIm1hbmlmZXN0Ijp7ImlkIjpbImxhbmdjaGFpbiIsInByb21wdHMiLCJjaGF0IiwiQ2hhdFByb21wdFRlbXBsYXRlIl0sImxjIjoxLCJ0eXBlIjoiY29uc3RydWN0b3IiLCJrd2FyZ3MiOnsibWVzc2FnZXMiOlt7ImlkIjpbImxhbmdjaGFpbiIsInByb21wdHMiLCJjaGF0IiwiU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlIl0sImxjIjoxLCJ0eXBlIjoiY29uc3RydWN0b3IiLCJrd2FyZ3MiOnsicHJvbXB0Ijp7ImlkIjpbImxhbmdjaGFpbiIsInByb21wdHMiLCJwcm9tcHQiLCJQcm9tcHRUZW1wbGF0ZSJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7InRlbXBsYXRlIjoiR2l2ZW4gYSB1c2VyIHF1ZXJ5LCBjcmVhdGUgYSBwbGFuIHRvIHNvbHZlIGl0IHdpdGggdGhlIHV0bW9zdCBwYXJhbGxlbGl6YWJpbGl0eS4gRWFjaCBwbGFuIHNob3VsZCBjb21wcmlzZSBhbiBhY3Rpb24gZnJvbSB0aGUgZm9sbG93aW5nIHtudW1fdG9vbHN9IHR5cGVzOlxue3Rvb2xfZGVzY3JpcHRpb25zfVxue251bV90b29sc30uIGpvaW4oKTogQ29sbGVjdHMgYW5kIGNvbWJpbmVzIHJlc3VsdHMgZnJvbSBwcmlvciBhY3Rpb25zLlxuXG4gLSBBbiBMTE0gYWdlbnQgaXMgY2FsbGVkIHVwb24gaW52b2tpbmcgam9pbigpIHRvIGVpdGhlciBmaW5hbGl6ZSB0aGUgdXNlciBxdWVyeSBvciB3YWl0IHVudGlsIHRoZSBwbGFucyBhcmUgZXhlY3V0ZWQuXG4gLSBqb2luIHNob3VsZCBhbHdheXMgYmUgdGhlIGxhc3QgYWN0aW9uIGluIHRoZSBwbGFuLCBhbmQgd2lsbCBiZSBjYWxsZWQgaW4gdHdvIHNjZW5hcmlvczpcbiAgIChhKSBpZiB0aGUgYW5zd2VyIGNhbiBiZSBkZXRlcm1pbmVkIGJ5IGdhdGhlcmluZyB0aGUgb3V0cHV0cyBmcm9tIHRhc2tzIHRvIGdlbmVyYXRlIHRoZSBmaW5hbCByZXNwb25zZS5cbiAgIChiKSBpZiB0aGUgYW5zd2VyIGNhbm5vdCBiZSBkZXRlcm1pbmVkIGluIHRoZSBwbGFubmluZyBwaGFzZSBiZWZvcmUgeW91IGV4ZWN1dGUgdGhlIHBsYW5zLiBHdWlkZWxpbmVzOlxuIC0gRWFjaCBhY3Rpb24gZGVzY3JpYmVkIGFib3ZlIGNvbnRhaW5zIGlucHV0L291dHB1dCB0eXBlcyBhbmQgZGVzY3JpcHRpb24uXG4gICAgLSBZb3UgbXVzdCBzdHJpY3RseSBhZGhlcmUgdG8gdGhlIGlucHV0IGFuZCBvdXRwdXQgdHlwZXMgZm9yIGVhY2ggYWN0aW9uLlxuICAgIC0gVGhlIGFjdGlvbiBkZXNjcmlwdGlvbnMgY29udGFpbiB0aGUgZ3VpZGVsaW5lcy4gWW91IE1VU1Qgc3RyaWN0bHkgZm9sbG93IHRob3NlIGd1aWRlbGluZXMgd2hlbiB5b3UgdXNlIHRoZSBhY3Rpb25zLlxuIC0gRWFjaCBhY3Rpb24gaW4gdGhlIHBsYW4gc2hvdWxkIHN0cmljdGx5IGJlIG9uZSBvZiB0aGUgYWJvdmUgdHlwZXMuIEZvbGxvdyB0aGUgUHl0aG9uIGNvbnZlbnRpb25zIGZvciBlYWNoIGFjdGlvbi5cbiAtIEVhY2ggYWN0aW9uIE1VU1QgaGF2ZSBhIHVuaXF1ZSBJRCwgd2hpY2ggaXMgc3RyaWN0bHkgaW5jcmVhc2luZy5cbiAtIElucHV0cyBmb3IgYWN0aW9ucyBjYW4gZWl0aGVyIGJlIGNvbnN0YW50cyBvciBvdXRwdXRzIGZyb20gcHJlY2VkaW5nIGFjdGlvbnMuIEluIHRoZSBsYXR0ZXIgY2FzZSwgdXNlIHRoZSBmb3JtYXQgJGlkIHRvIGRlbm90ZSB0aGUgSUQgb2YgdGhlIHByZXZpb3VzIGFjdGlvbiB3aG9zZSBvdXRwdXQgd2lsbCBiZSB0aGUgaW5wdXQuXG4gLSBBbHdheXMgY2FsbCBqb2luIGFzIHRoZSBsYXN0IGFjdGlvbiBpbiB0aGUgcGxhbi4gU2F5ICc8RU5EX09GX1BMQU4+JyBhZnRlciB5b3UgY2FsbCBqb2luXG4gLSBFbnN1cmUgdGhlIHBsYW4gbWF4aW1pemVzIHBhcmFsbGVsaXphYmlsaXR5LlxuIC0gT25seSB1c2UgdGhlIHByb3ZpZGVkIGFjdGlvbiB0eXBlcy4gSWYgYSBxdWVyeSBjYW5ub3QgYmUgYWRkcmVzc2VkIHVzaW5nIHRoZXNlLCBpbnZva2UgdGhlIGpvaW4gYWN0aW9uIGZvciB0aGUgbmV4dCBzdGVwcy5cbiAtIE5ldmVyIGludHJvZHVjZSBuZXcgYWN0aW9ucyBvdGhlciB0aGFuIHRoZSBvbmVzIHByb3ZpZGVkLiIsImlucHV0X3ZhcmlhYmxlcyI6WyJudW1fdG9vbHMiLCJ0b29sX2Rlc2NyaXB0aW9ucyJdLCJ0ZW1wbGF0ZV9mb3JtYXQiOiJmLXN0cmluZyJ9fX19LHsiaWQiOlsibGFuZ2NoYWluX2NvcmUiLCJwcm9tcHRzIiwiY2hhdCIsIk1lc3NhZ2VzUGxhY2Vob2xkZXIiXSwibGMiOjEsInR5cGUiOiJjb25zdHJ1Y3RvciIsImt3YXJncyI6eyJ2YXJpYWJsZV9uYW1lIjoibWVzc2FnZXMifX0seyJpZCI6WyJsYW5nY2hhaW4iLCJwcm9tcHRzIiwiY2hhdCIsIlN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7InByb21wdCI6eyJpZCI6WyJsYW5nY2hhaW4iLCJwcm9tcHRzIiwicHJvbXB0IiwiUHJvbXB0VGVtcGxhdGUiXSwibGMiOjEsInR5cGUiOiJjb25zdHJ1Y3RvciIsImt3YXJncyI6eyJ0ZW1wbGF0ZSI6IlJlbWVtYmVyLCBPTkxZIHJlc3BvbmQgd2l0aCB0aGUgdGFzayBsaXN0IGluIHRoZSBjb3JyZWN0IGZvcm1hdCEgRS5nLjpcbmlkeC4gdG9vbChhcmdfbmFtZT1hcmdzKSIsImlucHV0X3ZhcmlhYmxlcyI6W10sInRlbXBsYXRlX2Zvcm1hdCI6ImYtc3RyaW5nIn19fX1dLCJpbnB1dF92YXJpYWJsZXMiOlsibnVtX3Rvb2xzIiwidG9vbF9kZXNjcmlwdGlvbnMiLCJtZXNzYWdlcyJdLCJwYXJ0aWFsX3ZhcmlhYmxlcyI6e319fSwiZXhhbXBsZXMiOltdfQ==