gqd2ZXJzaW9uAaxpbnRlcmFjdGlvbnOSgqdyZXF1ZXN0hKZtZXRob2SjR0VUo3VyadkkaHR0cHM6Ly9hcGkuc21pdGgubGFuZ2NoYWluLmNvbS9pbmZvpGJvZHnAp2hlYWRlcnOEqlVzZXItQWdlbnSRtGxhbmdzbWl0aC1weS8wLjEuMTIzr0FjY2VwdC1FbmNvZGluZ5GtZ3ppcCwgZGVmbGF0ZaZBY2NlcHSRsGFwcGxpY2F0aW9uL2pzb26qQ29ubmVjdGlvbpGqa2VlcC1hbGl2ZahyZXNwb25zZYOmc3RhdHVzgqRjb2RlzMinbWVzc2FnZaJPS6doZWFkZXJzja5Db250ZW50LUxlbmd0aJGjNDU1p0FsdC1TdmOR2S5oMz0iOjQ0MyI7IG1hPTI1OTIwMDAsaDMtMjk9Ijo0NDMiOyBtYT0yNTkyMDAwrGNvbnRlbnQtdHlwZZGwYXBwbGljYXRpb24vanNvbrtBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW6RoNkgQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHORpHRydWWjVmlhkaoxLjEgZ29vZ2xlpnNlcnZlcpGndXZpY29ybr1BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyc5GhKqRkYXRlkb1UaHUsIDE5IFNlcCAyMDI0IDIxOjQ4OjE4IEdNVLxBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzkaEqrWNhY2hlLWNvbnRyb2yRqG5vLWNhY2hlvEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnORoSq2QWNjZXNzLUNvbnRyb2wtTWF4LUFnZZGjNjAwpGJvZHmBpnN0cmluZ9oBx3sidmVyc2lvbiI6IjAuNy4zMCIsImxpY2Vuc2VfZXhwaXJhdGlvbl90aW1lIjpudWxsLCJiYXRjaF9pbmdlc3RfY29uZmlnIjp7InNjYWxlX3VwX3FzaXplX3RyaWdnZXIiOjEwMDAsInNjYWxlX3VwX250aHJlYWRzX2xpbWl0IjoxNiwic2NhbGVfZG93bl9uZW1wdHlfdHJpZ2dlciI6NCwic2l6ZV9saW1pdCI6MTAwLCJzaXplX2xpbWl0X2J5dGVzIjoyMDk3MTUyMH0sImluc3RhbmNlX2ZsYWdzIjp7ImdlbmVyYXRlX2FpX3F1ZXJ5X2VuYWJsZWQiOnRydWUsIm9yZ19jcmVhdGlvbl9kaXNhYmxlZCI6ZmFsc2UsInNob3dfdHRsX3VpIjp0cnVlLCJ0cmFjZV90aWVyX2R1cmF0aW9uX2RheXMiOnsibG9uZ2xpdmVkIjo0MDAsInNob3J0bGl2ZWQiOjE0fSwic2VhcmNoX2VuYWJsZWQiOnRydWUsIndvcmtzcGFjZV9zY29wZV9vcmdfaW52aXRlcyI6ZmFsc2UsInMzX3N0b3JhZ2VfZW5hYmxlZCI6dHJ1ZX19gqdyZXF1ZXN0hKZtZXRob2SjR0VUo3VyadlGaHR0cHM6Ly9hcGkuc21pdGgubGFuZ2NoYWluLmNvbS9jb21taXRzL3dmaC9sbG0tY29tcGlsZXItam9pbmVyL2xhdGVzdKRib2R5wKdoZWFkZXJzhKpVc2VyLUFnZW50kbRsYW5nc21pdGgtcHkvMC4xLjEyM69BY2NlcHQtRW5jb2RpbmeRrWd6aXAsIGRlZmxhdGWmQWNjZXB0kbBhcHBsaWNhdGlvbi9qc29uqkNvbm5lY3Rpb26RqmtlZXAtYWxpdmWocmVzcG9uc2WDpnN0YXR1c4KkY29kZczIp21lc3NhZ2WiT0unaGVhZGVyc42uQ29udGVudC1MZW5ndGiRpDIyNDCnQWx0LVN2Y5HZLmgzPSI6NDQzIjsgbWE9MjU5MjAwMCxoMy0yOT0iOjQ0MyI7IG1hPTI1OTIwMDCsY29udGVudC10eXBlkbBhcHBsaWNhdGlvbi9qc29uu0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbpGg2SBBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc5GkdHJ1ZaNWaWGRqjEuMSBnb29nbGWmc2VydmVykad1dmljb3JuvUFjY2Vzcy1Db250cm9sLUV4cG9zZS1IZWFkZXJzkaEqpGRhdGWRvVRodSwgMTkgU2VwIDIwMjQgMjE6NDg6MTkgR01UvEFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHORoSqtY2FjaGUtY29udHJvbJGobm8tY2FjaGW8QWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc5GhKrZBY2Nlc3MtQ29udHJvbC1NYXgtQWdlkaM2MDCkYm9keYGmc3RyaW5n2gjAeyJjb21taXRfaGFzaCI6ImRlMGIwZmNhYjNlOTBlMTBlZTdmMjVjNjdmOTE4OTBiMTU1YjQ4YjI1ZWQzYmIxZGY2NzFjNzg4MTE4NWM3YjIiLCJtYW5pZmVzdCI6eyJpZCI6WyJsYW5nY2hhaW4iLCJwcm9tcHRzIiwiY2hhdCIsIkNoYXRQcm9tcHRUZW1wbGF0ZSJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7Im1lc3NhZ2VzIjpbeyJpZCI6WyJsYW5nY2hhaW4iLCJwcm9tcHRzIiwiY2hhdCIsIlN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7InByb21wdCI6eyJpZCI6WyJsYW5nY2hhaW4iLCJwcm9tcHRzIiwicHJvbXB0IiwiUHJvbXB0VGVtcGxhdGUiXSwibGMiOjEsInR5cGUiOiJjb25zdHJ1Y3RvciIsImt3YXJncyI6eyJ0ZW1wbGF0ZSI6IlNvbHZlIGEgcXVlc3Rpb24gYW5zd2VyaW5nIHRhc2suIEhlcmUgYXJlIHNvbWUgZ3VpZGVsaW5lczpcbiAtIEluIHRoZSBBc3Npc3RhbnQgU2NyYXRjaHBhZCwgeW91IHdpbGwgYmUgZ2l2ZW4gcmVzdWx0cyBvZiBhIHBsYW4geW91IGhhdmUgZXhlY3V0ZWQgdG8gYW5zd2VyIHRoZSB1c2VyJ3MgcXVlc3Rpb24uXG4gLSBUaG91Z2h0IG5lZWRzIHRvIHJlYXNvbiBhYm91dCB0aGUgcXVlc3Rpb24gYmFzZWQgb24gdGhlIE9ic2VydmF0aW9ucyBpbiAxLTIgc2VudGVuY2VzLlxuIC0gSWdub3JlIGlycmVsZXZhbnQgYWN0aW9uIHJlc3VsdHMuXG4gLSBJZiB0aGUgcmVxdWlyZWQgaW5mb3JtYXRpb24gaXMgcHJlc2VudCwgZ2l2ZSBhIGNvbmNpc2UgYnV0IGNvbXBsZXRlIGFuZCBoZWxwZnVsIGFuc3dlciB0byB0aGUgdXNlcidzIHF1ZXN0aW9uLlxuIC0gSWYgeW91IGFyZSB1bmFibGUgdG8gZ2l2ZSBhIHNhdGlzZmFjdG9yeSBmaW5pc2hpbmcgYW5zd2VyLCByZXBsYW4gdG8gZ2V0IHRoZSByZXF1aXJlZCBpbmZvcm1hdGlvbi4gUmVzcG9uZCBpbiB0aGUgZm9sbG93aW5nIGZvcm1hdDpcblxuVGhvdWdodDogPHJlYXNvbiBhYm91dCB0aGUgdGFzayByZXN1bHRzIGFuZCB3aGV0aGVyIHlvdSBoYXZlIHN1ZmZpY2llbnQgaW5mb3JtYXRpb24gdG8gYW5zd2VyIHRoZSBxdWVzdGlvbj5cbkFjdGlvbjogPGFjdGlvbiB0byB0YWtlPlxuQXZhaWxhYmxlIGFjdGlvbnM6XG4gKDEpIEZpbmlzaCh0aGUgZmluYWwgYW5zd2VyIHRvIHJldHVybiB0byB0aGUgdXNlcik6IHJldHVybnMgdGhlIGFuc3dlciBhbmQgZmluaXNoZXMgdGhlIHRhc2suXG4gKDIpIFJlcGxhbih0aGUgcmVhc29uaW5nIGFuZCBvdGhlciBpbmZvcm1hdGlvbiB0aGF0IHdpbGwgaGVscCB5b3UgcGxhbiBhZ2Fpbi4gQ2FuIGJlIGEgbGluZSBvZiBhbnkgbGVuZ3RoKTogaW5zdHJ1Y3RzIHdoeSB3ZSBtdXN0IHJlcGxhbiIsImlucHV0X3ZhcmlhYmxlcyI6W10sInRlbXBsYXRlX2Zvcm1hdCI6ImYtc3RyaW5nIn19fX0seyJpZCI6WyJsYW5nY2hhaW5fY29yZSIsInByb21wdHMiLCJjaGF0IiwiTWVzc2FnZXNQbGFjZWhvbGRlciJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7InZhcmlhYmxlX25hbWUiOiJtZXNzYWdlcyJ9fSx7ImlkIjpbImxhbmdjaGFpbiIsInByb21wdHMiLCJjaGF0IiwiU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlIl0sImxjIjoxLCJ0eXBlIjoiY29uc3RydWN0b3IiLCJrd2FyZ3MiOnsicHJvbXB0Ijp7ImlkIjpbImxhbmdjaGFpbiIsInByb21wdHMiLCJwcm9tcHQiLCJQcm9tcHRUZW1wbGF0ZSJdLCJsYyI6MSwidHlwZSI6ImNvbnN0cnVjdG9yIiwia3dhcmdzIjp7InRlbXBsYXRlIjoiVXNpbmcgdGhlIGFib3ZlIHByZXZpb3VzIGFjdGlvbnMsIGRlY2lkZSB3aGV0aGVyIHRvIHJlcGxhbiBvciBmaW5pc2guIElmIGFsbCB0aGUgcmVxdWlyZWQgaW5mb3JtYXRpb24gaXMgcHJlc2VudC4gWW91IG1heSBmaW5pc2guIElmIHlvdSBoYXZlIG1hZGUgbWFueSBhdHRlbXB0cyB0byBmaW5kIHRoZSBpbmZvcm1hdGlvbiB3aXRob3V0IHN1Y2Nlc3MsIGFkbWl0IHNvIGFuZCByZXNwb25kIHdpdGggd2hhdGV2ZXIgaW5mb3JtYXRpb24geW91IGhhdmUgZ2F0aGVyZWQgc28gdGhlIHVzZXIgY2FuIHdvcmsgd2VsbCB3aXRoIHlvdS5cblxue2V4YW1wbGVzfSIsImlucHV0X3ZhcmlhYmxlcyI6WyJleGFtcGxlcyJdLCJ0ZW1wbGF0ZV9mb3JtYXQiOiJmLXN0cmluZyJ9fX19XSwiaW5wdXRfdmFyaWFibGVzIjpbIm1lc3NhZ2VzIiwiZXhhbXBsZXMiXSwicGFydGlhbF92YXJpYWJsZXMiOnt9fX0sImV4YW1wbGVzIjpbXX0=