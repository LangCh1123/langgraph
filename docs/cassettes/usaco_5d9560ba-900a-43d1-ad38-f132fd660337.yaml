interactions:
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - langsmith-py/0.1.123
    method: GET
    uri: https://api.smith.langchain.com/info
  response:
    body:
      string: '{"version":"0.7.29","license_expiration_time":null,"batch_ingest_config":{"scale_up_qsize_trigger":1000,"scale_up_nthreads_limit":16,"scale_down_nempty_trigger":4,"size_limit":100,"size_limit_bytes":20971520},"instance_flags":{"generate_ai_query_enabled":true,"org_creation_disabled":false,"show_ttl_ui":true,"trace_tier_duration_days":{"longlived":400,"shortlived":14},"search_enabled":true,"workspace_scope_org_invites":false,"s3_storage_enabled":true}}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '455'
      Via:
      - 1.1 google
      cache-control:
      - no-cache
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:13:46 GMT
      server:
      - uvicorn
    status:
      code: 200
      message: OK
- request:
    body: '{"post":[{"id":"c8a57317-b060-4472-a781-406602ff983b","start_time":"2024-09-19T18:13:46.916826+00:00","end_time":null,"extra":{"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"},"metadata":{"revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"}},"error":null,"events":[{"name":"start","time":"2024-09-19T18:13:46.916826+00:00"}],"reference_example_id":null,"parent_run_id":null,"tags":[],"trace_id":"c8a57317-b060-4472-a781-406602ff983b","dotted_order":"20240919T181346916826Zc8a57317-b060-4472-a781-406602ff983b","outputs":null,"session_name":"default","name":"RunnableSequence","inputs":{"messages":[["user","How
      do I get a perfectly random sample from an infinite stream"]]},"run_type":"chain"},{"id":"642013db-a402-4449-af05-ff03b6942840","start_time":"2024-09-19T18:13:46.918023+00:00","end_time":"2024-09-19T18:13:46.918356+00:00","extra":{"metadata":{"lc_hub_owner":"wfh","lc_hub_repo":"usaco-draft-solver","lc_hub_commit_hash":"ebe137168aa80680242963bc1f8a8eeaaf0d16b75e5c1faceab9898a4f1150d3","revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langsmith","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1"}},"error":null,"serialized":{"lc":1,"type":"constructor","id":["langchain","prompts","chat","ChatPromptTemplate"],"kwargs":{"input_variables":["messages"],"partial_variables":{"examples":""},"metadata":{"lc_hub_owner":"wfh","lc_hub_repo":"usaco-draft-solver","lc_hub_commit_hash":"ebe137168aa80680242963bc1f8a8eeaaf0d16b75e5c1faceab9898a4f1150d3"},"messages":[{"lc":1,"type":"constructor","id":["langchain","prompts","chat","SystemMessagePromptTemplate"],"kwargs":{"prompt":{"lc":1,"type":"constructor","id":["langchain","prompts","prompt","PromptTemplate"],"kwargs":{"input_variables":["examples"],"template":"You
      are a world-class competitive programmer.\nPlease reply with a Python 3 solution
      to the problem below. \nFirst, reason through the problem and conceptualize
      a solution.\nThen write detailed pseudocode to uncover any potential logical
      errors or omissions.\nFinally output the working Python code for your solution,
      ensuring to fix any errors uncovered while writing pseudocode.\n\nNo outside
      libraries are allowed.{examples}","template_format":"f-string"},"name":"PromptTemplate"}}},{"lc":1,"type":"constructor","id":["langchain","prompts","chat","MessagesPlaceholder"],"kwargs":{"variable_name":"messages"}}]},"name":"ChatPromptTemplate"},"events":[{"name":"start","time":"2024-09-19T18:13:46.918023+00:00"},{"name":"end","time":"2024-09-19T18:13:46.918356+00:00"}],"reference_example_id":null,"parent_run_id":"c8a57317-b060-4472-a781-406602ff983b","tags":["seq:step:1"],"trace_id":"c8a57317-b060-4472-a781-406602ff983b","dotted_order":"20240919T181346916826Zc8a57317-b060-4472-a781-406602ff983b.20240919T181346918023Z642013db-a402-4449-af05-ff03b6942840","outputs":{"output":{"messages":[{"content":"You
      are a world-class competitive programmer.\nPlease reply with a Python 3 solution
      to the problem below. \nFirst, reason through the problem and conceptualize
      a solution.\nThen write detailed pseudocode to uncover any potential logical
      errors or omissions.\nFinally output the working Python code for your solution,
      ensuring to fix any errors uncovered while writing pseudocode.\n\nNo outside
      libraries are allowed.","additional_kwargs":{},"response_metadata":{},"type":"system"},{"content":"How
      do I get a perfectly random sample from an infinite stream","additional_kwargs":{},"response_metadata":{},"type":"human"}]}},"session_name":"default","name":"ChatPromptTemplate","inputs":{"messages":[["user","How
      do I get a perfectly random sample from an infinite stream"]]},"run_type":"prompt"},{"id":"a27129e5-b88c-49a1-9e70-a7ef24c6124d","start_time":"2024-09-19T18:13:46.918637+00:00","end_time":null,"extra":{"invocation_params":{"model":"claude-3-opus-20240229","max_tokens":1024,"temperature":null,"top_k":null,"top_p":null,"model_kwargs":{},"streaming":false,"max_retries":2,"default_request_timeout":null,"_type":"anthropic-chat","stop":null,"tools":[{"name":"writePython","description":"Write
      python code that resolves the problem.","input_schema":{"properties":{"reasoning":{"description":"Conceptual
      solution.","type":"string"},"pseudocode":{"description":"Detailed English pseudocode.","type":"string"},"code":{"description":"Valid
      Python 3 solution to the problem","type":"string"}},"required":["reasoning","pseudocode","code"],"type":"object"}}]},"options":{"stop":null},"batch_size":1,"metadata":{"ls_provider":"anthropic","ls_model_name":"claude-3-opus-20240229","ls_model_type":"chat","ls_temperature":null,"ls_max_tokens":1024,"revision_id":"checkpoint==1.0.10-68-g22fa527b-dirty"},"runtime":{"sdk":"langsmith-py","sdk_version":"0.1.123","library":"langchain-core","platform":"macOS-14.5-arm64-arm-64bit","runtime":"python","py_implementation":"CPython","runtime_version":"3.12.4","langchain_version":"0.3.0","langchain_core_version":"0.3.1","library_version":"0.3.1"}},"error":null,"serialized":{"lc":1,"type":"constructor","id":["langchain","chat_models","anthropic","ChatAnthropic"],"kwargs":{"model":"claude-3-opus-20240229","max_tokens":1024,"max_retries":2,"anthropic_api_url":"https://api.anthropic.com","anthropic_api_key":{"lc":1,"type":"secret","id":["ANTHROPIC_API_KEY"]},"stream_usage":true},"name":"ChatAnthropic"},"events":[{"name":"start","time":"2024-09-19T18:13:46.918637+00:00"}],"reference_example_id":null,"parent_run_id":"c8a57317-b060-4472-a781-406602ff983b","tags":["seq:step:2"],"trace_id":"c8a57317-b060-4472-a781-406602ff983b","dotted_order":"20240919T181346916826Zc8a57317-b060-4472-a781-406602ff983b.20240919T181346918637Za27129e5-b88c-49a1-9e70-a7ef24c6124d","outputs":null,"session_name":"default","name":"ChatAnthropic","inputs":{"messages":[[{"lc":1,"type":"constructor","id":["langchain","schema","messages","SystemMessage"],"kwargs":{"content":"You
      are a world-class competitive programmer.\nPlease reply with a Python 3 solution
      to the problem below. \nFirst, reason through the problem and conceptualize
      a solution.\nThen write detailed pseudocode to uncover any potential logical
      errors or omissions.\nFinally output the working Python code for your solution,
      ensuring to fix any errors uncovered while writing pseudocode.\n\nNo outside
      libraries are allowed.","type":"system"}},{"lc":1,"type":"constructor","id":["langchain","schema","messages","HumanMessage"],"kwargs":{"content":"How
      do I get a perfectly random sample from an infinite stream","type":"human"}}]]},"run_type":"llm"}]}'
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6905'
      Content-Type:
      - application/json
      User-Agent:
      - langsmith-py/0.1.123
    method: POST
    uri: https://api.smith.langchain.com/runs/batch
  response:
    body:
      string: '{"detail":"Monthly unique traces usage limit exceeded"}'
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Headers:
      - '*'
      Access-Control-Allow-Methods:
      - '*'
      Access-Control-Allow-Origin:
      - ''
      Access-Control-Expose-Headers:
      - '*'
      Access-Control-Max-Age:
      - '600'
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '55'
      Via:
      - 1.1 google
      content-type:
      - application/json
      date:
      - Thu, 19 Sep 2024 18:13:46 GMT
      server:
      - uvicorn
    status:
      code: 429
      message: Too Many Requests
- request:
    body: '{"max_tokens": 1024, "messages": [{"role": "user", "content": "How do I
      get a perfectly random sample from an infinite stream"}], "model": "claude-3-opus-20240229",
      "system": "You are a world-class competitive programmer.\nPlease reply with
      a Python 3 solution to the problem below. \nFirst, reason through the problem
      and conceptualize a solution.\nThen write detailed pseudocode to uncover any
      potential logical errors or omissions.\nFinally output the working Python code
      for your solution, ensuring to fix any errors uncovered while writing pseudocode.\n\nNo
      outside libraries are allowed.", "tools": [{"name": "writePython", "description":
      "Write python code that resolves the problem.", "input_schema": {"properties":
      {"reasoning": {"description": "Conceptual solution.", "type": "string"}, "pseudocode":
      {"description": "Detailed English pseudocode.", "type": "string"}, "code": {"description":
      "Valid Python 3 solution to the problem", "type": "string"}}, "required": ["reasoning",
      "pseudocode", "code"], "type": "object"}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      anthropic-version:
      - '2023-06-01'
      connection:
      - keep-alive
      content-length:
      - '1033'
      content-type:
      - application/json
      host:
      - api.anthropic.com
      user-agent:
      - Anthropic/Python 0.34.2
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 0.34.2
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.4
    method: POST
    uri: https://api.anthropic.com/v1/messages
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xWf2/bRgz9KsT9layK6yRdgxrNgKLDhgJbMGDFUCAOkrNES7RPPOXuFMcJ8t0H
        nn5Y8pJsAxoYkX0meeR7fKQfFWVqpkqfX0+Pz9L7bPFhs7n9kb69r05OP/9cO/xNJSpsKxQr9F7n
        qBLlrJED7T35oDmoRJU2Q6NmKjW6zvDo9MhWtT86mZ68m56cfFCJSi0H5KBml49dwID34hofM/Ux
        FMRr4vynOf9iHYSCPFTOLgyWCYQCwaHBO80BgrUGyMPGUcA/tqGwfHA4ga/R5rYmhxlU2ukSAzoP
        2sm59paJ8wQqj3VmU5thApozkHeTOc9Z/FPLKVah1ga8NXUgy3DQOx9CsJBjCMQ5aKjQLTENZgtO
        c2ZL8LqsDMLS2RI0A/GSmAKCDw51KSkHC7WXdDy6O0uucSHOJX3yUGrioIk9aJir3myuQDunt2CX
        EYq0dg45tBc2dQhWekGGfKBUG8kKK6NT9IAGS+TggbhFsrt+Q6EAxs3OJCYvRk3SCfg6LSAUOoC8
        eAuVJSFhFEfobdMOrsY9QNqsWxi8haV2PeQ7PmBp3TPQwMbWJgNj7Rq8LVEaJQdDa5zN+XgCX5gC
        aUMPKKBjWYXtIEqPmxeDNcz5ZAJNgyEsyfkA61eqX9U+gM4yOSyFvlHdcz5tgqFOC/D1wuNtLcQI
        rG3Q/ZizOQPAEfyKjE4HBN2hRRwwRwcrWGDYIDJMI7PUenxZwgo+wjrpmI1RV4OrWqD3+JUjebb4
        t8ZzfjeBTwNKkz3fBrkBsy/1+4jejtZeNE1z7kiunL2jDAHZ1nkhIrGu1FFpwQJJxFiLhkbaOyEu
        W9aaMJ3AJ3BhhSESG23idPBg3SiyzABGzDCLfffxbT9t1FOym0jWmuvay4yLg1E+19fT49Pft/xt
        dfYpFGf39xd/rfzX8Dk8qESxLsVvMIjElas6qNmj6iFQM/U1Do7XQWw79IXxkcAGIdUcB8iYqV4p
        2uTWUSjKdpxsrFt7WGz7udIMrhcmS3t/o3Wz0Vs/ZP81Sff68dK1A4G/JLRYjBeyty+rK450TiLv
        rwgsxsr/oSauy8VzYpo0OiIPBr2XalkktcHvoqpY9VhVMfUu1gAgKHQWJ9atrJv1W9qN8BD5WKDQ
        tT+zE3H/H9N31ArLRhfDvvKwwFR3TbWXQgOJpLG7rSc7w1RaHD1oD6V1uPtK9CalJrDQRnOMYOtm
        axBHNznqNgI94EQlajcl1Ezd3NzMeVlzGgXcX/9nLOqg08T6sJmng/zO40Lb6+rGKJbfCGwq7bY+
        Om7dRyEu6QrO2+Qu6aqxaP4TnHfBNgWZXgHFPgSDuB33kth9GO+Fbmh2tis4318Hzy2D+EftPhhc
        NS5jJWX04753g3MgeAPHu6MOwlA7Hm63m5ub+NstEkJlZV1os5M2z3C5M772/4GYywvLeAU/dBAO
        WSGW0Dke9J7PcCIAtlcc7qcfqRnG7IAmHq3ePZwn8iAOB9ME6PA7oPvm/N+hVU9PV4nywVbXzZYY
        b5/4RTPqUlQzro1JVB1/fs8emwVzHewa2avZ2fvjRNk6jM6mH56e/gYAAP//AwDg3zl73gsAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c5b8d391d0bce3c-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Sep 2024 18:14:13 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Robots-Tag:
      - none
      request-id:
      - req_01N3s5aF9a1qysW4p1AmPcyS
      via:
      - 1.1 google
      x-cloud-trace-context:
      - cb1bd48010d292f511f3d5c3cd001602
    status:
      code: 200
      message: OK
version: 1
